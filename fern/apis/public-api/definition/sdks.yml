service:
  base-path: /sdks
  auth: true
  endpoints:
    generate:
      path: /generate
      display-name: Generate SDKs
      docs: Generate an SDK for your API defined at the url provided
      method: POST
      request:
        name: GenerateSDKRequest
        body: 
          properties: 
            definitionType: DefinitionType
            definition: 
              type: string
              docs: A URL to your API Definition.
            sdks: 
              type: list<SDKGenerateRequest>
              docs: |
                The SDKs to generate. Atleast 1 SDK must be specified.
      response: GenerateSDKResponse
      examples: 
        - name: GenerateSDKRequest
          request: 
            definitionType: OpenAPI
            definition: https://petstore.swagger.io/v2/swagger.json
            sdks: 
              - language: typescript
                packageName: petstore
                npmToken: <NPM_TOKEN>
                config: 
                  bundled: true
              - language: python
                pypiUrl: https://pypi.buildwithfern.com
                packageName: petstore
                pypiToken: <PYPI_TOKEN>
          response: 
            body: 
              generationID: 123e4567-e89b-12d3-a456-426614174000
              status: pending
    
    getGenerationStatus:
      display-name: Get SDK generation status
      path: /generate/{generationId}
      docs: Get the status of an SDK generation request
      method: GET
      path-parameters: 
        generationId: 
          type: uuid
          docs: |
            The ID of the generation request.
      response: GenerationStatusResponse

types:
  DefinitionType: 
    enum: 
      - name: OPEN_API
        value: OpenAPI
      - name: GRPC
        value: gRPC
      - name: FERN_DEFINITION
        value: Fern
      - name: AsyncAPI
        value: AsyncAPI
  
  GenerationStatusResponse: 
    properties: 
      status: 
        type: SDKGenerationStatus
        docs: |
          The status of the generation request.
  
  SDKGenerateRequest: 
    discriminant: language
    base-properties: 
      generatorVersion: 
        type: optional<string>
        docs: |
          The version of the SDK generator to use. If unspecified, the latest 
          version will be used.
      packageVersion: 
        type: optional<string>
        docs: |
          The version of the published package. If unspecified, the latest 
          version will be used.
    union: 
      typescript: TypeScriptSDKGenerateRequest
      go: GoSDKGenerateRequest
      java: JavaSDKGenerateRequest
      python: PythonSDKGenerateRequest
      ruby: RubySDKGenerateRequest
      csharp: CSharpSDKGenerateRequest
  
  GenerateSDKResponse: 
    properties: 
      generationID: 
        type: uuid
        docs: |
          The ID of the generation request. Use this ID to check the status of 
          the generation request.
      status: 
        type: SDKGenerationStatus
        docs: |
          The status of the generation request.
  
  SDKGenerationStatus:
    enum:
      - pending
      - generating
      - completed
  
  TypeScriptSDKGenerateRequest: 
    properties: 
      packageName: 
        type: string
        docs: |
          The npm package name for the generated SDK.
      npmUrl: 
        type: optional<string>
        docs: |
          The URL to the npm registry where the package is published.
          Defaults to the public npm registry.
      npmToken: 
        type: string
        docs: |
          The npm token to use to publish the package. 
      config: TypeScriptSDKConfig

  TypeScriptSDKConfig: 
    properties: 
      customFetcher: 
        type: optional<boolean>
        docs: | 
          Whether to allow custom fetcher for the SDK.
          Defaults to false.
      validation: 
        type: optional<boolean>
        docs: | 
          Whether to enable validation for the SDK.
          Defaults to false.
      bundled: 
        type: optional<boolean>
        docs: | 
          Whether to bundle the SDK.
          Defaults to false.

  GoSDKGenerateRequest:
    properties: 
      packageName: 
        type: string
        docs: |
          The go package name for the generated SDK.

  
  JavaSDKGenerateRequest:
    properties: 
      groupId: 
        type: string
        docs: |
          The maven groupId for the generated SDK.
      artifactId: 
        type: string
        docs: |
          The maven artifactId for the generated SDK.
      mavenUrl: 
        type: optional<string>
        docs: |
          The URL to the maven repository where the package is published.
          Defaults to the public maven repository.
      mavenUsername: 
        type: optional<string>
        docs: |
          The maven username to use to publish the package.
      mavenPassword: 
        type: optional<string>
        docs: |
          The maven password to use to publish the package.
  
  PythonSDKGenerateRequest:
    properties: 
      packageName: 
        type: string
        docs: |
          The pypi package name for the generated SDK.
      pypiUrl:
        type: optional<string>
        docs: |
          The URL to the pypi registry where the package is published.
          Defaults to the public pypi registry.
      pypiToken:
        type: string
        docs: |
          The pypi token to use to publish the package.
  
  RubySDKGenerateRequest:
    properties: 
      gemName: 
        type: string
        docs: |
          The ruby gem package name for the generated SDK.
      gemUrl:
        type: string
        docs: |
          The URL to the ruby gem registry where the package is published.
          Defaults to the public ruby gem registry.
      gemToken:
        type: string
        docs: |
          The ruby gem token to use to publish the package.

  CSharpSDKGenerateRequest: 
    properties: 
      packageName: 
        type: string
        docs: |
          The nuget package name for the generated SDK.
      nugetUrl: 
        type: string
        docs: |
          The URL to the nuget registry where the package is published.
          Defaults to the public nuget registry.
      nugetToken: 
        type: string
        docs: |
          The nuget token to use to publish the package.
