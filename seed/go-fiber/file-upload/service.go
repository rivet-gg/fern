// This file was auto-generated by Fern from our API Definition.

package fileupload

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/file-upload/fern/core"
)

type JustFileWithQueryParamsRequet struct {
	MaybeString           *string   `query:"maybeString"`
	Integer               int       `query:"integer"`
	MaybeInteger          *int      `query:"maybeInteger"`
	ListOfStrings         []string  `query:"listOfStrings"`
	OptionalListOfStrings []*string `query:"optionalListOfStrings"`
}

type MyRequest struct {
	MaybeString           *string     `json:"maybeString,omitempty" url:"-"`
	Integer               int         `json:"integer" url:"-"`
	MaybeInteger          *int        `json:"maybeInteger,omitempty" url:"-"`
	OptionalListOfStrings []string    `json:"optionalListOfStrings,omitempty" url:"-"`
	ListOfObjects         []*MyObject `json:"listOfObjects,omitempty" url:"-"`
}

type MyObject struct {
	Foo string `json:"foo" url:"foo"`

	extraProperties map[string]interface{}
}

func (m *MyObject) GetExtraProperties() map[string]interface{} {
	return m.extraProperties
}

func (m *MyObject) UnmarshalJSON(data []byte) error {
	type unmarshaler MyObject
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*m = MyObject(value)

	extraProperties, err := core.ExtractExtraProperties(data, *m)
	if err != nil {
		return err
	}
	m.extraProperties = extraProperties

	return nil
}

func (m *MyObject) String() string {
	if value, err := core.StringifyJSON(m); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", m)
}
