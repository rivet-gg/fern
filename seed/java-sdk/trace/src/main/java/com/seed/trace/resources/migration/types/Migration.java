/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace.resources.migration.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.trace.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = Migration.Builder.class)
public final class Migration {
    private final String name;

    private final MigrationStatus status;

    private final Map<String, Object> additionalProperties;

    private Migration(String name, MigrationStatus status, Map<String, Object> additionalProperties) {
        this.name = name;
        this.status = status;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("status")
    public MigrationStatus getStatus() {
        return status;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Migration && equalTo((Migration) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Migration other) {
        return name.equals(other.name) && status.equals(other.status);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.name, this.status);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        StatusStage name(String name);

        Builder from(Migration other);
    }

    public interface StatusStage {
        _FinalStage status(MigrationStatus status);
    }

    public interface _FinalStage {
        Migration build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, StatusStage, _FinalStage {
        private String name;

        private MigrationStatus status;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Migration other) {
            name(other.getName());
            status(other.getStatus());
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public StatusStage name(String name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("status")
        public _FinalStage status(MigrationStatus status) {
            this.status = status;
            return this;
        }

        @java.lang.Override
        public Migration build() {
            return new Migration(name, status, additionalProperties);
        }
    }
}
