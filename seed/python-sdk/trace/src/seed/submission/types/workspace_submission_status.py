# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...core.pydantic_utilities import pydantic_v1
from .error_info import ErrorInfo
from .running_submission_state import RunningSubmissionState
from .workspace_run_details import WorkspaceRunDetails


class WorkspaceSubmissionStatus_Stopped(pydantic_v1.BaseModel):
    type: typing.Literal["stopped"] = "stopped"

    class Config:
        frozen = True
        smart_union = True


class WorkspaceSubmissionStatus_Errored(pydantic_v1.BaseModel):
    type: typing.Literal["errored"] = "errored"
    value: ErrorInfo

    class Config:
        frozen = True
        smart_union = True


class WorkspaceSubmissionStatus_Running(pydantic_v1.BaseModel):
    type: typing.Literal["running"] = "running"
    value: RunningSubmissionState

    class Config:
        frozen = True
        smart_union = True


class WorkspaceSubmissionStatus_Ran(WorkspaceRunDetails):
    type: typing.Literal["ran"] = "ran"

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class WorkspaceSubmissionStatus_Traced(WorkspaceRunDetails):
    type: typing.Literal["traced"] = "traced"

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


WorkspaceSubmissionStatus = typing.Union[
    WorkspaceSubmissionStatus_Stopped,
    WorkspaceSubmissionStatus_Errored,
    WorkspaceSubmissionStatus_Running,
    WorkspaceSubmissionStatus_Ran,
    WorkspaceSubmissionStatus_Traced,
]
