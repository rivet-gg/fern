# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...commons.types.file_info import FileInfo
from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import pydantic_v1


class ProblemFiles(pydantic_v1.BaseModel):
    solution_file: FileInfo = pydantic_v1.Field(alias="solutionFile")
    read_only_files: typing.List[FileInfo] = pydantic_v1.Field(alias="readOnlyFiles")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
