/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";
import { Foo } from "./Foo";
import { Bar } from "./Bar";

export const Union: core.serialization.Schema<serializers.Union.Raw, SeedUnions.Union> = core.serialization.union("type", {
        "foo": core.serialization.object({
            "foo": Foo
        }),
        "bar": core.serialization.object({
            "bar": Bar
        })
    }).transform<SeedUnions.Union>({
        transform: value => value,
        untransform: value => value
    });

export declare namespace Union {
    type Raw = Union.Foo | Union.Bar;

    interface Foo {
        "type": "foo";
        "foo": Foo.Raw;
    }

    interface Bar {
        "type": "bar";
        "bar": Bar.Raw;
    }
}
