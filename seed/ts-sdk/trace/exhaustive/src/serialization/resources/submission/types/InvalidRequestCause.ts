/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedTrace from "../../../../api/index";
import * as core from "../../../../core";
import { SubmissionIdNotFound } from "./SubmissionIdNotFound";
import { CustomTestCasesUnsupported } from "./CustomTestCasesUnsupported";
import { UnexpectedLanguageError } from "./UnexpectedLanguageError";

export const InvalidRequestCause: core.serialization.Schema<
    serializers.InvalidRequestCause.Raw,
    SeedTrace.InvalidRequestCause
> = core.serialization
    .union("type", {
        submissionIdNotFound: SubmissionIdNotFound,
        customTestCasesUnsupported: CustomTestCasesUnsupported,
        unexpectedLanguage: UnexpectedLanguageError,
    })
    .transform<SeedTrace.InvalidRequestCause>({
        transform: (value) => {
            switch (value.type) {
                case "submissionIdNotFound":
                    return SeedTrace.InvalidRequestCause.submissionIdNotFound(value);
                case "customTestCasesUnsupported":
                    return SeedTrace.InvalidRequestCause.customTestCasesUnsupported(value);
                case "unexpectedLanguage":
                    return SeedTrace.InvalidRequestCause.unexpectedLanguage(value);
                default:
                    return SeedTrace.InvalidRequestCause._unknown(value);
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace InvalidRequestCause {
    type Raw =
        | InvalidRequestCause.SubmissionIdNotFound
        | InvalidRequestCause.CustomTestCasesUnsupported
        | InvalidRequestCause.UnexpectedLanguage;

    interface SubmissionIdNotFound extends SubmissionIdNotFound.Raw {
        type: "submissionIdNotFound";
    }

    interface CustomTestCasesUnsupported extends CustomTestCasesUnsupported.Raw {
        type: "customTestCasesUnsupported";
    }

    interface UnexpectedLanguage extends UnexpectedLanguageError.Raw {
        type: "unexpectedLanguage";
    }
}
