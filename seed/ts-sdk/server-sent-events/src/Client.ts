/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core";
import { Completions } from "./api/resources/completions/client/Client";

export declare namespace SeedServerSentEventsClient {
    interface Options {
        environment: core.Supplier<string>;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}

export class SeedServerSentEventsClient {
    constructor(protected readonly _options: SeedServerSentEventsClient.Options) {
    }

    protected _completions: Completions | undefined;

    public get completions(): Completions {
        return (this._completions ??= new Completions(this._options));
    }
}
