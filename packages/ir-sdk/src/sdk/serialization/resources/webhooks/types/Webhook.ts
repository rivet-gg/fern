/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const Webhook: core.serialization.ObjectSchema<serializers.Webhook.Raw, FernIr.Webhook> = core.serialization
    .objectWithoutOptionalProperties({
        id: core.serialization.lazy(async () => (await import("../../..")).WebhookId),
        name: core.serialization.lazyObject(async () => (await import("../../..")).WebhookName),
        displayName: core.serialization.string().optional(),
        method: core.serialization.lazy(async () => (await import("../../..")).WebhookHttpMethod),
        headers: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).HttpHeader)
        ),
        payload: core.serialization.lazy(async () => (await import("../../..")).WebhookPayload),
        examples: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ExampleWebhookCall))
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).Declaration));

export declare namespace Webhook {
    interface Raw extends serializers.Declaration.Raw {
        id: serializers.WebhookId.Raw;
        name: serializers.WebhookName.Raw;
        displayName?: string | null;
        method: serializers.WebhookHttpMethod.Raw;
        headers: serializers.HttpHeader.Raw[];
        payload: serializers.WebhookPayload.Raw;
        examples?: serializers.ExampleWebhookCall.Raw[] | null;
    }
}
