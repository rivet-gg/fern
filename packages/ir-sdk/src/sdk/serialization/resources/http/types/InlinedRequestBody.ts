/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const InlinedRequestBody: core.serialization.ObjectSchema<
    serializers.InlinedRequestBody.Raw,
    FernIr.InlinedRequestBody
> = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(async () => (await import("../../..")).Name),
    extends: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).DeclaredTypeName)
    ),
    properties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).InlinedRequestBodyProperty)
    ),
    extendedProperties: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).ObjectProperty))
        .optional(),
    contentType: core.serialization.string().optional(),
    extraProperties: core.serialization.property("extra-properties", core.serialization.boolean()),
});

export declare namespace InlinedRequestBody {
    interface Raw {
        name: serializers.Name.Raw;
        extends: serializers.DeclaredTypeName.Raw[];
        properties: serializers.InlinedRequestBodyProperty.Raw[];
        extendedProperties?: serializers.ObjectProperty.Raw[] | null;
        contentType?: string | null;
        "extra-properties": boolean;
    }
}
