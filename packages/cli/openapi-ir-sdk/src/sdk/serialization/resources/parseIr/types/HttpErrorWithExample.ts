/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const HttpErrorWithExample: core.serialization.ObjectSchema<
    serializers.HttpErrorWithExample.Raw,
    FernOpenapiIr.HttpErrorWithExample
> = core.serialization
    .objectWithoutOptionalProperties({
        statusCode: core.serialization.lazy(async () => (await import("../../..")).StatusCode),
        schema: core.serialization.lazy(async () => (await import("../../..")).SchemaWithExample),
        fullExamples: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).NamedFullExample))
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription))
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithName));

export declare namespace HttpErrorWithExample {
    interface Raw extends serializers.WithDescription.Raw, serializers.WithName.Raw {
        statusCode: serializers.StatusCode.Raw;
        schema: serializers.SchemaWithExample.Raw;
        fullExamples?: serializers.NamedFullExample.Raw[] | null;
    }
}
