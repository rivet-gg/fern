// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`seam seam docs 1`] = `
{
  "definitionFiles": {
    "accessCodes.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/access_codes/create",
            "docs": undefined,
            "errors": [
              "root.AccessCodesCreateRequestBadRequestError",
              "root.AccessCodesCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/create",
            "request": {
              "body": {
                "properties": {
                  "allow_external_modification": "optional<boolean>",
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 9,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "common_code_key": "optional<string>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_at": "optional<string>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_offline_access_code": "optional<boolean>",
                  "is_one_time_use": "optional<boolean>",
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "optional<AccessCodesCreateRequestMaxTimeRounding>",
                  },
                  "name": "optional<string>",
                  "prefer_native_scheduling": "optional<boolean>",
                  "starts_at": "optional<string>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "use_backup_access_code_pool": "optional<boolean>",
                  "use_offline_access_code": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "AccessCodesCreateResponse",
            },
          },
          "create_multiple": {
            "auth": true,
            "display-name": "/access_codes/create_multiple",
            "docs": undefined,
            "errors": [
              "root.AccessCodesCreateMultipleRequestBadRequestError",
              "root.AccessCodesCreateMultipleRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_ids": [
                    "device_ids",
                  ],
                },
                "response": {
                  "body": {
                    "access_codes": [
                      {
                        "access_code_id": "access_code_id",
                        "code": "code",
                        "common_code_key": "common_code_key",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "ends_at": "2024-01-15T09:30:00Z",
                        "errors": {
                          "key": "value",
                        },
                        "is_backup": true,
                        "is_backup_access_code_available": true,
                        "is_external_modification_allowed": true,
                        "is_managed": true,
                        "is_offline_access_code": true,
                        "is_one_time_use": true,
                        "is_scheduled_on_device": true,
                        "is_waiting_for_code_assignment": true,
                        "name": "name",
                        "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                        "starts_at": "2024-01-15T09:30:00Z",
                        "status": "setting",
                        "type": "time_bound",
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/create_multiple",
            "request": {
              "body": {
                "properties": {
                  "allow_external_modification": "optional<boolean>",
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "behavior_when_code_cannot_be_shared": {
                    "default": "throw",
                    "type": "optional<AccessCodesCreateMultipleRequestBehaviorWhenCodeCannotBeShared>",
                  },
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 9,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "device_ids": "list<string>",
                  "ends_at": "optional<string>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_offline_access_code": "optional<boolean>",
                  "is_one_time_use": "optional<boolean>",
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "optional<AccessCodesCreateMultipleRequestMaxTimeRounding>",
                  },
                  "name": "optional<string>",
                  "prefer_native_scheduling": "optional<boolean>",
                  "preferred_code_length": "optional<double>",
                  "starts_at": "optional<string>",
                  "use_backup_access_code_pool": "optional<boolean>",
                  "use_offline_access_code": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesCreateMultipleRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_codes",
              "type": "AccessCodesCreateMultipleResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/access_codes/delete",
            "docs": undefined,
            "errors": [
              "root.AccessCodesDeleteRequestBadRequestError",
              "root.AccessCodesDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/delete",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessCodesDeleteResponse",
            },
          },
          "generate_code": {
            "auth": true,
            "display-name": "/access_codes/generate_code",
            "docs": undefined,
            "errors": [
              "root.AccessCodesGenerateCodeRequestBadRequestError",
              "root.AccessCodesGenerateCodeRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "generated_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/generate_code",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesGenerateCodeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "generated_code",
              "type": "AccessCodesGenerateCodeResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/access_codes/get",
            "docs": undefined,
            "errors": [
              "root.AccessCodesGetRequestBadRequestError",
              "root.AccessCodesGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/get",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "code": "optional<string>",
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "AccessCodesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/access_codes/list",
            "docs": undefined,
            "errors": [
              "root.AccessCodesListRequestBadRequestError",
              "root.AccessCodesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "access_codes": [
                      {
                        "access_code_id": "access_code_id",
                        "code": "code",
                        "common_code_key": "common_code_key",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "ends_at": "2024-01-15T09:30:00Z",
                        "errors": {
                          "key": "value",
                        },
                        "is_backup": true,
                        "is_backup_access_code_available": true,
                        "is_external_modification_allowed": true,
                        "is_managed": true,
                        "is_offline_access_code": true,
                        "is_one_time_use": true,
                        "is_scheduled_on_device": true,
                        "is_waiting_for_code_assignment": true,
                        "name": "name",
                        "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                        "starts_at": "2024-01-15T09:30:00Z",
                        "status": "setting",
                        "type": "time_bound",
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/list",
            "request": {
              "body": {
                "properties": {
                  "access_code_ids": "optional<list<string>>",
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_codes",
              "type": "AccessCodesListResponse",
            },
          },
          "pull_backup_access_code": {
            "auth": true,
            "display-name": "/access_codes/pull_backup_access_code",
            "docs": undefined,
            "errors": [
              "root.AccessCodesPullBackupAccessCodeRequestBadRequestError",
              "root.AccessCodesPullBackupAccessCodeRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "backup_access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/pull_backup_access_code",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesPullBackupAccessCodeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "backup_access_code",
              "type": "AccessCodesPullBackupAccessCodeResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/access_codes/update",
            "docs": undefined,
            "errors": [
              "root.AccessCodesUpdateRequestBadRequestError",
              "root.AccessCodesUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/update",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allow_external_modification": "optional<boolean>",
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 9,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_at": "optional<string>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_managed": "optional<boolean>",
                  "is_offline_access_code": "optional<boolean>",
                  "is_one_time_use": "optional<boolean>",
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "optional<AccessCodesUpdateRequestMaxTimeRounding>",
                  },
                  "name": "optional<string>",
                  "prefer_native_scheduling": "optional<boolean>",
                  "starts_at": "optional<string>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "type": "optional<AccessCodesUpdateRequestType>",
                  "use_backup_access_code_pool": "optional<boolean>",
                  "use_offline_access_code": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessCodesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "AccessCodesCreateMultipleRequestBehaviorWhenCodeCannotBeShared": {
          "default": "throw",
          "enum": [
            "throw",
            "create_random_code",
          ],
        },
        "AccessCodesCreateMultipleRequestMaxTimeRounding": {
          "default": "1hour",
          "enum": [
            {
              "name": "OneHour",
              "value": "1hour",
            },
            {
              "name": "OneDay",
              "value": "1day",
            },
            {
              "name": "OneH",
              "value": "1h",
            },
            {
              "name": "OneD",
              "value": "1d",
            },
          ],
        },
        "AccessCodesCreateMultipleResponse": {
          "docs": undefined,
          "properties": {
            "access_codes": "list<root.AccessCode>",
            "ok": "boolean",
          },
        },
        "AccessCodesCreateRequestMaxTimeRounding": {
          "default": "1hour",
          "enum": [
            {
              "name": "OneHour",
              "value": "1hour",
            },
            {
              "name": "OneDay",
              "value": "1day",
            },
            {
              "name": "OneH",
              "value": "1h",
            },
            {
              "name": "OneD",
              "value": "1d",
            },
          ],
        },
        "AccessCodesCreateResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.AccessCode",
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "AccessCodesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "AccessCodesGenerateCodeResponse": {
          "docs": undefined,
          "properties": {
            "generated_code": "root.AccessCode",
            "ok": "boolean",
          },
        },
        "AccessCodesGetResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.AccessCode",
            "ok": "boolean",
          },
        },
        "AccessCodesListResponse": {
          "docs": undefined,
          "properties": {
            "access_codes": "list<root.AccessCode>",
            "ok": "boolean",
          },
        },
        "AccessCodesPullBackupAccessCodeResponse": {
          "docs": undefined,
          "properties": {
            "backup_access_code": "root.AccessCode",
            "ok": "boolean",
          },
        },
        "AccessCodesUpdateRequestMaxTimeRounding": {
          "default": "1hour",
          "enum": [
            {
              "name": "OneHour",
              "value": "1hour",
            },
            {
              "name": "OneDay",
              "value": "1day",
            },
            {
              "name": "OneH",
              "value": "1h",
            },
            {
              "name": "OneD",
              "value": "1d",
            },
          ],
        },
        "AccessCodesUpdateRequestType": {
          "enum": [
            "ongoing",
            "time_bound",
          ],
        },
        "AccessCodesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
    "accessCodes/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create_unmanaged_access_code": {
            "auth": true,
            "display-name": "/access_codes/simulate/create_unmanaged_access_code",
            "docs": undefined,
            "errors": [
              "root.SimulateCreateUnmanagedAccessCodeRequestBadRequestError",
              "root.SimulateCreateUnmanagedAccessCodeRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "code": "code",
                  "device_id": "device_id",
                  "name": "name",
                },
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_managed": true,
                      "name": "name",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "set",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/simulate/create_unmanaged_access_code",
            "request": {
              "body": {
                "properties": {
                  "code": {
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": 8,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "string",
                },
              },
              "headers": undefined,
              "name": "SimulateCreateUnmanagedAccessCodeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "SimulateCreateUnmanagedAccessCodeResponse",
            },
          },
        },
      },
      "types": {
        "SimulateCreateUnmanagedAccessCodeResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.UnmanagedAccessCode",
            "ok": "boolean",
          },
        },
      },
    },
    "accessCodes/unmanaged.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "convert_to_managed": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/convert_to_managed",
            "docs": undefined,
            "errors": [
              "root.UnmanagedConvertToManagedRequestBadRequestError",
              "root.UnmanagedConvertToManagedRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/convert_to_managed",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allow_external_modification": "optional<boolean>",
                  "force": "optional<boolean>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "UnmanagedConvertToManagedRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedConvertToManagedResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/delete",
            "docs": undefined,
            "errors": [
              "root.UnmanagedDeleteRequestBadRequestError",
              "root.UnmanagedDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/delete",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "UnmanagedDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/get",
            "docs": undefined,
            "errors": [
              "root.UnmanagedGetRequestBadRequestError",
              "root.UnmanagedGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_managed": true,
                      "name": "name",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "set",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/get",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "code": "optional<string>",
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UnmanagedGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "UnmanagedGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/list",
            "docs": undefined,
            "errors": [
              "root.UnmanagedListRequestBadRequestError",
              "root.UnmanagedListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "access_codes": [
                      {
                        "access_code_id": "access_code_id",
                        "code": "code",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "ends_at": "2024-01-15T09:30:00Z",
                        "errors": {
                          "key": "value",
                        },
                        "is_managed": true,
                        "name": "name",
                        "starts_at": "2024-01-15T09:30:00Z",
                        "status": "set",
                        "type": "time_bound",
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/list",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UnmanagedListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_codes",
              "type": "UnmanagedListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/update",
            "docs": undefined,
            "errors": [
              "root.UnmanagedUpdateRequestBadRequestError",
              "root.UnmanagedUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                  "is_managed": true,
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/update",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allow_external_modification": "optional<boolean>",
                  "force": "optional<boolean>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_managed": "boolean",
                },
              },
              "headers": undefined,
              "name": "UnmanagedUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UnmanagedConvertToManagedResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UnmanagedDeleteResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "UnmanagedGetResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.UnmanagedAccessCode",
            "ok": "boolean",
          },
        },
        "UnmanagedListResponse": {
          "docs": undefined,
          "properties": {
            "access_codes": "list<root.UnmanagedAccessCode>",
            "ok": "boolean",
          },
        },
        "UnmanagedUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "acs/accessGroups.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "add_user": {
            "auth": true,
            "display-name": "/acs/access_groups/add_user",
            "docs": undefined,
            "errors": [
              "root.AccessGroupsAddUserRequestBadRequestError",
              "root.AccessGroupsAddUserRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/add_user",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsAddUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessGroupsAddUserResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/acs/access_groups/get",
            "docs": undefined,
            "errors": [
              "root.AccessGroupsGetRequestBadRequestError",
              "root.AccessGroupsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                },
                "response": {
                  "body": {
                    "acs_access_group": {
                      "access_group_type": "pti_unit",
                      "access_group_type_display_name": "access_group_type_display_name",
                      "acs_access_group_id": "acs_access_group_id",
                      "acs_system_id": "acs_system_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "external_type": "pti_unit",
                      "external_type_display_name": "external_type_display_name",
                      "name": "name",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/get",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_access_group",
              "type": "AccessGroupsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/access_groups/list",
            "docs": undefined,
            "errors": [
              "root.AccessGroupsListRequestBadRequestError",
              "root.AccessGroupsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_access_groups": [
                      {
                        "access_group_type": "pti_unit",
                        "access_group_type_display_name": "access_group_type_display_name",
                        "acs_access_group_id": "acs_access_group_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "external_type": "pti_unit",
                        "external_type_display_name": "external_type_display_name",
                        "name": "name",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/list",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_access_groups",
              "type": "AccessGroupsListResponse",
            },
          },
          "list_users": {
            "auth": true,
            "display-name": "/acs/access_groups/list_users",
            "docs": undefined,
            "errors": [
              "root.AccessGroupsListUsersRequestBadRequestError",
              "root.AccessGroupsListUsersRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                },
                "response": {
                  "body": {
                    "acs_users": [
                      {
                        "access_schedule": {
                          "ends_at": "2024-01-15T09:30:00Z",
                          "starts_at": "2024-01-15T09:30:00Z",
                        },
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email": "email",
                        "email_address": "email_address",
                        "external_type": "pti_user",
                        "external_type_display_name": "external_type_display_name",
                        "full_name": "full_name",
                        "hid_acs_system_id": "hid_acs_system_id",
                        "is_suspended": true,
                        "phone_number": "phone_number",
                        "user_identity_email_address": "user_identity_email_address",
                        "user_identity_full_name": "user_identity_full_name",
                        "user_identity_id": "user_identity_id",
                        "user_identity_phone_number": "user_identity_phone_number",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/list_users",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsListUsersRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_users",
              "type": "AccessGroupsListUsersResponse",
            },
          },
          "remove_user": {
            "auth": true,
            "display-name": "/acs/access_groups/remove_user",
            "docs": undefined,
            "errors": [
              "root.AccessGroupsRemoveUserRequestBadRequestError",
              "root.AccessGroupsRemoveUserRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/remove_user",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsRemoveUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessGroupsRemoveUserResponse",
            },
          },
        },
      },
      "types": {
        "AccessGroupsAddUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "AccessGroupsGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_access_group": "root.AcsAccessGroup",
            "ok": "boolean",
          },
        },
        "AccessGroupsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_access_groups": "list<root.AcsAccessGroup>",
            "ok": "boolean",
          },
        },
        "AccessGroupsListUsersResponse": {
          "docs": undefined,
          "properties": {
            "acs_users": "list<root.AcsUser>",
            "ok": "boolean",
          },
        },
        "AccessGroupsRemoveUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "acs/credentialPools.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "display-name": "/acs/credential_pools/list",
            "docs": undefined,
            "errors": [
              "root.CredentialPoolsListRequestBadRequestError",
              "root.CredentialPoolsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_credential_pools": [
                      {
                        "acs_credential_pool_id": "acs_credential_pool_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "external_type": "hid_part_number",
                        "external_type_display_name": "external_type_display_name",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credential_pools/list",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialPoolsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential_pools",
              "type": "CredentialPoolsListResponse",
            },
          },
        },
      },
      "types": {
        "CredentialPoolsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential_pools": "list<root.AcsCredentialPool>",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/credentialProvisioningAutomations.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "launch": {
            "auth": true,
            "display-name": "/acs/credential_provisioning_automations/launch",
            "docs": undefined,
            "errors": [
              "root.CredentialProvisioningAutomationsLaunchRequestBadRequestError",
              "root.CredentialProvisioningAutomationsLaunchRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "acs_credential_provisioning_automation": {
                      "acs_credential_provisioning_automation_id": "acs_credential_provisioning_automation_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                      "user_identity_id": "user_identity_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credential_provisioning_automations/launch",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_pool_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "create_credential_manager_user": "optional<boolean>",
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "credential_manager_acs_user_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialProvisioningAutomationsLaunchRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential_provisioning_automation",
              "type": "CredentialProvisioningAutomationsLaunchResponse",
            },
          },
        },
      },
      "types": {
        "CredentialProvisioningAutomationsLaunchResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential_provisioning_automation": "root.AcsCredentialProvisioningAutomation",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/credentials.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "assign": {
            "auth": true,
            "display-name": "/acs/credentials/assign",
            "docs": undefined,
            "errors": [
              "root.CredentialsAssignRequestBadRequestError",
              "root.CredentialsAssignRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/assign",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsAssignRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsAssignResponse",
            },
          },
          "create": {
            "auth": true,
            "display-name": "/acs/credentials/create",
            "docs": undefined,
            "errors": [
              "root.CredentialsCreateRequestBadRequestError",
              "root.CredentialsCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_method": "code",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/create",
            "request": {
              "body": {
                "properties": {
                  "access_method": "CredentialsCreateRequestAccessMethod",
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allowed_acs_entrance_ids": "optional<list<string>>",
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^\\d+$",
                    },
                  },
                  "credential_manager_acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_at": "optional<datetime>",
                  "is_multi_phone_sync_credential": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "starts_at": "optional<datetime>",
                  "visionline_metadata": "optional<CredentialsCreateRequestVisionlineMetadata>",
                },
              },
              "headers": undefined,
              "name": "CredentialsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential",
              "type": "CredentialsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/acs/credentials/delete",
            "docs": undefined,
            "errors": [
              "root.CredentialsDeleteRequestBadRequestError",
              "root.CredentialsDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/delete",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/acs/credentials/get",
            "docs": undefined,
            "errors": [
              "root.CredentialsGetRequestBadRequestError",
              "root.CredentialsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/get",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential",
              "type": "CredentialsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/credentials/list",
            "docs": undefined,
            "errors": [
              "root.CredentialsListRequestBadRequestError",
              "root.CredentialsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_credentials": [
                      {
                        "access_method": "code",
                        "acs_credential_id": "acs_credential_id",
                        "acs_credential_pool_id": "acs_credential_pool_id",
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "code": "code",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "ends_at": "ends_at",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "external_type": "pti_card",
                        "external_type_display_name": "external_type_display_name",
                        "is_latest_desired_state_synced_with_provider": true,
                        "is_multi_phone_sync_credential": true,
                        "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                        "parent_acs_credential_id": "parent_acs_credential_id",
                        "starts_at": "starts_at",
                        "visionline_metadata": {
                          "card_function_type": "guest",
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/list",
            "request": {
              "body": {
                "properties": {
                  "is_multi_phone_sync_credential": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "CredentialsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credentials",
              "type": "CredentialsListResponse",
            },
          },
          "list_accessible_entrances": {
            "auth": true,
            "display-name": "/acs/credentials/list_accessible_entrances",
            "docs": undefined,
            "errors": [
              "root.CredentialsListAccessibleEntrancesRequestBadRequestError",
              "root.CredentialsListAccessibleEntrancesRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "acs_entrances": [
                      {
                        "acs_entrance_id": "acs_entrance_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "latch_metadata": {
                          "accessibility_type": "accessibility_type",
                          "door_name": "door_name",
                          "door_type": "door_type",
                          "is_connected": true,
                        },
                        "visionline_metadata": {
                          "door_category": "entrance",
                          "door_name": "door_name",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/list_accessible_entrances",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsListAccessibleEntrancesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrances",
              "type": "CredentialsListAccessibleEntrancesResponse",
            },
          },
          "unassign": {
            "auth": true,
            "display-name": "/acs/credentials/unassign",
            "docs": undefined,
            "errors": [
              "root.CredentialsUnassignRequestBadRequestError",
              "root.CredentialsUnassignRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/unassign",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsUnassignRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsUnassignResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/acs/credentials/update",
            "docs": undefined,
            "errors": [
              "root.CredentialsUpdateRequestBadRequestError",
              "root.CredentialsUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/update",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": "string",
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^\\d+$",
                    },
                  },
                  "ends_at": "optional<datetime>",
                },
              },
              "headers": undefined,
              "name": "CredentialsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "CredentialsAssignResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsCreateRequestAccessMethod": {
          "enum": [
            "code",
            "card",
            "mobile_key",
          ],
        },
        "CredentialsCreateRequestVisionlineMetadata": {
          "docs": undefined,
          "properties": {
            "assa_abloy_credential_service_mobile_endpoint_id": {
              "type": "optional<string>",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "card_format": "optional<CredentialsCreateRequestVisionlineMetadataCardFormat>",
            "card_function_type": {
              "default": "guest",
              "type": "optional<CredentialsCreateRequestVisionlineMetadataCardFunctionType>",
            },
            "is_override_key": {
              "docs": "
          ---
          deprecated: use override.
          ---
        ",
              "type": "optional<boolean>",
            },
            "joiner_acs_credential_ids": "optional<list<string>>",
            "override": "optional<boolean>",
          },
        },
        "CredentialsCreateRequestVisionlineMetadataCardFormat": {
          "enum": [
            "TLCode",
            "rfid48",
          ],
        },
        "CredentialsCreateRequestVisionlineMetadataCardFunctionType": {
          "default": "guest",
          "enum": [
            "guest",
            "staff",
          ],
        },
        "CredentialsCreateResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "CredentialsGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsListAccessibleEntrancesResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrances": "list<root.AcsEntrance>",
            "ok": "boolean",
          },
        },
        "CredentialsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_credentials": "list<root.AcsCredential>",
            "ok": "boolean",
          },
        },
        "CredentialsUnassignResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/entrances.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/acs/entrances/get",
            "docs": undefined,
            "errors": [
              "root.EntrancesGetRequestBadRequestError",
              "root.EntrancesGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_entrance_id": "acs_entrance_id",
                },
                "response": {
                  "body": {
                    "acs_entrance": {
                      "acs_entrance_id": "acs_entrance_id",
                      "acs_system_id": "acs_system_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "latch_metadata": {
                        "accessibility_type": "accessibility_type",
                        "door_name": "door_name",
                        "door_type": "door_type",
                        "is_connected": true,
                      },
                      "visionline_metadata": {
                        "door_category": "entrance",
                        "door_name": "door_name",
                        "profiles": [
                          {
                            "visionline_door_profile_id": "visionline_door_profile_id",
                            "visionline_door_profile_type": "BLE",
                          },
                        ],
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/get",
            "request": {
              "body": {
                "properties": {
                  "acs_entrance_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EntrancesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrance",
              "type": "EntrancesGetResponse",
            },
          },
          "grant_access": {
            "auth": true,
            "display-name": "/acs/entrances/grant_access",
            "docs": undefined,
            "errors": [
              "root.EntrancesGrantAccessRequestBadRequestError",
              "root.EntrancesGrantAccessRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_entrance_id": "acs_entrance_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/grant_access",
            "request": {
              "body": {
                "properties": {
                  "acs_entrance_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EntrancesGrantAccessRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "EntrancesGrantAccessResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/entrances/list",
            "docs": undefined,
            "errors": [
              "root.EntrancesListRequestBadRequestError",
              "root.EntrancesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_entrances": [
                      {
                        "acs_entrance_id": "acs_entrance_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "latch_metadata": {
                          "accessibility_type": "accessibility_type",
                          "door_name": "door_name",
                          "door_type": "door_type",
                          "is_connected": true,
                        },
                        "visionline_metadata": {
                          "door_category": "entrance",
                          "door_name": "door_name",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/list",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EntrancesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrances",
              "type": "EntrancesListResponse",
            },
          },
          "list_credentials_with_access": {
            "auth": true,
            "display-name": "/acs/entrances/list_credentials_with_access",
            "docs": undefined,
            "errors": [
              "root.EntrancesListCredentialsWithAccessRequestBadRequestError",
              "root.EntrancesListCredentialsWithAccessRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_entrance_id": "acs_entrance_id",
                },
                "response": {
                  "body": {
                    "acs_credentials": [
                      {
                        "access_method": "code",
                        "acs_credential_id": "acs_credential_id",
                        "acs_credential_pool_id": "acs_credential_pool_id",
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "code": "code",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "ends_at": "ends_at",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "external_type": "pti_card",
                        "external_type_display_name": "external_type_display_name",
                        "is_latest_desired_state_synced_with_provider": true,
                        "is_multi_phone_sync_credential": true,
                        "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                        "parent_acs_credential_id": "parent_acs_credential_id",
                        "starts_at": "starts_at",
                        "visionline_metadata": {
                          "card_function_type": "guest",
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/list_credentials_with_access",
            "request": {
              "body": {
                "properties": {
                  "acs_entrance_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "include_if": "optional<list<literal<"visionline_metadata.is_valid">>>",
                },
              },
              "headers": undefined,
              "name": "EntrancesListCredentialsWithAccessRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credentials",
              "type": "EntrancesListCredentialsWithAccessResponse",
            },
          },
        },
      },
      "types": {
        "EntrancesGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrance": "root.AcsEntrance",
            "ok": "boolean",
          },
        },
        "EntrancesGrantAccessResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "EntrancesListCredentialsWithAccessResponse": {
          "docs": undefined,
          "properties": {
            "acs_credentials": "list<root.AcsCredential>",
            "ok": "boolean",
          },
        },
        "EntrancesListResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrances": "list<root.AcsEntrance>",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/systems.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/acs/systems/get",
            "docs": undefined,
            "errors": [
              "root.SystemsGetRequestBadRequestError",
              "root.SystemsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_system": {
                      "acs_system_id": "acs_system_id",
                      "can_add_acs_users_to_acs_access_groups": true,
                      "can_automate_enrollment": true,
                      "can_create_acs_access_groups": true,
                      "can_remove_acs_users_from_acs_access_groups": true,
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "errors": [
                        {
                          "created_at": "2024-01-15T09:30:00Z",
                          "error_code": "seam_bridge_disconnected",
                          "message": "errors",
                        },
                      ],
                      "external_type": "pti_site",
                      "external_type_display_name": "external_type_display_name",
                      "image_alt_text": "image_alt_text",
                      "image_url": "image_url",
                      "name": "name",
                      "system_type": "pti_site",
                      "system_type_display_name": "system_type_display_name",
                      "warnings": [
                        {},
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/systems/get",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SystemsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_system",
              "type": "SystemsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/systems/list",
            "docs": undefined,
            "errors": [
              "root.SystemsListRequestBadRequestError",
              "root.SystemsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_systems": [
                      {
                        "acs_system_id": "acs_system_id",
                        "can_add_acs_users_to_acs_access_groups": true,
                        "can_automate_enrollment": true,
                        "can_create_acs_access_groups": true,
                        "can_remove_acs_users_from_acs_access_groups": true,
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "errors": [
                          {
                            "created_at": "2024-01-15T09:30:00Z",
                            "error_code": "seam_bridge_disconnected",
                            "message": "errors",
                          },
                        ],
                        "external_type": "pti_site",
                        "external_type_display_name": "external_type_display_name",
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "name": "name",
                        "system_type": "pti_site",
                        "system_type_display_name": "system_type_display_name",
                        "warnings": [
                          {},
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/systems/list",
            "request": {
              "body": {
                "properties": {
                  "connected_account_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SystemsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_systems",
              "type": "SystemsListResponse",
            },
          },
          "list_compatible_credential_manager_acs_systems": {
            "auth": true,
            "display-name": "/acs/systems/list_compatible_credential_manager_acs_systems",
            "docs": undefined,
            "errors": [
              "root.SystemsListCompatibleCredentialManagerAcsSystemsRequestBadRequestError",
              "root.SystemsListCompatibleCredentialManagerAcsSystemsRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_systems": [
                      {
                        "acs_system_id": "acs_system_id",
                        "can_add_acs_users_to_acs_access_groups": true,
                        "can_automate_enrollment": true,
                        "can_create_acs_access_groups": true,
                        "can_remove_acs_users_from_acs_access_groups": true,
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "errors": [
                          {
                            "created_at": "2024-01-15T09:30:00Z",
                            "error_code": "seam_bridge_disconnected",
                            "message": "errors",
                          },
                        ],
                        "external_type": "pti_site",
                        "external_type_display_name": "external_type_display_name",
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "name": "name",
                        "system_type": "pti_site",
                        "system_type_display_name": "system_type_display_name",
                        "warnings": [
                          {},
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/systems/list_compatible_credential_manager_acs_systems",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SystemsListCompatibleCredentialManagerAcsSystemsRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_systems",
              "type": "SystemsListCompatibleCredentialManagerAcsSystemsResponse",
            },
          },
        },
      },
      "types": {
        "SystemsGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_system": "root.AcsSystem",
            "ok": "boolean",
          },
        },
        "SystemsListCompatibleCredentialManagerAcsSystemsResponse": {
          "docs": undefined,
          "properties": {
            "acs_systems": "list<root.AcsSystem>",
            "ok": "boolean",
          },
        },
        "SystemsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_systems": "list<root.AcsSystem>",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/users.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "add_to_access_group": {
            "auth": true,
            "display-name": "/acs/users/add_to_access_group",
            "docs": undefined,
            "errors": [
              "root.UsersAddToAccessGroupRequestBadRequestError",
              "root.UsersAddToAccessGroupRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/add_to_access_group",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersAddToAccessGroupRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersAddToAccessGroupResponse",
            },
          },
          "create": {
            "auth": true,
            "display-name": "/acs/users/create",
            "docs": undefined,
            "errors": [
              "root.UsersCreateRequestBadRequestError",
              "root.UsersCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_user": {
                      "access_schedule": {
                        "ends_at": "2024-01-15T09:30:00Z",
                        "starts_at": "2024-01-15T09:30:00Z",
                      },
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email": "email",
                      "email_address": "email_address",
                      "external_type": "pti_user",
                      "external_type_display_name": "external_type_display_name",
                      "full_name": "full_name",
                      "hid_acs_system_id": "hid_acs_system_id",
                      "is_suspended": true,
                      "phone_number": "phone_number",
                      "user_identity_email_address": "user_identity_email_address",
                      "user_identity_full_name": "user_identity_full_name",
                      "user_identity_id": "user_identity_id",
                      "user_identity_phone_number": "user_identity_phone_number",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/create",
            "request": {
              "body": {
                "properties": {
                  "access_schedule": "optional<UsersCreateRequestAccessSchedule>",
                  "acs_access_group_ids": "optional<list<string>>",
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email": {
                    "docs": "
    ---
    deprecated: use email_address.
    ---
    ",
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": "optional<string>",
                  "phone_number": "optional<string>",
                  "user_identity_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_user",
              "type": "UsersCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/acs/users/delete",
            "docs": undefined,
            "errors": [
              "root.UsersDeleteRequestBadRequestError",
              "root.UsersDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/delete",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/acs/users/get",
            "docs": undefined,
            "errors": [
              "root.UsersGetRequestBadRequestError",
              "root.UsersGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_user": {
                      "access_schedule": {
                        "ends_at": "2024-01-15T09:30:00Z",
                        "starts_at": "2024-01-15T09:30:00Z",
                      },
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email": "email",
                      "email_address": "email_address",
                      "external_type": "pti_user",
                      "external_type_display_name": "external_type_display_name",
                      "full_name": "full_name",
                      "hid_acs_system_id": "hid_acs_system_id",
                      "is_suspended": true,
                      "phone_number": "phone_number",
                      "user_identity_email_address": "user_identity_email_address",
                      "user_identity_full_name": "user_identity_full_name",
                      "user_identity_id": "user_identity_id",
                      "user_identity_phone_number": "user_identity_phone_number",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/get",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_user",
              "type": "UsersGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/users/list",
            "docs": undefined,
            "errors": [
              "root.UsersListRequestBadRequestError",
              "root.UsersListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_users": [
                      {
                        "access_schedule": {
                          "ends_at": "2024-01-15T09:30:00Z",
                          "starts_at": "2024-01-15T09:30:00Z",
                        },
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email": "email",
                        "email_address": "email_address",
                        "external_type": "pti_user",
                        "external_type_display_name": "external_type_display_name",
                        "full_name": "full_name",
                        "hid_acs_system_id": "hid_acs_system_id",
                        "is_suspended": true,
                        "phone_number": "phone_number",
                        "user_identity_email_address": "user_identity_email_address",
                        "user_identity_full_name": "user_identity_full_name",
                        "user_identity_id": "user_identity_id",
                        "user_identity_phone_number": "user_identity_phone_number",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/list",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_email_address": "optional<string>",
                  "user_identity_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_phone_number": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UsersListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_users",
              "type": "UsersListResponse",
            },
          },
          "list_accessible_entrances": {
            "auth": true,
            "display-name": "/acs/users/list_accessible_entrances",
            "docs": undefined,
            "errors": [
              "root.UsersListAccessibleEntrancesRequestBadRequestError",
              "root.UsersListAccessibleEntrancesRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_entrances": [
                      {
                        "acs_entrance_id": "acs_entrance_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "latch_metadata": {
                          "accessibility_type": "accessibility_type",
                          "door_name": "door_name",
                          "door_type": "door_type",
                          "is_connected": true,
                        },
                        "visionline_metadata": {
                          "door_category": "entrance",
                          "door_name": "door_name",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/list_accessible_entrances",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersListAccessibleEntrancesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrances",
              "type": "UsersListAccessibleEntrancesResponse",
            },
          },
          "remove_from_access_group": {
            "auth": true,
            "display-name": "/acs/users/remove_from_access_group",
            "docs": undefined,
            "errors": [
              "root.UsersRemoveFromAccessGroupRequestBadRequestError",
              "root.UsersRemoveFromAccessGroupRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/remove_from_access_group",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersRemoveFromAccessGroupRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersRemoveFromAccessGroupResponse",
            },
          },
          "revoke_access_to_all_entrances": {
            "auth": true,
            "display-name": "/acs/users/revoke_access_to_all_entrances",
            "docs": undefined,
            "errors": [
              "root.UsersRevokeAccessToAllEntrancesRequestBadRequestError",
              "root.UsersRevokeAccessToAllEntrancesRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/revoke_access_to_all_entrances",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersRevokeAccessToAllEntrancesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersRevokeAccessToAllEntrancesResponse",
            },
          },
          "suspend": {
            "auth": true,
            "display-name": "/acs/users/suspend",
            "docs": undefined,
            "errors": [
              "root.UsersSuspendRequestBadRequestError",
              "root.UsersSuspendRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/suspend",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersSuspendRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersSuspendResponse",
            },
          },
          "unsuspend": {
            "auth": true,
            "display-name": "/acs/users/unsuspend",
            "docs": undefined,
            "errors": [
              "root.UsersUnsuspendRequestBadRequestError",
              "root.UsersUnsuspendRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/unsuspend",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersUnsuspendRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersUnsuspendResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/acs/users/update",
            "docs": undefined,
            "errors": [
              "root.UsersUpdateRequestBadRequestError",
              "root.UsersUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/update",
            "request": {
              "body": {
                "properties": {
                  "access_schedule": "optional<UsersUpdateRequestAccessSchedule>",
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email": {
                    "docs": "
    ---
    deprecated: use email_address.
    ---
    ",
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": "optional<string>",
                  "hid_acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "phone_number": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UsersUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UsersAddToAccessGroupResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersCreateRequestAccessSchedule": {
          "docs": undefined,
          "properties": {
            "ends_at": "datetime",
            "starts_at": "datetime",
          },
        },
        "UsersCreateResponse": {
          "docs": undefined,
          "properties": {
            "acs_user": "root.AcsUser",
            "ok": "boolean",
          },
        },
        "UsersDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_user": "root.AcsUser",
            "ok": "boolean",
          },
        },
        "UsersListAccessibleEntrancesResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrances": "list<root.AcsEntrance>",
            "ok": "boolean",
          },
        },
        "UsersListResponse": {
          "docs": undefined,
          "properties": {
            "acs_users": "list<root.AcsUser>",
            "ok": "boolean",
          },
        },
        "UsersRemoveFromAccessGroupResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersRevokeAccessToAllEntrancesResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersSuspendResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersUnsuspendResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersUpdateRequestAccessSchedule": {
          "docs": undefined,
          "properties": {
            "ends_at": "datetime",
            "starts_at": "datetime",
          },
        },
        "UsersUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "actionAttempts.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/action_attempts/get",
            "docs": undefined,
            "errors": [
              "root.ActionAttemptsGetRequestBadRequestError",
              "root.ActionAttemptsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "action_attempt_id": "action_attempt_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/action_attempts/get",
            "request": {
              "body": {
                "properties": {
                  "action_attempt_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ActionAttemptsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ActionAttemptsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/action_attempts/list",
            "docs": undefined,
            "errors": [
              "root.ActionAttemptsListRequestBadRequestError",
              "root.ActionAttemptsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "action_attempt_ids": [
                    "action_attempt_ids",
                  ],
                },
                "response": {
                  "body": {
                    "action_attempts": [
                      {
                        "action_attempt_id": "action_attempt_id",
                        "action_type": "LOCK_DOOR",
                        "error": "error",
                        "result": "result",
                        "status": "pending",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/action_attempts/list",
            "request": {
              "body": {
                "properties": {
                  "action_attempt_ids": "list<string>",
                },
              },
              "headers": undefined,
              "name": "ActionAttemptsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempts",
              "type": "ActionAttemptsListResponse",
            },
          },
        },
      },
      "types": {
        "ActionAttemptsGetResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ActionAttemptsListResponse": {
          "docs": undefined,
          "properties": {
            "action_attempts": "list<root.ActionAttempt>",
            "ok": "boolean",
          },
        },
      },
    },
    "clientSessions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": false,
            "display-name": "/client_sessions/create",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsCreateRequestBadRequestError",
              "root.ClientSessionsCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/create",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_ids": "optional<list<string>>",
                  "connected_account_ids": "optional<list<string>>",
                  "expires_at": "optional<datetime>",
                  "user_identifier_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_ids": "optional<list<string>>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_session",
              "type": "ClientSessionsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/client_sessions/delete",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsDeleteRequestBadRequestError",
              "root.ClientSessionsDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "client_session_id": "client_session_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/delete",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClientSessionsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClientSessionsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/client_sessions/get",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsGetRequestBadRequestError",
              "root.ClientSessionsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/get",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": "optional<string>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_session",
              "type": "ClientSessionsGetResponse",
            },
          },
          "get_or_create": {
            "auth": false,
            "display-name": "/client_sessions/get_or_create",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsGetOrCreateRequestBadRequestError",
              "root.ClientSessionsGetOrCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/get_or_create",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_ids": "optional<list<string>>",
                  "connected_account_ids": "optional<list<string>>",
                  "expires_at": "optional<datetime>",
                  "user_identifier_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_ids": "optional<list<string>>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsGetOrCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_session",
              "type": "ClientSessionsGetOrCreateResponse",
            },
          },
          "grant_access": {
            "auth": true,
            "display-name": "/client_sessions/grant_access",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsGrantAccessRequestBadRequestError",
              "root.ClientSessionsGrantAccessRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/grant_access",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": "optional<string>",
                  "connect_webview_ids": "optional<list<string>>",
                  "connected_account_ids": "optional<list<string>>",
                  "user_identifier_key": "optional<string>",
                  "user_identity_ids": "optional<list<string>>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsGrantAccessRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClientSessionsGrantAccessResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/client_sessions/list",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsListRequestBadRequestError",
              "root.ClientSessionsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_sessions": [
                      {
                        "client_session_id": "client_session_id",
                        "connect_webview_ids": [
                          "connect_webview_ids",
                        ],
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_count": 1.1,
                        "token": "token",
                        "user_identifier_key": "user_identifier_key",
                        "user_identity_ids": [
                          "user_identity_ids",
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/list",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": "optional<string>",
                  "connect_webview_id": "optional<string>",
                  "user_identifier_key": "optional<string>",
                  "user_identity_id": "optional<string>",
                  "without_user_identifier_key": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_sessions",
              "type": "ClientSessionsListResponse",
            },
          },
          "revoke": {
            "auth": true,
            "display-name": "/client_sessions/revoke",
            "docs": undefined,
            "errors": [
              "root.ClientSessionsRevokeRequestBadRequestError",
              "root.ClientSessionsRevokeRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "client_session_id": "client_session_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/revoke",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClientSessionsRevokeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClientSessionsRevokeResponse",
            },
          },
        },
      },
      "types": {
        "ClientSessionsCreateResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ClientSessionsGetOrCreateResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsGetResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsGrantAccessResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsListResponse": {
          "docs": undefined,
          "properties": {
            "client_sessions": "list<root.ClientSession>",
            "ok": "boolean",
          },
        },
        "ClientSessionsRevokeResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "connectWebviews.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/connect_webviews/create",
            "docs": undefined,
            "errors": [
              "root.ConnectWebviewsCreateRequestBadRequestError",
              "root.ConnectWebviewsCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "connect_webview": {
                      "accepted_devices": [
                        "accepted_devices",
                      ],
                      "accepted_providers": [
                        "accepted_providers",
                      ],
                      "any_device_allowed": true,
                      "any_provider_allowed": true,
                      "authorized_at": "2024-01-15T09:30:00Z",
                      "automatically_manage_new_devices": true,
                      "connect_webview_id": "connect_webview_id",
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "custom_redirect_failure_url": "custom_redirect_failure_url",
                      "custom_redirect_url": "custom_redirect_url",
                      "device_selection_mode": "none",
                      "login_successful": true,
                      "selected_provider": "selected_provider",
                      "status": "pending",
                      "url": "url",
                      "wait_for_device_creation": true,
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/create",
            "request": {
              "body": {
                "properties": {
                  "accepted_providers": "optional<list<ConnectWebviewsCreateRequestAcceptedProvidersItem>>",
                  "automatically_manage_new_devices": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "custom_metadata": "optional<map<string, optional<ConnectWebviewsCreateRequestCustomMetadataValue>>>",
                  "custom_redirect_failure_url": "optional<string>",
                  "custom_redirect_url": "optional<string>",
                  "device_selection_mode": "optional<ConnectWebviewsCreateRequestDeviceSelectionMode>",
                  "provider_category": "optional<ConnectWebviewsCreateRequestProviderCategory>",
                  "wait_for_device_creation": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connect_webview",
              "type": "ConnectWebviewsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/connect_webviews/delete",
            "docs": undefined,
            "errors": [
              "root.ConnectWebviewsDeleteRequestBadRequestError",
              "root.ConnectWebviewsDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connect_webview_id": "connect_webview_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/delete",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ConnectWebviewsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/connect_webviews/get",
            "docs": undefined,
            "errors": [
              "root.ConnectWebviewsGetRequestBadRequestError",
              "root.ConnectWebviewsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connect_webview_id": "connect_webview_id",
                },
                "response": {
                  "body": {
                    "connect_webview": {
                      "accepted_devices": [
                        "accepted_devices",
                      ],
                      "accepted_providers": [
                        "accepted_providers",
                      ],
                      "any_device_allowed": true,
                      "any_provider_allowed": true,
                      "authorized_at": "2024-01-15T09:30:00Z",
                      "automatically_manage_new_devices": true,
                      "connect_webview_id": "connect_webview_id",
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "custom_redirect_failure_url": "custom_redirect_failure_url",
                      "custom_redirect_url": "custom_redirect_url",
                      "device_selection_mode": "none",
                      "login_successful": true,
                      "selected_provider": "selected_provider",
                      "status": "pending",
                      "url": "url",
                      "wait_for_device_creation": true,
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/get",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connect_webview",
              "type": "ConnectWebviewsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/connect_webviews/list",
            "docs": undefined,
            "errors": [
              "root.ConnectWebviewsListRequestBadRequestError",
              "root.ConnectWebviewsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "connect_webviews": [
                      {
                        "accepted_devices": [
                          "accepted_devices",
                        ],
                        "accepted_providers": [
                          "accepted_providers",
                        ],
                        "any_device_allowed": true,
                        "any_provider_allowed": true,
                        "authorized_at": "2024-01-15T09:30:00Z",
                        "automatically_manage_new_devices": true,
                        "connect_webview_id": "connect_webview_id",
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "custom_redirect_failure_url": "custom_redirect_failure_url",
                        "custom_redirect_url": "custom_redirect_url",
                        "device_selection_mode": "none",
                        "login_successful": true,
                        "selected_provider": "selected_provider",
                        "status": "pending",
                        "url": "url",
                        "wait_for_device_creation": true,
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/list",
            "request": {
              "body": {
                "properties": {
                  "custom_metadata_has": {
                    "docs": "Returns devices where the webview's custom_metadata contains all of the provided key/value pairs.",
                    "type": "optional<map<string, ConnectWebviewsListRequestCustomMetadataHasValue>>",
                  },
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connect_webviews",
              "type": "ConnectWebviewsListResponse",
            },
          },
        },
      },
      "types": {
        "ConnectWebviewsCreateRequestAcceptedProvidersItem": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "schlage",
            "smartthings",
            "yale",
            "genie",
            "doorking",
            "salto",
            "lockly",
            "ttlock",
            "linear",
            "noiseaware",
            "nuki",
            "seam_relay_admin",
            "igloo",
            "kwikset",
            "minut",
            "my_2n",
            "controlbyweb",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "four_suites",
            "dormakaba_oracode",
            "pti",
            "wyze",
            "seam_passport",
            "visionline",
            "assa_abloy_credential_service",
            "seam_bridge",
            "tedee",
            "honeywell_resideo",
            "latch",
            "yale_access",
            "hid_cm",
            "google_nest",
          ],
        },
        "ConnectWebviewsCreateRequestCustomMetadataValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            {
              "type": "string",
              "validation": {
                "format": undefined,
                "maxLength": 500,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "boolean",
            "optional<string>",
          ],
        },
        "ConnectWebviewsCreateRequestDeviceSelectionMode": {
          "enum": [
            "none",
            "single",
            "multiple",
          ],
        },
        "ConnectWebviewsCreateRequestProviderCategory": {
          "enum": [
            "stable",
            "consumer_smartlocks",
            "thermostats",
            "noise_sensors",
            "access_control_systems",
            "internal_beta",
          ],
        },
        "ConnectWebviewsCreateResponse": {
          "docs": undefined,
          "properties": {
            "connect_webview": "root.ConnectWebview",
            "ok": "boolean",
          },
        },
        "ConnectWebviewsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ConnectWebviewsGetResponse": {
          "docs": undefined,
          "properties": {
            "connect_webview": "root.ConnectWebview",
            "ok": "boolean",
          },
        },
        "ConnectWebviewsListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "ConnectWebviewsListResponse": {
          "docs": undefined,
          "properties": {
            "connect_webviews": "list<root.ConnectWebview>",
            "ok": "boolean",
          },
        },
      },
    },
    "connectedAccounts.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "auth": true,
            "display-name": "/connected_accounts/delete",
            "docs": undefined,
            "errors": [
              "root.ConnectedAccountsDeleteRequestBadRequestError",
              "root.ConnectedAccountsDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connected_account_id": "connected_account_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/delete",
            "request": {
              "body": {
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectedAccountsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ConnectedAccountsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/connected_accounts/get",
            "docs": undefined,
            "errors": [
              "root.ConnectedAccountsGetRequestBadRequestError",
              "root.ConnectedAccountsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connected_account_id": "connected_account_id",
                },
                "response": {
                  "body": {
                    "connected_account": {
                      "account_type": "account_type",
                      "account_type_display_name": "account_type_display_name",
                      "automatically_manage_new_devices": true,
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "errors": {
                        "key": "value",
                      },
                      "user_identifier": {
                        "api_url": "api_url",
                        "email": "email",
                        "exclusive": true,
                        "phone": "phone",
                        "username": "username",
                      },
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/get",
            "request": {
              "body": "ConnectedAccountsGetRequest",
            },
            "response": {
              "docs": "OK",
              "property": "connected_account",
              "type": "ConnectedAccountsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/connected_accounts/list",
            "docs": undefined,
            "errors": [
              "root.ConnectedAccountsListRequestBadRequestError",
              "root.ConnectedAccountsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "connected_accounts": [
                      {
                        "account_type": "account_type",
                        "account_type_display_name": "account_type_display_name",
                        "automatically_manage_new_devices": true,
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "errors": {
                          "key": "value",
                        },
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/list",
            "request": {
              "body": {
                "properties": {
                  "custom_metadata_has": {
                    "docs": "Returns devices where the account's custom_metadata contains all of the provided key/value pairs.",
                    "type": "optional<map<string, ConnectedAccountsListRequestCustomMetadataHasValue>>",
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectedAccountsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connected_accounts",
              "type": "ConnectedAccountsListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/connected_accounts/update",
            "docs": undefined,
            "errors": [
              "root.ConnectedAccountsUpdateRequestBadRequestError",
              "root.ConnectedAccountsUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connected_account_id": "connected_account_id",
                },
                "response": {
                  "body": {
                    "connected_account": {
                      "account_type": "account_type",
                      "account_type_display_name": "account_type_display_name",
                      "automatically_manage_new_devices": true,
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "errors": {
                        "key": "value",
                      },
                      "user_identifier": {
                        "api_url": "api_url",
                        "email": "email",
                        "exclusive": true,
                        "phone": "phone",
                        "username": "username",
                      },
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/update",
            "request": {
              "body": {
                "properties": {
                  "automatically_manage_new_devices": "optional<boolean>",
                  "connected_account_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "custom_metadata": "optional<map<string, optional<ConnectedAccountsUpdateRequestCustomMetadataValue>>>",
                },
              },
              "headers": undefined,
              "name": "ConnectedAccountsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connected_account",
              "type": "ConnectedAccountsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ConnectedAccountsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ConnectedAccountsGetRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "ConnectedAccountsGetRequestConnectedAccountId",
            "ConnectedAccountsGetRequestEmail",
          ],
        },
        "ConnectedAccountsGetRequestConnectedAccountId": {
          "docs": undefined,
          "properties": {
            "connected_account_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "ConnectedAccountsGetRequestEmail": {
          "docs": undefined,
          "properties": {
            "email": {
              "type": "string",
              "validation": {
                "format": "email",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "ConnectedAccountsGetResponse": {
          "docs": undefined,
          "properties": {
            "connected_account": "root.ConnectedAccount",
            "ok": "boolean",
          },
        },
        "ConnectedAccountsListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "ConnectedAccountsListResponse": {
          "docs": undefined,
          "properties": {
            "connected_accounts": "list<root.ConnectedAccount>",
            "ok": "boolean",
          },
        },
        "ConnectedAccountsUpdateRequestCustomMetadataValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            {
              "type": "string",
              "validation": {
                "format": undefined,
                "maxLength": 500,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "boolean",
            "optional<string>",
          ],
        },
        "ConnectedAccountsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "connected_account": "root.ConnectedAccount",
            "ok": "boolean",
          },
        },
      },
    },
    "devices.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "auth": true,
            "display-name": "/devices/delete",
            "docs": undefined,
            "errors": [
              "root.DevicesDeleteRequestBadRequestError",
              "root.DevicesDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/delete",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "DevicesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "DevicesDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/devices/get",
            "docs": undefined,
            "errors": [
              "root.DevicesGetRequestBadRequestError",
              "root.DevicesGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "DevicesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device",
              "type": "DevicesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/devices/list",
            "docs": undefined,
            "errors": [
              "root.DevicesListRequestBadRequestError",
              "root.DevicesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, DevicesListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<DevicesListRequestDeviceType>",
                  "device_types": "optional<list<DevicesListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<DevicesListRequestExcludeIfItem>>",
                  "include_if": "optional<list<DevicesListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<DevicesListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "DevicesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "DevicesListResponse",
            },
          },
          "list_device_providers": {
            "auth": true,
            "display-name": "/devices/list_device_providers",
            "docs": undefined,
            "errors": [
              "root.DevicesListDeviceProvidersRequestBadRequestError",
              "root.DevicesListDeviceProvidersRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device_providers": [
                      {
                        "device_provider_name": "akuvox",
                        "display_name": "display_name",
                        "image_url": "image_url",
                        "provider_categories": [
                          "stable",
                        ],
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/list_device_providers",
            "request": {
              "body": {
                "properties": {
                  "provider_category": "optional<DevicesListDeviceProvidersRequestProviderCategory>",
                },
              },
              "headers": undefined,
              "name": "DevicesListDeviceProvidersRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device_providers",
              "type": "DevicesListDeviceProvidersResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/devices/update",
            "docs": undefined,
            "errors": [
              "root.DevicesUpdateRequestBadRequestError",
              "root.DevicesUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/update",
            "request": {
              "body": {
                "properties": {
                  "custom_metadata": "optional<map<string, optional<DevicesUpdateRequestCustomMetadataValue>>>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "is_managed": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "name": "optional<string>",
                  "properties": "optional<DevicesUpdateRequestProperties>",
                },
              },
              "headers": undefined,
              "name": "DevicesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "DevicesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "DevicesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "DevicesGetResponse": {
          "docs": undefined,
          "properties": {
            "device": "root.Device",
            "ok": "boolean",
          },
        },
        "DevicesListDeviceProvidersRequestProviderCategory": {
          "enum": [
            "stable",
            "consumer_smartlocks",
            "thermostats",
            "noise_sensors",
            "access_control_systems",
          ],
        },
        "DevicesListDeviceProvidersResponse": {
          "docs": undefined,
          "properties": {
            "device_providers": "list<root.DeviceProvider>",
            "ok": "boolean",
          },
        },
        "DevicesListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "DevicesListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "DevicesListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "DevicesListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "DevicesListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "DevicesListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "DevicesListResponse": {
          "docs": undefined,
          "properties": {
            "devices": "list<root.Device>",
            "ok": "boolean",
          },
        },
        "DevicesUpdateRequestCustomMetadataValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            {
              "type": "string",
              "validation": {
                "format": undefined,
                "maxLength": 500,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "boolean",
            "optional<string>",
          ],
        },
        "DevicesUpdateRequestProperties": {
          "docs": undefined,
          "properties": {
            "name": "optional<string>",
          },
        },
        "DevicesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "devices/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "connect": {
            "auth": true,
            "display-name": "/devices/simulate/connect",
            "docs": undefined,
            "errors": [
              "root.SimulateConnectRequestBadRequestError",
              "root.SimulateConnectRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/simulate/connect",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateConnectRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateConnectResponse",
            },
          },
          "disconnect": {
            "auth": true,
            "display-name": "/devices/simulate/disconnect",
            "docs": undefined,
            "errors": [
              "root.SimulateDisconnectRequestBadRequestError",
              "root.SimulateDisconnectRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/simulate/disconnect",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateDisconnectRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateDisconnectResponse",
            },
          },
          "remove": {
            "auth": true,
            "display-name": "/devices/simulate/remove",
            "docs": undefined,
            "errors": [
              "root.SimulateRemoveRequestBadRequestError",
              "root.SimulateRemoveRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/simulate/remove",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateRemoveRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateRemoveResponse",
            },
          },
        },
      },
      "types": {
        "SimulateConnectResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "SimulateDisconnectResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "SimulateRemoveResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "devices/unmanaged.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/devices/unmanaged/get",
            "docs": undefined,
            "errors": [
              "root.UnmanagedGetRequestBadRequestError",
              "root.UnmanagedGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "properties": {
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "manufacturer": "manufacturer",
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/unmanaged/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UnmanagedGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device",
              "type": "UnmanagedGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/devices/unmanaged/list",
            "docs": undefined,
            "errors": [
              "root.UnmanagedListRequestBadRequestError",
              "root.UnmanagedListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "properties": {
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/unmanaged/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, UnmanagedListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<UnmanagedListRequestDeviceType>",
                  "device_types": "optional<list<UnmanagedListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<UnmanagedListRequestExcludeIfItem>>",
                  "include_if": "optional<list<UnmanagedListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<UnmanagedListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UnmanagedListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "UnmanagedListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/devices/unmanaged/update",
            "docs": undefined,
            "errors": [
              "root.UnmanagedUpdateRequestBadRequestError",
              "root.UnmanagedUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "is_managed": true,
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/unmanaged/update",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "is_managed": "boolean",
                },
              },
              "headers": undefined,
              "name": "UnmanagedUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UnmanagedGetResponse": {
          "docs": undefined,
          "properties": {
            "device": "root.UnmanagedDevice",
            "ok": "boolean",
          },
        },
        "UnmanagedListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "UnmanagedListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "UnmanagedListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "UnmanagedListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "UnmanagedListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "UnmanagedListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "UnmanagedListResponse": {
          "docs": undefined,
          "properties": {
            "devices": "list<root.UnmanagedDevice>",
            "ok": "boolean",
          },
        },
        "UnmanagedUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "events.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/events/get",
            "docs": undefined,
            "errors": [
              "root.EventsGetRequestBadRequestError",
              "root.EventsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "event": {
                      "acs_credential_id": "acs_credential_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "action_attempt_id": "action_attempt_id",
                      "client_session_id": "client_session_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "enrollment_automation_id": "enrollment_automation_id",
                      "event_id": "event_id",
                      "event_type": "event_type",
                      "occurred_at": "2024-01-15T09:30:00Z",
                      "workspace_id": "workspace_id",
                    },
                    "message": "message",
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/events/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "event_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "event_type": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "EventsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "event",
              "type": "EventsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/events/list",
            "docs": undefined,
            "errors": [
              "root.EventsListRequestBadRequestError",
              "root.EventsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "events": [
                      {
                        "acs_credential_id": "acs_credential_id",
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "action_attempt_id": "action_attempt_id",
                        "client_session_id": "client_session_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "enrollment_automation_id": "enrollment_automation_id",
                        "event_id": "event_id",
                        "event_type": "event_type",
                        "occurred_at": "2024-01-15T09:30:00Z",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/events/list",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "access_code_ids": "optional<list<string>>",
                  "between": "optional<list<EventsListRequestBetweenItem>>",
                  "connected_account_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_ids": "optional<list<string>>",
                  "event_type": "optional<EventsListRequestEventType>",
                  "event_types": "optional<list<EventsListRequestEventTypesItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "since": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "EventsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "events",
              "type": "EventsListResponse",
            },
          },
        },
      },
      "types": {
        "EventsGetResponse": {
          "docs": undefined,
          "properties": {
            "event": "optional<root.Event>",
            "message": "optional<string>",
            "ok": "boolean",
          },
        },
        "EventsListRequestBetweenItem": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "datetime",
          ],
        },
        "EventsListRequestEventType": {
          "enum": [
            {
              "name": "DeviceAccessoryKeypadConnected",
              "value": "device.accessory_keypad_connected",
            },
            {
              "name": "DeviceAccessoryKeypadDisconnected",
              "value": "device.accessory_keypad_disconnected",
            },
            {
              "name": "DeviceConnected",
              "value": "device.connected",
            },
            {
              "name": "DeviceUnmanagedConnected",
              "value": "device.unmanaged.connected",
            },
            {
              "name": "DeviceDisconnected",
              "value": "device.disconnected",
            },
            {
              "name": "DeviceUnmanagedDisconnected",
              "value": "device.unmanaged.disconnected",
            },
            {
              "name": "DeviceConvertedToUnmanaged",
              "value": "device.converted_to_unmanaged",
            },
            {
              "name": "DeviceUnmanagedConvertedToManaged",
              "value": "device.unmanaged.converted_to_managed",
            },
            {
              "name": "DeviceRemoved",
              "value": "device.removed",
            },
            {
              "name": "DeviceDeleted",
              "value": "device.deleted",
            },
            {
              "name": "DeviceTampered",
              "value": "device.tampered",
            },
            {
              "name": "DeviceLowBattery",
              "value": "device.low_battery",
            },
            {
              "name": "DeviceBatteryStatusChanged",
              "value": "device.battery_status_changed",
            },
            {
              "name": "DeviceThirdPartyIntegrationDetected",
              "value": "device.third_party_integration_detected",
            },
            {
              "name": "DeviceThirdPartyIntegrationNoLongerDetected",
              "value": "device.third_party_integration_no_longer_detected",
            },
            {
              "name": "DeviceSaltoPrivacyModeActivated",
              "value": "device.salto.privacy_mode_activated",
            },
            {
              "name": "DeviceSaltoPrivacyModeDeactivated",
              "value": "device.salto.privacy_mode_deactivated",
            },
            {
              "name": "DeviceConnectionBecameFlaky",
              "value": "device.connection_became_flaky",
            },
            {
              "name": "DeviceConnectionStabilized",
              "value": "device.connection_stabilized",
            },
            {
              "name": "DeviceErrorSubscriptionRequired",
              "value": "device.error.subscription_required",
            },
            {
              "name": "DeviceErrorSubscriptionRequiredResolved",
              "value": "device.error.subscription_required.resolved",
            },
            {
              "name": "AccessCodeCreated",
              "value": "access_code.created",
            },
            {
              "name": "AccessCodeChanged",
              "value": "access_code.changed",
            },
            {
              "name": "AccessCodeScheduledOnDevice",
              "value": "access_code.scheduled_on_device",
            },
            {
              "name": "AccessCodeSetOnDevice",
              "value": "access_code.set_on_device",
            },
            {
              "name": "AccessCodeDeleted",
              "value": "access_code.deleted",
            },
            {
              "name": "AccessCodeRemovedFromDevice",
              "value": "access_code.removed_from_device",
            },
            {
              "name": "AccessCodeFailedToSetOnDevice",
              "value": "access_code.failed_to_set_on_device",
            },
            {
              "name": "AccessCodeDelayInSettingOnDevice",
              "value": "access_code.delay_in_setting_on_device",
            },
            {
              "name": "AccessCodeFailedToRemoveFromDevice",
              "value": "access_code.failed_to_remove_from_device",
            },
            {
              "name": "AccessCodeDelayInRemovingFromDevice",
              "value": "access_code.delay_in_removing_from_device",
            },
            {
              "name": "AccessCodeDeletedExternalToSeam",
              "value": "access_code.deleted_external_to_seam",
            },
            {
              "name": "AccessCodeModifiedExternalToSeam",
              "value": "access_code.modified_external_to_seam",
            },
            {
              "name": "AccessCodeUnmanagedConvertedToManaged",
              "value": "access_code.unmanaged.converted_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedFailedToConvertToManaged",
              "value": "access_code.unmanaged.failed_to_convert_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedCreated",
              "value": "access_code.unmanaged.created",
            },
            {
              "name": "AccessCodeUnmanagedRemoved",
              "value": "access_code.unmanaged.removed",
            },
            {
              "name": "LockLocked",
              "value": "lock.locked",
            },
            {
              "name": "LockUnlocked",
              "value": "lock.unlocked",
            },
            {
              "name": "PhoneDeactivated",
              "value": "phone.deactivated",
            },
            {
              "name": "ConnectedAccountConnected",
              "value": "connected_account.connected",
            },
            {
              "name": "ConnectedAccountSuccessfulLogin",
              "value": "connected_account.successful_login",
            },
            {
              "name": "ConnectedAccountCreated",
              "value": "connected_account.created",
            },
            {
              "name": "ConnectedAccountDeleted",
              "value": "connected_account.deleted",
            },
            {
              "name": "ConnectedAccountDisconnected",
              "value": "connected_account.disconnected",
            },
            {
              "name": "ConnectedAccountCompletedFirstSync",
              "value": "connected_account.completed_first_sync",
            },
            {
              "name": "ConnectedAccountCompletedFirstSyncAfterReconnection",
              "value": "connected_account.completed_first_sync_after_reconnection",
            },
            {
              "name": "NoiseSensorNoiseThresholdTriggered",
              "value": "noise_sensor.noise_threshold_triggered",
            },
            {
              "name": "AccessCodeBackupAccessCodePulled",
              "value": "access_code.backup_access_code_pulled",
            },
            {
              "name": "AcsSystemConnected",
              "value": "acs_system.connected",
            },
            {
              "name": "AcsUserDeleted",
              "value": "acs_user.deleted",
            },
            {
              "name": "AcsCredentialDeleted",
              "value": "acs_credential.deleted",
            },
            {
              "name": "EnrollmentAutomationDeleted",
              "value": "enrollment_automation.deleted",
            },
            {
              "name": "ClientSessionDeleted",
              "value": "client_session.deleted",
            },
            {
              "name": "ActionAttemptLockDoorSucceeded",
              "value": "action_attempt.lock_door.succeeded",
            },
            {
              "name": "ActionAttemptLockDoorFailed",
              "value": "action_attempt.lock_door.failed",
            },
            {
              "name": "ActionAttemptUnlockDoorSucceeded",
              "value": "action_attempt.unlock_door.succeeded",
            },
            {
              "name": "ActionAttemptUnlockDoorFailed",
              "value": "action_attempt.unlock_door.failed",
            },
          ],
        },
        "EventsListRequestEventTypesItem": {
          "enum": [
            {
              "name": "DeviceAccessoryKeypadConnected",
              "value": "device.accessory_keypad_connected",
            },
            {
              "name": "DeviceAccessoryKeypadDisconnected",
              "value": "device.accessory_keypad_disconnected",
            },
            {
              "name": "DeviceConnected",
              "value": "device.connected",
            },
            {
              "name": "DeviceUnmanagedConnected",
              "value": "device.unmanaged.connected",
            },
            {
              "name": "DeviceDisconnected",
              "value": "device.disconnected",
            },
            {
              "name": "DeviceUnmanagedDisconnected",
              "value": "device.unmanaged.disconnected",
            },
            {
              "name": "DeviceConvertedToUnmanaged",
              "value": "device.converted_to_unmanaged",
            },
            {
              "name": "DeviceUnmanagedConvertedToManaged",
              "value": "device.unmanaged.converted_to_managed",
            },
            {
              "name": "DeviceRemoved",
              "value": "device.removed",
            },
            {
              "name": "DeviceDeleted",
              "value": "device.deleted",
            },
            {
              "name": "DeviceTampered",
              "value": "device.tampered",
            },
            {
              "name": "DeviceLowBattery",
              "value": "device.low_battery",
            },
            {
              "name": "DeviceBatteryStatusChanged",
              "value": "device.battery_status_changed",
            },
            {
              "name": "DeviceThirdPartyIntegrationDetected",
              "value": "device.third_party_integration_detected",
            },
            {
              "name": "DeviceThirdPartyIntegrationNoLongerDetected",
              "value": "device.third_party_integration_no_longer_detected",
            },
            {
              "name": "DeviceSaltoPrivacyModeActivated",
              "value": "device.salto.privacy_mode_activated",
            },
            {
              "name": "DeviceSaltoPrivacyModeDeactivated",
              "value": "device.salto.privacy_mode_deactivated",
            },
            {
              "name": "DeviceConnectionBecameFlaky",
              "value": "device.connection_became_flaky",
            },
            {
              "name": "DeviceConnectionStabilized",
              "value": "device.connection_stabilized",
            },
            {
              "name": "DeviceErrorSubscriptionRequired",
              "value": "device.error.subscription_required",
            },
            {
              "name": "DeviceErrorSubscriptionRequiredResolved",
              "value": "device.error.subscription_required.resolved",
            },
            {
              "name": "AccessCodeCreated",
              "value": "access_code.created",
            },
            {
              "name": "AccessCodeChanged",
              "value": "access_code.changed",
            },
            {
              "name": "AccessCodeScheduledOnDevice",
              "value": "access_code.scheduled_on_device",
            },
            {
              "name": "AccessCodeSetOnDevice",
              "value": "access_code.set_on_device",
            },
            {
              "name": "AccessCodeDeleted",
              "value": "access_code.deleted",
            },
            {
              "name": "AccessCodeRemovedFromDevice",
              "value": "access_code.removed_from_device",
            },
            {
              "name": "AccessCodeFailedToSetOnDevice",
              "value": "access_code.failed_to_set_on_device",
            },
            {
              "name": "AccessCodeDelayInSettingOnDevice",
              "value": "access_code.delay_in_setting_on_device",
            },
            {
              "name": "AccessCodeFailedToRemoveFromDevice",
              "value": "access_code.failed_to_remove_from_device",
            },
            {
              "name": "AccessCodeDelayInRemovingFromDevice",
              "value": "access_code.delay_in_removing_from_device",
            },
            {
              "name": "AccessCodeDeletedExternalToSeam",
              "value": "access_code.deleted_external_to_seam",
            },
            {
              "name": "AccessCodeModifiedExternalToSeam",
              "value": "access_code.modified_external_to_seam",
            },
            {
              "name": "AccessCodeUnmanagedConvertedToManaged",
              "value": "access_code.unmanaged.converted_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedFailedToConvertToManaged",
              "value": "access_code.unmanaged.failed_to_convert_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedCreated",
              "value": "access_code.unmanaged.created",
            },
            {
              "name": "AccessCodeUnmanagedRemoved",
              "value": "access_code.unmanaged.removed",
            },
            {
              "name": "LockLocked",
              "value": "lock.locked",
            },
            {
              "name": "LockUnlocked",
              "value": "lock.unlocked",
            },
            {
              "name": "PhoneDeactivated",
              "value": "phone.deactivated",
            },
            {
              "name": "ConnectedAccountConnected",
              "value": "connected_account.connected",
            },
            {
              "name": "ConnectedAccountSuccessfulLogin",
              "value": "connected_account.successful_login",
            },
            {
              "name": "ConnectedAccountCreated",
              "value": "connected_account.created",
            },
            {
              "name": "ConnectedAccountDeleted",
              "value": "connected_account.deleted",
            },
            {
              "name": "ConnectedAccountDisconnected",
              "value": "connected_account.disconnected",
            },
            {
              "name": "ConnectedAccountCompletedFirstSync",
              "value": "connected_account.completed_first_sync",
            },
            {
              "name": "ConnectedAccountCompletedFirstSyncAfterReconnection",
              "value": "connected_account.completed_first_sync_after_reconnection",
            },
            {
              "name": "NoiseSensorNoiseThresholdTriggered",
              "value": "noise_sensor.noise_threshold_triggered",
            },
            {
              "name": "AccessCodeBackupAccessCodePulled",
              "value": "access_code.backup_access_code_pulled",
            },
            {
              "name": "AcsSystemConnected",
              "value": "acs_system.connected",
            },
            {
              "name": "AcsUserDeleted",
              "value": "acs_user.deleted",
            },
            {
              "name": "AcsCredentialDeleted",
              "value": "acs_credential.deleted",
            },
            {
              "name": "EnrollmentAutomationDeleted",
              "value": "enrollment_automation.deleted",
            },
            {
              "name": "ClientSessionDeleted",
              "value": "client_session.deleted",
            },
            {
              "name": "ActionAttemptLockDoorSucceeded",
              "value": "action_attempt.lock_door.succeeded",
            },
            {
              "name": "ActionAttemptLockDoorFailed",
              "value": "action_attempt.lock_door.failed",
            },
            {
              "name": "ActionAttemptUnlockDoorSucceeded",
              "value": "action_attempt.unlock_door.succeeded",
            },
            {
              "name": "ActionAttemptUnlockDoorFailed",
              "value": "action_attempt.unlock_door.failed",
            },
          ],
        },
        "EventsListResponse": {
          "docs": undefined,
          "properties": {
            "events": "list<root.Event>",
            "ok": "boolean",
          },
        },
      },
    },
    "locks.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/locks/get",
            "docs": undefined,
            "errors": [
              "root.LocksGetRequestBadRequestError",
              "root.LocksGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "lock": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "LocksGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device",
              "type": "LocksGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/locks/list",
            "docs": undefined,
            "errors": [
              "root.LocksListRequestBadRequestError",
              "root.LocksListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "locks": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, LocksListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<LocksListRequestDeviceType>",
                  "device_types": "optional<list<LocksListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<LocksListRequestExcludeIfItem>>",
                  "include_if": "optional<list<LocksListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<LocksListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "LocksListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "LocksListResponse",
            },
          },
          "lock_door": {
            "auth": true,
            "display-name": "/locks/lock_door",
            "docs": undefined,
            "errors": [
              "root.LocksLockDoorRequestBadRequestError",
              "root.LocksLockDoorRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/lock_door",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "LocksLockDoorRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "LocksLockDoorResponse",
            },
          },
          "unlock_door": {
            "auth": true,
            "display-name": "/locks/unlock_door",
            "docs": undefined,
            "errors": [
              "root.LocksUnlockDoorRequestBadRequestError",
              "root.LocksUnlockDoorRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/unlock_door",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "LocksUnlockDoorRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "LocksUnlockDoorResponse",
            },
          },
        },
      },
      "types": {
        "LocksGetResponse": {
          "docs": undefined,
          "properties": {
            "device": "root.Device",
            "lock": "root.Device",
            "ok": "boolean",
          },
        },
        "LocksListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "LocksListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "LocksListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "LocksListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "LocksListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "LocksListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "LocksListResponse": {
          "docs": undefined,
          "properties": {
            "devices": "list<root.Device>",
            "locks": "list<root.Device>",
            "ok": "boolean",
          },
        },
        "LocksLockDoorResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "LocksUnlockDoorResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
    "networks.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/networks/get",
            "docs": undefined,
            "errors": [
              "root.NetworksGetRequestBadRequestError",
              "root.NetworksGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "network_id": "network_id",
                },
                "response": {
                  "body": {
                    "network": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "network_id": "network_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/networks/get",
            "request": {
              "body": {
                "properties": {
                  "network_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "NetworksGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "network",
              "type": "NetworksGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/networks/list",
            "docs": undefined,
            "errors": [
              "root.NetworksListRequestBadRequestError",
              "root.NetworksListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "networks": [
                      {
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "network_id": "network_id",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/networks/list",
            "request": {
              "body": {
                "properties": {},
              },
              "headers": undefined,
              "name": "NetworksListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "networks",
              "type": "NetworksListResponse",
            },
          },
        },
      },
      "types": {
        "NetworksGetResponse": {
          "docs": undefined,
          "properties": {
            "network": "root.Network",
            "ok": "boolean",
          },
        },
        "NetworksListResponse": {
          "docs": undefined,
          "properties": {
            "networks": "list<root.Network>",
            "ok": "boolean",
          },
        },
      },
    },
    "noiseSensors/noiseThresholds.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/create",
            "docs": undefined,
            "errors": [
              "root.NoiseThresholdsCreateRequestBadRequestError",
              "root.NoiseThresholdsCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "ends_daily_at": "ends_daily_at",
                  "starts_daily_at": "starts_daily_at",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "noise_threshold": {
                      "device_id": "device_id",
                      "ends_daily_at": "ends_daily_at",
                      "name": "name",
                      "noise_threshold_decibels": 1.1,
                      "noise_threshold_id": "noise_threshold_id",
                      "noise_threshold_nrs": 1.1,
                      "starts_daily_at": "starts_daily_at",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/create",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_daily_at": "string",
                  "name": "optional<string>",
                  "noise_threshold_decibels": "optional<double>",
                  "noise_threshold_nrs": "optional<double>",
                  "starts_daily_at": "string",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "noise_threshold",
              "type": "NoiseThresholdsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/delete",
            "docs": undefined,
            "errors": [
              "root.NoiseThresholdsDeleteRequestBadRequestError",
              "root.NoiseThresholdsDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "noise_threshold_id": "noise_threshold_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/delete",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "noise_threshold_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "NoiseThresholdsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/get",
            "docs": undefined,
            "errors": [
              "root.NoiseThresholdsGetRequestBadRequestError",
              "root.NoiseThresholdsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "noise_threshold_id": "noise_threshold_id",
                },
                "response": {
                  "body": {
                    "noise_threshold": {
                      "device_id": "device_id",
                      "ends_daily_at": "ends_daily_at",
                      "name": "name",
                      "noise_threshold_decibels": 1.1,
                      "noise_threshold_id": "noise_threshold_id",
                      "noise_threshold_nrs": 1.1,
                      "starts_daily_at": "starts_daily_at",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/get",
            "request": {
              "body": {
                "properties": {
                  "noise_threshold_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "noise_threshold",
              "type": "NoiseThresholdsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/list",
            "docs": undefined,
            "errors": [
              "root.NoiseThresholdsListRequestBadRequestError",
              "root.NoiseThresholdsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "noise_thresholds": [
                      {
                        "device_id": "device_id",
                        "ends_daily_at": "ends_daily_at",
                        "name": "name",
                        "noise_threshold_decibels": 1.1,
                        "noise_threshold_id": "noise_threshold_id",
                        "noise_threshold_nrs": 1.1,
                        "starts_daily_at": "starts_daily_at",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/list",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "is_programmed": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "noise_thresholds",
              "type": "NoiseThresholdsListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/update",
            "docs": undefined,
            "errors": [
              "root.NoiseThresholdsUpdateRequestBadRequestError",
              "root.NoiseThresholdsUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "noise_threshold_id": "noise_threshold_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/update",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_daily_at": "optional<string>",
                  "name": "optional<string>",
                  "noise_threshold_decibels": "optional<double>",
                  "noise_threshold_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "noise_threshold_nrs": "optional<double>",
                  "starts_daily_at": "optional<string>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "NoiseThresholdsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "NoiseThresholdsCreateResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "noise_threshold": "root.NoiseThreshold",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsGetResponse": {
          "docs": undefined,
          "properties": {
            "noise_threshold": "root.NoiseThreshold",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsListResponse": {
          "docs": undefined,
          "properties": {
            "noise_thresholds": "list<root.NoiseThreshold>",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
    "noiseSensors/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "trigger_noise_threshold": {
            "auth": true,
            "display-name": "/noise_sensors/simulate/trigger_noise_threshold",
            "docs": undefined,
            "errors": [
              "root.SimulateTriggerNoiseThresholdRequestBadRequestError",
              "root.SimulateTriggerNoiseThresholdRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/simulate/trigger_noise_threshold",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateTriggerNoiseThresholdRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateTriggerNoiseThresholdResponse",
            },
          },
        },
      },
      "types": {
        "SimulateTriggerNoiseThresholdResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "phones.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "deactivate": {
            "auth": true,
            "display-name": "/phones/deactivate",
            "docs": undefined,
            "errors": [
              "root.PhonesDeactivateRequestBadRequestError",
              "root.PhonesDeactivateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/phones/deactivate",
            "request": {
              "body": {
                "properties": {
                  "device_id": "string",
                },
              },
              "headers": undefined,
              "name": "PhonesDeactivateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "PhonesDeactivateResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/phones/list",
            "docs": undefined,
            "errors": [
              "root.PhonesListRequestBadRequestError",
              "root.PhonesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "phones": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "android_phone",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {},
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/phones/list",
            "request": {
              "body": {
                "properties": {
                  "owner_user_identity_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "PhonesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "phones",
              "type": "PhonesListResponse",
            },
          },
        },
      },
      "types": {
        "PhonesDeactivateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "PhonesListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "phones": "list<root.Phone>",
          },
        },
      },
    },
    "phones/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create_sandbox_phone": {
            "auth": true,
            "display-name": "/phones/simulate/create_sandbox_phone",
            "docs": undefined,
            "errors": [
              "root.SimulateCreateSandboxPhoneRequestBadRequestError",
              "root.SimulateCreateSandboxPhoneRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "phone": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "android_phone",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/phones/simulate/create_sandbox_phone",
            "request": {
              "body": {
                "properties": {
                  "assa_abloy_metadata": "optional<SimulateCreateSandboxPhoneRequestAssaAbloyMetadata>",
                  "custom_sdk_installation_id": "optional<string>",
                  "phone_metadata": "optional<SimulateCreateSandboxPhoneRequestPhoneMetadata>",
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateCreateSandboxPhoneRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "phone",
              "type": "SimulateCreateSandboxPhoneResponse",
            },
          },
        },
      },
      "types": {
        "SimulateCreateSandboxPhoneRequestAssaAbloyMetadata": {
          "docs": undefined,
          "properties": {
            "application_version": {
              "default": "1.0.0",
              "type": "optional<string>",
            },
            "ble_capability": {
              "default": true,
              "type": "optional<boolean>",
            },
            "hce_capability": {
              "default": false,
              "type": "optional<boolean>",
            },
            "nfc_capability": {
              "default": false,
              "type": "optional<boolean>",
            },
            "seos_applet_version": {
              "default": "1.0.0",
              "type": "optional<string>",
            },
            "seos_tsm_endpoint_id": {
              "default": 1,
              "type": "optional<double>",
            },
          },
        },
        "SimulateCreateSandboxPhoneRequestPhoneMetadata": {
          "docs": undefined,
          "properties": {
            "device_manufacturer": {
              "default": "Samsung",
              "type": "optional<string>",
            },
            "device_model": {
              "default": "Samsung Galaxy S10",
              "type": "optional<string>",
            },
            "operating_system": {
              "default": "android",
              "type": "optional<SimulateCreateSandboxPhoneRequestPhoneMetadataOperatingSystem>",
            },
            "os_version": {
              "default": "10",
              "type": "optional<string>",
            },
          },
        },
        "SimulateCreateSandboxPhoneRequestPhoneMetadataOperatingSystem": {
          "default": "android",
          "enum": [
            "android",
            "ios",
          ],
        },
        "SimulateCreateSandboxPhoneResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "phone": "root.Phone",
          },
        },
      },
    },
    "thermostats.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "cool": {
            "auth": true,
            "display-name": "/thermostats/cool",
            "docs": undefined,
            "errors": [
              "root.ThermostatsCoolRequestBadRequestError",
              "root.ThermostatsCoolRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/cool",
            "request": {
              "body": {
                "properties": {
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsCoolRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsCoolResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/thermostats/get",
            "docs": undefined,
            "errors": [
              "root.ThermostatsGetRequestBadRequestError",
              "root.ThermostatsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "thermostat": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ThermostatsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "thermostat",
              "type": "ThermostatsGetResponse",
            },
          },
          "heat": {
            "auth": true,
            "display-name": "/thermostats/heat",
            "docs": undefined,
            "errors": [
              "root.ThermostatsHeatRequestBadRequestError",
              "root.ThermostatsHeatRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/heat",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsHeatRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsHeatResponse",
            },
          },
          "heat_cool": {
            "auth": true,
            "display-name": "/thermostats/heat_cool",
            "docs": undefined,
            "errors": [
              "root.ThermostatsHeatCoolRequestBadRequestError",
              "root.ThermostatsHeatCoolRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/heat_cool",
            "request": {
              "body": {
                "properties": {
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsHeatCoolRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsHeatCoolResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/thermostats/list",
            "docs": undefined,
            "errors": [
              "root.ThermostatsListRequestBadRequestError",
              "root.ThermostatsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "thermostats": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, ThermostatsListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<ThermostatsListRequestDeviceType>",
                  "device_types": "optional<list<ThermostatsListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<ThermostatsListRequestExcludeIfItem>>",
                  "include_if": "optional<list<ThermostatsListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<ThermostatsListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ThermostatsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "thermostats",
              "type": "ThermostatsListResponse",
            },
          },
          "off": {
            "auth": true,
            "display-name": "/thermostats/off",
            "docs": undefined,
            "errors": [
              "root.ThermostatsOffRequestBadRequestError",
              "root.ThermostatsOffRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/off",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsOffRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsOffResponse",
            },
          },
          "set_fan_mode": {
            "auth": true,
            "display-name": "/thermostats/set_fan_mode",
            "docs": undefined,
            "errors": [
              "root.ThermostatsSetFanModeRequestBadRequestError",
              "root.ThermostatsSetFanModeRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/set_fan_mode",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "fan_mode": "optional<ThermostatsSetFanModeRequestFanMode>",
                  "fan_mode_setting": "optional<ThermostatsSetFanModeRequestFanModeSetting>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsSetFanModeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsSetFanModeResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/thermostats/update",
            "docs": undefined,
            "errors": [
              "root.ThermostatsUpdateRequestBadRequestError",
              "root.ThermostatsUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "default_climate_setting": {},
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/update",
            "request": {
              "body": {
                "properties": {
                  "default_climate_setting": "ThermostatsUpdateRequestDefaultClimateSetting",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ThermostatsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ThermostatsCoolResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "thermostat": "root.Device",
          },
        },
        "ThermostatsHeatCoolResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsHeatResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "ThermostatsListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "ThermostatsListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "ThermostatsListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "ThermostatsListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "ThermostatsListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "ThermostatsListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "thermostats": "list<root.Device>",
          },
        },
        "ThermostatsOffResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsSetFanModeRequestFanMode": {
          "enum": [
            "auto",
            "on",
          ],
        },
        "ThermostatsSetFanModeRequestFanModeSetting": {
          "enum": [
            "auto",
            "on",
          ],
        },
        "ThermostatsSetFanModeResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsUpdateRequestDefaultClimateSetting": {
          "docs": undefined,
          "properties": {
            "automatic_cooling_enabled": "optional<boolean>",
            "automatic_heating_enabled": "optional<boolean>",
            "cooling_set_point_celsius": "optional<double>",
            "cooling_set_point_fahrenheit": "optional<double>",
            "heating_set_point_celsius": "optional<double>",
            "heating_set_point_fahrenheit": "optional<double>",
            "hvac_mode_setting": "optional<ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting>",
            "manual_override_allowed": "optional<boolean>",
          },
        },
        "ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting": {
          "enum": [
            "off",
            "heat",
            "cool",
            "heat_cool",
          ],
        },
        "ThermostatsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "thermostats/climateSettingSchedules.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/create",
            "docs": undefined,
            "errors": [
              "root.ClimateSettingSchedulesCreateRequestBadRequestError",
              "root.ClimateSettingSchedulesCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "schedule_ends_at": "schedule_ends_at",
                  "schedule_starts_at": "schedule_starts_at",
                },
                "response": {
                  "body": {
                    "climate_setting_schedule": {
                      "automatic_cooling_enabled": true,
                      "automatic_heating_enabled": true,
                      "climate_setting_schedule_id": "climate_setting_schedule_id",
                      "cooling_set_point_celsius": 1.1,
                      "cooling_set_point_fahrenheit": 1.1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "errors": {
                        "key": "value",
                      },
                      "heating_set_point_celsius": 1.1,
                      "heating_set_point_fahrenheit": 1.1,
                      "hvac_mode_setting": "off",
                      "manual_override_allowed": true,
                      "name": "name",
                      "schedule_ends_at": "schedule_ends_at",
                      "schedule_starts_at": "schedule_starts_at",
                      "schedule_type": "time_bound",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/create",
            "request": {
              "body": {
                "properties": {
                  "automatic_cooling_enabled": "optional<boolean>",
                  "automatic_heating_enabled": "optional<boolean>",
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "device_id": "string",
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "hvac_mode_setting": "optional<ClimateSettingSchedulesCreateRequestHvacModeSetting>",
                  "manual_override_allowed": "optional<boolean>",
                  "name": "optional<string>",
                  "schedule_ends_at": "string",
                  "schedule_starts_at": "string",
                  "schedule_type": "optional<literal<"time_bound">>",
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "climate_setting_schedule",
              "type": "ClimateSettingSchedulesCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/delete",
            "docs": undefined,
            "errors": [
              "root.ClimateSettingSchedulesDeleteRequestBadRequestError",
              "root.ClimateSettingSchedulesDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "climate_setting_schedule_id": "climate_setting_schedule_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/delete",
            "request": {
              "body": {
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClimateSettingSchedulesDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/get",
            "docs": undefined,
            "errors": [
              "root.ClimateSettingSchedulesGetRequestBadRequestError",
              "root.ClimateSettingSchedulesGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "climate_setting_schedule": {
                      "automatic_cooling_enabled": true,
                      "automatic_heating_enabled": true,
                      "climate_setting_schedule_id": "climate_setting_schedule_id",
                      "cooling_set_point_celsius": 1.1,
                      "cooling_set_point_fahrenheit": 1.1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "errors": {
                        "key": "value",
                      },
                      "heating_set_point_celsius": 1.1,
                      "heating_set_point_fahrenheit": 1.1,
                      "hvac_mode_setting": "off",
                      "manual_override_allowed": true,
                      "name": "name",
                      "schedule_ends_at": "schedule_ends_at",
                      "schedule_starts_at": "schedule_starts_at",
                      "schedule_type": "time_bound",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/get",
            "request": {
              "body": {
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "climate_setting_schedule",
              "type": "ClimateSettingSchedulesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/list",
            "docs": undefined,
            "errors": [
              "root.ClimateSettingSchedulesListRequestBadRequestError",
              "root.ClimateSettingSchedulesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "climate_setting_schedules": [
                      {
                        "automatic_cooling_enabled": true,
                        "automatic_heating_enabled": true,
                        "climate_setting_schedule_id": "climate_setting_schedule_id",
                        "cooling_set_point_celsius": 1.1,
                        "cooling_set_point_fahrenheit": 1.1,
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "errors": {
                          "key": "value",
                        },
                        "heating_set_point_celsius": 1.1,
                        "heating_set_point_fahrenheit": 1.1,
                        "hvac_mode_setting": "off",
                        "manual_override_allowed": true,
                        "name": "name",
                        "schedule_ends_at": "schedule_ends_at",
                        "schedule_starts_at": "schedule_starts_at",
                        "schedule_type": "time_bound",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/list",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "climate_setting_schedules",
              "type": "ClimateSettingSchedulesListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/update",
            "docs": undefined,
            "errors": [
              "root.ClimateSettingSchedulesUpdateRequestBadRequestError",
              "root.ClimateSettingSchedulesUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "climate_setting_schedule_id": "climate_setting_schedule_id",
                },
                "response": {
                  "body": {
                    "climate_setting_schedule": {
                      "automatic_cooling_enabled": true,
                      "automatic_heating_enabled": true,
                      "climate_setting_schedule_id": "climate_setting_schedule_id",
                      "cooling_set_point_celsius": 1.1,
                      "cooling_set_point_fahrenheit": 1.1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "errors": {
                        "key": "value",
                      },
                      "heating_set_point_celsius": 1.1,
                      "heating_set_point_fahrenheit": 1.1,
                      "hvac_mode_setting": "off",
                      "manual_override_allowed": true,
                      "name": "name",
                      "schedule_ends_at": "schedule_ends_at",
                      "schedule_starts_at": "schedule_starts_at",
                      "schedule_type": "time_bound",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/update",
            "request": {
              "body": {
                "properties": {
                  "automatic_cooling_enabled": "optional<boolean>",
                  "automatic_heating_enabled": "optional<boolean>",
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "hvac_mode_setting": "optional<ClimateSettingSchedulesUpdateRequestHvacModeSetting>",
                  "manual_override_allowed": "optional<boolean>",
                  "name": "optional<string>",
                  "schedule_ends_at": "optional<string>",
                  "schedule_starts_at": "optional<string>",
                  "schedule_type": "optional<literal<"time_bound">>",
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClimateSettingSchedulesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ClimateSettingSchedulesCreateRequestHvacModeSetting": {
          "enum": [
            "off",
            "heat",
            "cool",
            "heat_cool",
          ],
        },
        "ClimateSettingSchedulesCreateResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedule": "root.ClimateSettingSchedule",
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesGetResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedule": "root.ClimateSettingSchedule",
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesListResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedules": "list<root.ClimateSettingSchedule>",
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesUpdateRequestHvacModeSetting": {
          "enum": [
            "off",
            "heat",
            "cool",
            "heat_cool",
          ],
        },
        "ClimateSettingSchedulesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedule": "root.ClimateSettingSchedule",
            "ok": "boolean",
          },
        },
      },
    },
    "userIdentities.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "add_acs_user": {
            "auth": true,
            "display-name": "/user_identities/add_acs_user",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesAddAcsUserRequestBadRequestError",
              "root.UserIdentitiesAddAcsUserRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/add_acs_user",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesAddAcsUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesAddAcsUserResponse",
            },
          },
          "create": {
            "auth": true,
            "display-name": "/user_identities/create",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesCreateRequestBadRequestError",
              "root.UserIdentitiesCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "user_identity": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email_address": "email_address",
                      "full_name": "full_name",
                      "phone_number": "phone_number",
                      "user_identity_id": "user_identity_id",
                      "user_identity_key": "user_identity_key",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/create",
            "request": {
              "body": {
                "properties": {
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "phone_number": "optional<string>",
                  "user_identity_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "user_identity",
              "type": "UserIdentitiesCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/user_identities/delete",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesDeleteRequestBadRequestError",
              "root.UserIdentitiesDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/delete",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/user_identities/get",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesGetRequestBadRequestError",
              "root.UserIdentitiesGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "user_identity": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email_address": "email_address",
                      "full_name": "full_name",
                      "phone_number": "phone_number",
                      "user_identity_id": "user_identity_id",
                      "user_identity_key": "user_identity_key",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/get",
            "request": {
              "body": "UserIdentitiesGetRequest",
            },
            "response": {
              "docs": "OK",
              "property": "user_identity",
              "type": "UserIdentitiesGetResponse",
            },
          },
          "grant_access_to_device": {
            "auth": true,
            "display-name": "/user_identities/grant_access_to_device",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesGrantAccessToDeviceRequestBadRequestError",
              "root.UserIdentitiesGrantAccessToDeviceRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/grant_access_to_device",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesGrantAccessToDeviceRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesGrantAccessToDeviceResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/user_identities/list",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesListRequestBadRequestError",
              "root.UserIdentitiesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "user_identities": [
                      {
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email_address": "email_address",
                        "full_name": "full_name",
                        "phone_number": "phone_number",
                        "user_identity_id": "user_identity_id",
                        "user_identity_key": "user_identity_key",
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list",
            "request": {
              "body": {
                "properties": {
                  "credential_manager_acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "user_identities",
              "type": "UserIdentitiesListResponse",
            },
          },
          "list_accessible_devices": {
            "auth": true,
            "display-name": "/user_identities/list_accessible_devices",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesListAccessibleDevicesRequestBadRequestError",
              "root.UserIdentitiesListAccessibleDevicesRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "accessible_devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list_accessible_devices",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListAccessibleDevicesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "UserIdentitiesListAccessibleDevicesResponse",
            },
          },
          "list_acs_systems": {
            "auth": true,
            "display-name": "/user_identities/list_acs_systems",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesListAcsSystemsRequestBadRequestError",
              "root.UserIdentitiesListAcsSystemsRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "acs_systems": [
                      {
                        "acs_system_id": "acs_system_id",
                        "can_add_acs_users_to_acs_access_groups": true,
                        "can_automate_enrollment": true,
                        "can_create_acs_access_groups": true,
                        "can_remove_acs_users_from_acs_access_groups": true,
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "errors": [
                          {
                            "created_at": "2024-01-15T09:30:00Z",
                            "error_code": "seam_bridge_disconnected",
                            "message": "errors",
                          },
                        ],
                        "external_type": "pti_site",
                        "external_type_display_name": "external_type_display_name",
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "name": "name",
                        "system_type": "pti_site",
                        "system_type_display_name": "system_type_display_name",
                        "warnings": [
                          {},
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list_acs_systems",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListAcsSystemsRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_systems",
              "type": "UserIdentitiesListAcsSystemsResponse",
            },
          },
          "list_acs_users": {
            "auth": true,
            "display-name": "/user_identities/list_acs_users",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesListAcsUsersRequestBadRequestError",
              "root.UserIdentitiesListAcsUsersRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "acs_users": [
                      {
                        "access_schedule": {
                          "ends_at": "2024-01-15T09:30:00Z",
                          "starts_at": "2024-01-15T09:30:00Z",
                        },
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email": "email",
                        "email_address": "email_address",
                        "external_type": "pti_user",
                        "external_type_display_name": "external_type_display_name",
                        "full_name": "full_name",
                        "hid_acs_system_id": "hid_acs_system_id",
                        "is_suspended": true,
                        "phone_number": "phone_number",
                        "user_identity_email_address": "user_identity_email_address",
                        "user_identity_full_name": "user_identity_full_name",
                        "user_identity_id": "user_identity_id",
                        "user_identity_phone_number": "user_identity_phone_number",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list_acs_users",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListAcsUsersRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_users",
              "type": "UserIdentitiesListAcsUsersResponse",
            },
          },
          "remove_acs_user": {
            "auth": true,
            "display-name": "/user_identities/remove_acs_user",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesRemoveAcsUserRequestBadRequestError",
              "root.UserIdentitiesRemoveAcsUserRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/remove_acs_user",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesRemoveAcsUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesRemoveAcsUserResponse",
            },
          },
          "revoke_access_to_device": {
            "auth": true,
            "display-name": "/user_identities/revoke_access_to_device",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesRevokeAccessToDeviceRequestBadRequestError",
              "root.UserIdentitiesRevokeAccessToDeviceRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/revoke_access_to_device",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesRevokeAccessToDeviceRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesRevokeAccessToDeviceResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/user_identities/update",
            "docs": undefined,
            "errors": [
              "root.UserIdentitiesUpdateRequestBadRequestError",
              "root.UserIdentitiesUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/update",
            "request": {
              "body": {
                "properties": {
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "phone_number": "optional<string>",
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UserIdentitiesAddAcsUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesCreateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "user_identity": "root.UserIdentity",
          },
        },
        "UserIdentitiesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesGetRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "UserIdentitiesGetRequestUserIdentityId",
            "UserIdentitiesGetRequestUserIdentityKey",
          ],
        },
        "UserIdentitiesGetRequestUserIdentityId": {
          "docs": undefined,
          "properties": {
            "user_identity_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "UserIdentitiesGetRequestUserIdentityKey": {
          "docs": undefined,
          "properties": {
            "user_identity_key": "string",
          },
        },
        "UserIdentitiesGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "user_identity": "root.UserIdentity",
          },
        },
        "UserIdentitiesGrantAccessToDeviceResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesListAccessibleDevicesResponse": {
          "docs": undefined,
          "properties": {
            "accessible_devices": {
              "docs": "
      ---
      deprecated: use devices.
      ---
    ",
              "type": "list<root.Device>",
            },
            "devices": "list<root.Device>",
            "ok": "boolean",
          },
        },
        "UserIdentitiesListAcsSystemsResponse": {
          "docs": undefined,
          "properties": {
            "acs_systems": "list<root.AcsSystem>",
            "ok": "boolean",
          },
        },
        "UserIdentitiesListAcsUsersResponse": {
          "docs": undefined,
          "properties": {
            "acs_users": "list<root.AcsUser>",
            "ok": "boolean",
          },
        },
        "UserIdentitiesListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "user_identities": "list<root.UserIdentity>",
          },
        },
        "UserIdentitiesRemoveAcsUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesRevokeAccessToDeviceResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "userIdentities/enrollmentAutomations.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/delete",
            "docs": undefined,
            "errors": [
              "root.EnrollmentAutomationsDeleteRequestBadRequestError",
              "root.EnrollmentAutomationsDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "enrollment_automation_id": "enrollment_automation_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/delete",
            "request": {
              "body": {
                "properties": {
                  "enrollment_automation_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "EnrollmentAutomationsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/get",
            "docs": undefined,
            "errors": [
              "root.EnrollmentAutomationsGetRequestBadRequestError",
              "root.EnrollmentAutomationsGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "enrollment_automation_id": "enrollment_automation_id",
                },
                "response": {
                  "body": {
                    "enrollment_automation": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                      "enrollment_automation_id": "enrollment_automation_id",
                      "user_identity_id": "user_identity_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/get",
            "request": {
              "body": {
                "properties": {
                  "enrollment_automation_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "enrollment_automation",
              "type": "EnrollmentAutomationsGetResponse",
            },
          },
          "launch": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/launch",
            "docs": undefined,
            "errors": [
              "root.EnrollmentAutomationsLaunchRequestBadRequestError",
              "root.EnrollmentAutomationsLaunchRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "enrollment_automation": {
                      "acs_credential_provisioning_automation_id": "acs_credential_provisioning_automation_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                      "enrollment_automation_id": "enrollment_automation_id",
                      "user_identity_id": "user_identity_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/launch",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_pool_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "create_credential_manager_user": "optional<boolean>",
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "credential_manager_acs_user_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsLaunchRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "enrollment_automation",
              "type": "EnrollmentAutomationsLaunchResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/list",
            "docs": undefined,
            "errors": [
              "root.EnrollmentAutomationsListRequestBadRequestError",
              "root.EnrollmentAutomationsListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "enrollment_automations": [
                      {
                        "created_at": "2024-01-15T09:30:00Z",
                        "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                        "enrollment_automation_id": "enrollment_automation_id",
                        "user_identity_id": "user_identity_id",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/list",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "enrollment_automations",
              "type": "EnrollmentAutomationsListResponse",
            },
          },
        },
      },
      "types": {
        "EnrollmentAutomationsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "EnrollmentAutomationsGetResponse": {
          "docs": undefined,
          "properties": {
            "enrollment_automation": "root.EnrollmentAutomation",
            "ok": "boolean",
          },
        },
        "EnrollmentAutomationsLaunchResponse": {
          "docs": undefined,
          "properties": {
            "enrollment_automation": "EnrollmentAutomationsLaunchResponseEnrollmentAutomation",
            "ok": "boolean",
          },
        },
        "EnrollmentAutomationsLaunchResponseEnrollmentAutomation": {
          "docs": undefined,
          "properties": {
            "acs_credential_provisioning_automation_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "created_at": "datetime",
            "credential_manager_acs_system_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "enrollment_automation_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "user_identity_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "workspace_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "EnrollmentAutomationsListResponse": {
          "docs": undefined,
          "properties": {
            "enrollment_automations": "list<root.EnrollmentAutomation>",
            "ok": "boolean",
          },
        },
      },
    },
    "webhooks.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/webhooks/create",
            "docs": undefined,
            "errors": [
              "root.WebhooksCreateRequestBadRequestError",
              "root.WebhooksCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "url": "url",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "webhook": {
                      "event_types": [
                        "event_types",
                      ],
                      "secret": "secret",
                      "url": "url",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/create",
            "request": {
              "body": {
                "properties": {
                  "event_types": "optional<list<string>>",
                  "url": {
                    "type": "string",
                    "validation": {
                      "format": "uri",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "WebhooksCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "webhook",
              "type": "WebhooksCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/webhooks/delete",
            "docs": undefined,
            "errors": [
              "root.WebhooksDeleteRequestBadRequestError",
              "root.WebhooksDeleteRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "webhook_id": "webhook_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/delete",
            "request": {
              "body": {
                "properties": {
                  "webhook_id": "string",
                },
              },
              "headers": undefined,
              "name": "WebhooksDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "WebhooksDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/webhooks/get",
            "docs": undefined,
            "errors": [
              "root.WebhooksGetRequestBadRequestError",
              "root.WebhooksGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "webhook_id": "webhook_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "webhook": {
                      "event_types": [
                        "event_types",
                      ],
                      "secret": "secret",
                      "url": "url",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/get",
            "request": {
              "body": {
                "properties": {
                  "webhook_id": "string",
                },
              },
              "headers": undefined,
              "name": "WebhooksGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "webhook",
              "type": "WebhooksGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/webhooks/list",
            "docs": undefined,
            "errors": [
              "root.WebhooksListRequestBadRequestError",
              "root.WebhooksListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "ok": true,
                    "webhooks": [
                      {
                        "event_types": [
                          "event_types",
                        ],
                        "secret": "secret",
                        "url": "url",
                        "webhook_id": "webhook_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/list",
            "response": {
              "docs": "OK",
              "property": "webhooks",
              "type": "WebhooksListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/webhooks/update",
            "docs": undefined,
            "errors": [
              "root.WebhooksUpdateRequestBadRequestError",
              "root.WebhooksUpdateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "event_types": [
                    "event_types",
                  ],
                  "webhook_id": "webhook_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/update",
            "request": {
              "body": {
                "properties": {
                  "event_types": "list<string>",
                  "webhook_id": "string",
                },
              },
              "headers": undefined,
              "name": "WebhooksUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "WebhooksUpdateResponse",
            },
          },
        },
      },
      "types": {
        "WebhooksCreateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "webhook": "root.Webhook",
          },
        },
        "WebhooksDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "WebhooksGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "webhook": "root.Webhook",
          },
        },
        "WebhooksListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "webhooks": "list<root.Webhook>",
          },
        },
        "WebhooksUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "workspaces.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/workspaces/create",
            "docs": undefined,
            "errors": [
              "root.WorkspacesCreateRequestBadRequestError",
              "root.WorkspacesCreateRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "name": "name",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "workspace": {
                      "company_name": "company_name",
                      "connect_partner_name": "connect_partner_name",
                      "is_sandbox": true,
                      "name": "name",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/create",
            "request": {
              "body": {
                "properties": {
                  "company_name": "optional<string>",
                  "connect_partner_name": {
                    "docs": "
    ---
    deprecated: use company_name
    ---
  ",
                    "type": "optional<string>",
                  },
                  "is_sandbox": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "name": "string",
                  "webview_logo_shape": "optional<WorkspacesCreateRequestWebviewLogoShape>",
                  "webview_primary_button_color": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "WorkspacesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "workspace",
              "type": "WorkspacesCreateResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/workspaces/get",
            "docs": undefined,
            "errors": [
              "root.WorkspacesGetRequestBadRequestError",
              "root.WorkspacesGetRequestUnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "ok": true,
                    "workspace": {
                      "company_name": "company_name",
                      "connect_partner_name": "connect_partner_name",
                      "is_sandbox": true,
                      "name": "name",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/get",
            "response": {
              "docs": "OK",
              "property": "workspace",
              "type": "WorkspacesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/workspaces/list",
            "docs": undefined,
            "errors": [
              "root.WorkspacesListRequestBadRequestError",
              "root.WorkspacesListRequestUnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "ok": true,
                    "workspaces": [
                      {
                        "company_name": "company_name",
                        "connect_partner_name": "connect_partner_name",
                        "is_sandbox": true,
                        "name": "name",
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/list",
            "response": {
              "docs": "OK",
              "property": "workspaces",
              "type": "WorkspacesListResponse",
            },
          },
          "reset_sandbox": {
            "auth": true,
            "display-name": "/workspaces/reset_sandbox",
            "docs": undefined,
            "errors": [
              "root.WorkspacesResetSandboxRequestBadRequestError",
              "root.WorkspacesResetSandboxRequestUnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/reset_sandbox",
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "WorkspacesResetSandboxResponse",
            },
          },
        },
      },
      "types": {
        "WorkspacesCreateRequestWebviewLogoShape": {
          "enum": [
            "circle",
            "square",
          ],
        },
        "WorkspacesCreateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "workspace": "root.Workspace",
          },
        },
        "WorkspacesGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "workspace": "root.Workspace",
          },
        },
        "WorkspacesListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "workspaces": "list<root.Workspace>",
          },
        },
        "WorkspacesResetSandboxResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "AccessCodesCreateMultipleRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesCreateMultipleRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesGenerateCodeRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesGenerateCodeRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesPullBackupAccessCodeRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesPullBackupAccessCodeRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessCodesUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessCodesUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessGroupsAddUserRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessGroupsAddUserRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessGroupsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessGroupsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessGroupsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessGroupsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessGroupsListUsersRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessGroupsListUsersRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "AccessGroupsRemoveUserRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "AccessGroupsRemoveUserRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ActionAttemptsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ActionAttemptsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ActionAttemptsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ActionAttemptsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsGetOrCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsGetOrCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsGrantAccessRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsGrantAccessRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClientSessionsRevokeRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClientSessionsRevokeRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClimateSettingSchedulesCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClimateSettingSchedulesCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClimateSettingSchedulesDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClimateSettingSchedulesDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClimateSettingSchedulesGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClimateSettingSchedulesGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClimateSettingSchedulesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClimateSettingSchedulesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ClimateSettingSchedulesUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ClimateSettingSchedulesUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectWebviewsCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectWebviewsCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectWebviewsDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectWebviewsDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectWebviewsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectWebviewsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectWebviewsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectWebviewsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectedAccountsDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectedAccountsDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectedAccountsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectedAccountsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectedAccountsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectedAccountsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ConnectedAccountsUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ConnectedAccountsUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialPoolsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialPoolsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialProvisioningAutomationsLaunchRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialProvisioningAutomationsLaunchRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsAssignRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsAssignRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsListAccessibleEntrancesRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsListAccessibleEntrancesRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsUnassignRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsUnassignRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "CredentialsUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "CredentialsUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "DevicesDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "DevicesDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "DevicesGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "DevicesGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "DevicesListDeviceProvidersRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "DevicesListDeviceProvidersRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "DevicesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "DevicesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "DevicesUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "DevicesUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EnrollmentAutomationsDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EnrollmentAutomationsDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EnrollmentAutomationsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EnrollmentAutomationsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EnrollmentAutomationsLaunchRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EnrollmentAutomationsLaunchRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EnrollmentAutomationsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EnrollmentAutomationsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EntrancesGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EntrancesGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EntrancesGrantAccessRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EntrancesGrantAccessRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EntrancesListCredentialsWithAccessRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EntrancesListCredentialsWithAccessRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EntrancesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EntrancesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EventsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EventsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "EventsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "EventsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "LocksGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "LocksGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "LocksListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "LocksListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "LocksLockDoorRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "LocksLockDoorRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "LocksUnlockDoorRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "LocksUnlockDoorRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NetworksGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NetworksGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NetworksListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NetworksListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NoiseThresholdsCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NoiseThresholdsCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NoiseThresholdsDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NoiseThresholdsDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NoiseThresholdsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NoiseThresholdsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NoiseThresholdsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NoiseThresholdsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "NoiseThresholdsUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "NoiseThresholdsUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "PhonesDeactivateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "PhonesDeactivateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "PhonesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "PhonesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SimulateConnectRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SimulateConnectRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SimulateCreateSandboxPhoneRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SimulateCreateSandboxPhoneRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SimulateCreateUnmanagedAccessCodeRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SimulateCreateUnmanagedAccessCodeRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SimulateDisconnectRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SimulateDisconnectRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SimulateRemoveRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SimulateRemoveRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SimulateTriggerNoiseThresholdRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SimulateTriggerNoiseThresholdRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SystemsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SystemsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SystemsListCompatibleCredentialManagerAcsSystemsRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SystemsListCompatibleCredentialManagerAcsSystemsRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "SystemsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "SystemsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsCoolRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsCoolRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsHeatCoolRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsHeatCoolRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsHeatRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsHeatRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsOffRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsOffRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsSetFanModeRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsSetFanModeRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "ThermostatsUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "ThermostatsUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UnmanagedConvertToManagedRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnmanagedConvertToManagedRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UnmanagedDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnmanagedDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UnmanagedGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnmanagedGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UnmanagedListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnmanagedListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UnmanagedUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnmanagedUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesAddAcsUserRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesAddAcsUserRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesGrantAccessToDeviceRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesGrantAccessToDeviceRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesListAccessibleDevicesRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesListAccessibleDevicesRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesListAcsSystemsRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesListAcsSystemsRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesListAcsUsersRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesListAcsUsersRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesRemoveAcsUserRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesRemoveAcsUserRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesRevokeAccessToDeviceRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesRevokeAccessToDeviceRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UserIdentitiesUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UserIdentitiesUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersAddToAccessGroupRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersAddToAccessGroupRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersListAccessibleEntrancesRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersListAccessibleEntrancesRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersRemoveFromAccessGroupRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersRemoveFromAccessGroupRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersRevokeAccessToAllEntrancesRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersRevokeAccessToAllEntrancesRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersSuspendRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersSuspendRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersUnsuspendRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersUnsuspendRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "UsersUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UsersUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WebhooksCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WebhooksCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WebhooksDeleteRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WebhooksDeleteRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WebhooksGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WebhooksGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WebhooksListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WebhooksListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WebhooksUpdateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WebhooksUpdateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WorkspacesCreateRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WorkspacesCreateRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WorkspacesGetRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WorkspacesGetRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WorkspacesListRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WorkspacesListRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
      "WorkspacesResetSandboxRequestBadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "WorkspacesResetSandboxRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
    },
    "types": {
      "AccessCode": {
        "docs": undefined,
        "properties": {
          "access_code_id": {
            "docs": "Unique identifier for the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "code": {
            "docs": "Code used for access. Typically, a numeric or alphanumeric string.",
            "type": "optional<string>",
          },
          "common_code_key": {
            "docs": "Unique identifier for a group of access codes that share the same code.",
            "type": "optional<string>",
          },
          "created_at": {
            "docs": "Date and time at which the access code was created.",
            "type": "datetime",
          },
          "device_id": {
            "docs": "Unique identifier for the device associated with the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ends_at": {
            "docs": "Date and time after which the time-bound access code becomes inactive.",
            "type": "optional<datetime>",
          },
          "errors": "optional<unknown>",
          "is_backup": {
            "docs": "Indicates whether the access code is a backup code.",
            "type": "optional<boolean>",
          },
          "is_backup_access_code_available": {
            "docs": "Indicates whether a backup access code is available for use if the primary access code is lost or compromised.",
            "type": "boolean",
          },
          "is_external_modification_allowed": {
            "docs": "Indicates whether changes to the access code from external sources are permitted.",
            "type": "boolean",
          },
          "is_managed": {
            "docs": "Indicates whether Seam manages the access code.",
            "type": "boolean",
          },
          "is_offline_access_code": {
            "docs": "Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection.",
            "type": "boolean",
          },
          "is_one_time_use": {
            "docs": "Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use.",
            "type": "boolean",
          },
          "is_scheduled_on_device": {
            "docs": "Indicates whether the code is set on the device according to a preconfigured schedule.",
            "type": "optional<boolean>",
          },
          "is_waiting_for_code_assignment": {
            "docs": "Indicates whether the access code is waiting for a code assignment.",
            "type": "optional<boolean>",
          },
          "name": {
            "docs": "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.",
            "type": "optional<string>",
          },
          "pulled_backup_access_code_id": {
            "docs": "Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code.",
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "starts_at": {
            "docs": "Date and time at which the time-bound access code becomes active.",
            "type": "optional<datetime>",
          },
          "status": {
            "docs": "
    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
  ",
            "type": "AccessCodeStatus",
          },
          "type": {
            "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
            "type": "AccessCodeType",
          },
          "warnings": "optional<unknown>",
        },
      },
      "AccessCodeStatus": {
        "docs": "
    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
  ",
        "enum": [
          "setting",
          "set",
          "unset",
          "removing",
          "unknown",
        ],
      },
      "AccessCodeType": {
        "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
        "enum": [
          "time_bound",
          "ongoing",
        ],
      },
      "AcsAccessGroup": {
        "docs": undefined,
        "properties": {
          "access_group_type": {
            "docs": "
    ---
    deprecated: use external_type
    ---
  ",
            "type": "AcsAccessGroupAccessGroupType",
          },
          "access_group_type_display_name": {
            "docs": "
    ---
    deprecated: use external_type_display_name
    ---
    ",
            "type": "string",
          },
          "acs_access_group_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": "string",
          "external_type": "AcsAccessGroupExternalType",
          "external_type_display_name": "string",
          "name": "string",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsAccessGroupAccessGroupType": {
        "docs": "
    ---
    deprecated: use external_type
    ---
  ",
        "enum": [
          "pti_unit",
          "pti_access_level",
          "salto_access_group",
          "brivo_group",
        ],
      },
      "AcsAccessGroupExternalType": {
        "enum": [
          "pti_unit",
          "pti_access_level",
          "salto_access_group",
          "brivo_group",
        ],
      },
      "AcsCredential": {
        "docs": undefined,
        "properties": {
          "access_method": "AcsCredentialAccessMethod",
          "acs_credential_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_credential_pool_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_user_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "code": "optional<string>",
          "created_at": "datetime",
          "display_name": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "ends_at": "optional<string>",
          "errors": "list<AcsCredentialErrorsItem>",
          "external_type": "optional<AcsCredentialExternalType>",
          "external_type_display_name": "optional<string>",
          "is_latest_desired_state_synced_with_provider": "optional<boolean>",
          "is_multi_phone_sync_credential": "optional<boolean>",
          "latest_desired_state_synced_with_provider_at": "optional<datetime>",
          "parent_acs_credential_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "starts_at": "optional<string>",
          "visionline_metadata": "optional<AcsCredentialVisionlineMetadata>",
          "warnings": "list<AcsCredentialWarningsItem>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsCredentialAccessMethod": {
        "enum": [
          "code",
          "card",
          "mobile_key",
        ],
      },
      "AcsCredentialErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "AcsCredentialExternalType": {
        "enum": [
          "pti_card",
          "brivo_credential",
          "hid_credential",
          "visionline_card",
        ],
      },
      "AcsCredentialPool": {
        "docs": undefined,
        "properties": {
          "acs_credential_pool_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "external_type": "literal<"hid_part_number">",
          "external_type_display_name": "string",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsCredentialProvisioningAutomation": {
        "docs": undefined,
        "properties": {
          "acs_credential_provisioning_automation_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "credential_manager_acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "user_identity_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsCredentialVisionlineMetadata": {
        "docs": undefined,
        "properties": {
          "card_function_type": "AcsCredentialVisionlineMetadataCardFunctionType",
          "common_acs_entrance_ids": "optional<list<string>>",
          "guest_acs_entrance_ids": "optional<list<string>>",
          "joiner_acs_credential_ids": "optional<list<string>>",
        },
      },
      "AcsCredentialVisionlineMetadataCardFunctionType": {
        "enum": [
          "guest",
          "staff",
        ],
      },
      "AcsCredentialWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "AcsEntrance": {
        "docs": undefined,
        "properties": {
          "acs_entrance_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": "string",
          "errors": "list<AcsEntranceErrorsItem>",
          "latch_metadata": "optional<AcsEntranceLatchMetadata>",
          "visionline_metadata": "optional<AcsEntranceVisionlineMetadata>",
        },
      },
      "AcsEntranceErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "AcsEntranceLatchMetadata": {
        "docs": undefined,
        "properties": {
          "accessibility_type": "string",
          "door_name": "string",
          "door_type": "string",
          "is_connected": "boolean",
        },
      },
      "AcsEntranceVisionlineMetadata": {
        "docs": undefined,
        "properties": {
          "door_category": "AcsEntranceVisionlineMetadataDoorCategory",
          "door_name": "string",
          "profiles": "optional<list<AcsEntranceVisionlineMetadataProfilesItem>>",
        },
      },
      "AcsEntranceVisionlineMetadataDoorCategory": {
        "enum": [
          "entrance",
          "guest",
          {
            "name": "ElevatorReader",
            "value": "elevator reader",
          },
          "common",
          {
            "name": "CommonPms",
            "value": "common (PMS)",
          },
        ],
      },
      "AcsEntranceVisionlineMetadataProfilesItem": {
        "docs": undefined,
        "properties": {
          "visionline_door_profile_id": "string",
          "visionline_door_profile_type": "AcsEntranceVisionlineMetadataProfilesItemVisionlineDoorProfileType",
        },
      },
      "AcsEntranceVisionlineMetadataProfilesItemVisionlineDoorProfileType": {
        "enum": [
          "BLE",
          "commonDoor",
          "touch",
        ],
      },
      "AcsSystem": {
        "docs": undefined,
        "properties": {
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "can_add_acs_users_to_acs_access_groups": "optional<boolean>",
          "can_automate_enrollment": "optional<boolean>",
          "can_create_acs_access_groups": "optional<boolean>",
          "can_remove_acs_users_from_acs_access_groups": "optional<boolean>",
          "connected_account_ids": "list<string>",
          "created_at": "datetime",
          "errors": "list<AcsSystemErrorsItem>",
          "external_type": "optional<AcsSystemExternalType>",
          "external_type_display_name": "optional<string>",
          "image_alt_text": "string",
          "image_url": "string",
          "name": "string",
          "system_type": {
            "docs": "
      ---
      deprecated: use external_type
      ---
      ",
            "type": "optional<AcsSystemSystemType>",
          },
          "system_type_display_name": {
            "docs": "
      ---
      deprecated: use external_type_display_name
      ---
      ",
            "type": "optional<string>",
          },
          "warnings": "list<AcsSystemWarningsItem>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsSystemErrorsItem": {
        "base-properties": {},
        "discriminant": "error_code",
        "docs": undefined,
        "union": {
          "seam_bridge_disconnected": "AcsSystemErrorsItemSeamBridgeDisconnected",
          "visionline_instance_unreachable": "AcsSystemErrorsItemVisionlineInstanceUnreachable",
        },
      },
      "AcsSystemErrorsItemSeamBridgeDisconnected": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "message": "string",
        },
      },
      "AcsSystemErrorsItemVisionlineInstanceUnreachable": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "message": "string",
        },
      },
      "AcsSystemExternalType": {
        "enum": [
          "pti_site",
          "alta_org",
          "salto_site",
          "brivo_account",
          "hid_credential_manager_organization",
          "visionline_system",
          "assa_abloy_credential_service",
          "latch_building",
        ],
      },
      "AcsSystemSystemType": {
        "docs": "
      ---
      deprecated: use external_type
      ---
      ",
        "enum": [
          "pti_site",
          "alta_org",
          "salto_site",
          "brivo_account",
          "hid_credential_manager_organization",
          "visionline_system",
          "assa_abloy_credential_service",
          "latch_building",
        ],
      },
      "AcsSystemWarningsItem": {
        "docs": undefined,
        "properties": {},
      },
      "AcsUser": {
        "docs": undefined,
        "properties": {
          "access_schedule": "optional<AcsUserAccessSchedule>",
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_user_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": "string",
          "email": {
            "docs": "
    ---
    deprecated: use email_address.
    ---
    ",
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "email_address": {
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "external_type": "optional<AcsUserExternalType>",
          "external_type_display_name": "optional<string>",
          "full_name": "optional<string>",
          "hid_acs_system_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "is_suspended": "boolean",
          "phone_number": "optional<string>",
          "user_identity_email_address": "optional<string>",
          "user_identity_full_name": "optional<string>",
          "user_identity_id": "optional<string>",
          "user_identity_phone_number": "optional<string>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsUserAccessSchedule": {
        "docs": undefined,
        "properties": {
          "ends_at": "datetime",
          "starts_at": "datetime",
        },
      },
      "AcsUserExternalType": {
        "enum": [
          "pti_user",
          "brivo_user",
          "hid_credential_manager_user",
          "salto_site_user",
          "latch_user",
        ],
      },
      "ActionAttempt": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          {
            "docs": "Locking door.",
            "type": "ActionAttemptZero",
          },
          {
            "docs": "Locking door succeeded.",
            "type": "ActionAttemptOne",
          },
          {
            "docs": "Locking door failed.",
            "type": "ActionAttemptTwo",
          },
          {
            "docs": "Unlocking door.",
            "type": "ActionAttemptThree",
          },
          {
            "docs": "Unlocking door succeeded.",
            "type": "ActionAttemptFour",
          },
          {
            "docs": "Unlocking door failed.",
            "type": "ActionAttemptFive",
          },
          {
            "docs": "Resetting sandbox workspace.",
            "type": "ActionAttemptSix",
          },
          {
            "docs": "Resetting sandbox workspace succeeded.",
            "type": "ActionAttemptSeven",
          },
          {
            "docs": "Resetting sandbox workspace failed.",
            "type": "ActionAttemptEight",
          },
          {
            "docs": "Setting HVAC to cool.",
            "type": "ActionAttemptNine",
          },
          {
            "docs": "Setting HVAC to cool succeeded.",
            "type": "ActionAttemptTen",
          },
          {
            "docs": "Setting HVAC to cool failed.",
            "type": "ActionAttemptEleven",
          },
          {
            "docs": "Setting HVAC to heat mode.",
            "type": "ActionAttemptTwelve",
          },
          {
            "docs": "Setting HVAC to heat mode succeeded.",
            "type": "ActionAttemptThirteen",
          },
          {
            "docs": "Setting HVAC to heat mode failed.",
            "type": "ActionAttemptFourteen",
          },
          {
            "docs": "Setting HVAC to heat-cool mode.",
            "type": "ActionAttemptFifteen",
          },
          {
            "docs": "Setting HVAC to heat-cool mode succeeded.",
            "type": "ActionAttemptSixteen",
          },
          {
            "docs": "Setting heat-cool mode failed.",
            "type": "ActionAttemptSeventeen",
          },
          {
            "docs": "Setting fan mode.",
            "type": "ActionAttemptEighteen",
          },
          {
            "docs": "Setting fan mode succeeded.",
            "type": "ActionAttemptNineteen",
          },
          {
            "docs": "Setting fan mode failed.",
            "type": "ActionAttemptTwenty",
          },
          {
            "docs": "Turning HVAC off.",
            "type": "ActionAttemptTwentyOne",
          },
          {
            "docs": "Turning HVAC off succeeded.",
            "type": "ActionAttemptTwentyTwo",
          },
          {
            "docs": "Turning HVAC off failed.",
            "type": "ActionAttemptTwentyThree",
          },
          "ActionAttemptTwentyFour",
          "ActionAttemptTwentyFive",
          "ActionAttemptTwentySix",
          "ActionAttemptTwentySeven",
          "ActionAttemptTwentyEight",
          "ActionAttemptTwentyNine",
          "ActionAttemptThirty",
          "ActionAttemptThirtyOne",
          "ActionAttemptThirtyTwo",
          "ActionAttemptThirtyThree",
          "ActionAttemptThirtyFour",
          "ActionAttemptThirtyFive",
          "ActionAttemptThirtySix",
          "ActionAttemptThirtySeven",
          "ActionAttemptThirtyEight",
          "ActionAttemptThirtyNine",
          "ActionAttemptForty",
          "ActionAttemptFortyOne",
          "ActionAttemptFortyTwo",
          "ActionAttemptFortyThree",
          "ActionAttemptActionAttemptId",
        ],
      },
      "ActionAttemptActionAttemptId": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_NOISE_THRESHOLD">",
          "error": "ActionAttemptActionAttemptIdError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptActionAttemptIdError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptEight": {
        "docs": "Resetting sandbox workspace failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"RESET_SANDBOX_WORKSPACE">",
          "error": "ActionAttemptEightError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptEightError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptEighteen": {
        "docs": "Setting fan mode.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_FAN_MODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptEleven": {
        "docs": "Setting HVAC to cool failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_COOL">",
          "error": "ActionAttemptElevenError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptElevenError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptFifteen": {
        "docs": "Setting HVAC to heat-cool mode.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT_COOL">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptFive": {
        "docs": "Unlocking door failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UNLOCK_DOOR">",
          "error": "ActionAttemptFiveError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptFiveError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptForty": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptFortyOne": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_NOISE_THRESHOLD">",
          "error": "ActionAttemptFortyOneError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptFortyOneError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptFortyThree": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptFortyTwo": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptFour": {
        "docs": "Unlocking door succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UNLOCK_DOOR">",
          "error": "optional<string>",
          "result": "ActionAttemptFourResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptFourResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptFourteen": {
        "docs": "Setting HVAC to heat mode failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT">",
          "error": "ActionAttemptFourteenError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptFourteenError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptNine": {
        "docs": "Setting HVAC to cool.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_COOL">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptNineteen": {
        "docs": "Setting fan mode succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_FAN_MODE">",
          "error": "optional<string>",
          "result": "ActionAttemptNineteenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptNineteenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptOne": {
        "docs": "Locking door succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"LOCK_DOOR">",
          "error": "optional<string>",
          "result": "ActionAttemptOneResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptOneResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptSeven": {
        "docs": "Resetting sandbox workspace succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"RESET_SANDBOX_WORKSPACE">",
          "error": "optional<string>",
          "result": "ActionAttemptSevenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptSevenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptSeventeen": {
        "docs": "Setting heat-cool mode failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT_COOL">",
          "error": "ActionAttemptSeventeenError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptSeventeenError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptSix": {
        "docs": "Resetting sandbox workspace.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"RESET_SANDBOX_WORKSPACE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptSixteen": {
        "docs": "Setting HVAC to heat-cool mode succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT_COOL">",
          "error": "optional<string>",
          "result": "ActionAttemptSixteenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptSixteenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptTen": {
        "docs": "Setting HVAC to cool succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_COOL">",
          "error": "optional<string>",
          "result": "ActionAttemptTenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptThirteen": {
        "docs": "Setting HVAC to heat mode succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT">",
          "error": "optional<string>",
          "result": "ActionAttemptThirteenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirteenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptThirty": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyEight": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_NOISE_THRESHOLD">",
          "error": "ActionAttemptThirtyEightError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptThirtyEightError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptThirtyFive": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_ACCESS_CODE">",
          "error": "ActionAttemptThirtyFiveError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptThirtyFiveError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptThirtyFour": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirtyNine": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyOne": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirtySeven": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirtySix": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyThree": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyTwo": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_ACCESS_CODE">",
          "error": "ActionAttemptThirtyTwoError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptThirtyTwoError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptThree": {
        "docs": "Unlocking door.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UNLOCK_DOOR">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwelve": {
        "docs": "Setting HVAC to heat mode.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwenty": {
        "docs": "Setting fan mode failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_FAN_MODE">",
          "error": "ActionAttemptTwentyError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentyEight": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTwentyError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyFive": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SYNC_ACCESS_CODES">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTwentyFour": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SYNC_ACCESS_CODES">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwentyNine": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_ACCESS_CODE">",
          "error": "ActionAttemptTwentyNineError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentyNineError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyOne": {
        "docs": "Turning HVAC off.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_THERMOSTAT_OFF">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwentySeven": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwentySix": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SYNC_ACCESS_CODES">",
          "error": "ActionAttemptTwentySixError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentySixError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyThree": {
        "docs": "Turning HVAC off failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_THERMOSTAT_OFF">",
          "error": "ActionAttemptTwentyThreeError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentyThreeError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyTwo": {
        "docs": "Turning HVAC off succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_THERMOSTAT_OFF">",
          "error": "optional<string>",
          "result": "ActionAttemptTwentyTwoResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTwentyTwoResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptTwo": {
        "docs": "Locking door failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"LOCK_DOOR">",
          "error": "ActionAttemptTwoError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwoError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptZero": {
        "docs": "Locking door.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"LOCK_DOOR">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ClientSession": {
        "docs": undefined,
        "properties": {
          "client_session_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "connect_webview_ids": "list<string>",
          "connected_account_ids": "list<string>",
          "created_at": "datetime",
          "device_count": "double",
          "token": "string",
          "user_identifier_key": "optional<string>",
          "user_identity_ids": "list<string>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "ClimateSettingSchedule": {
        "docs": undefined,
        "properties": {
          "automatic_cooling_enabled": "optional<boolean>",
          "automatic_heating_enabled": "optional<boolean>",
          "climate_setting_schedule_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "cooling_set_point_celsius": "optional<double>",
          "cooling_set_point_fahrenheit": "optional<double>",
          "created_at": "datetime",
          "device_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "errors": "optional<unknown>",
          "heating_set_point_celsius": "optional<double>",
          "heating_set_point_fahrenheit": "optional<double>",
          "hvac_mode_setting": "optional<ClimateSettingScheduleHvacModeSetting>",
          "manual_override_allowed": "optional<boolean>",
          "name": "optional<string>",
          "schedule_ends_at": "string",
          "schedule_starts_at": "string",
          "schedule_type": "literal<"time_bound">",
        },
      },
      "ClimateSettingScheduleHvacModeSetting": {
        "enum": [
          "off",
          "heat",
          "cool",
          "heat_cool",
        ],
      },
      "ConnectWebview": {
        "docs": undefined,
        "properties": {
          "accepted_devices": {
            "docs": "
      ---
      deprecated: Unused. Will be removed.
      ---
      ",
            "type": "list<string>",
          },
          "accepted_providers": "list<string>",
          "any_device_allowed": {
            "docs": "
      ---
      deprecated: Unused. Will be removed.
      ---
      ",
            "type": "boolean",
          },
          "any_provider_allowed": "boolean",
          "authorized_at": "optional<datetime>",
          "automatically_manage_new_devices": "boolean",
          "connect_webview_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "connected_account_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "custom_metadata": "map<string, ConnectWebviewCustomMetadataValue>",
          "custom_redirect_failure_url": {
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "custom_redirect_url": {
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_selection_mode": "ConnectWebviewDeviceSelectionMode",
          "login_successful": "boolean",
          "selected_provider": "optional<string>",
          "status": "ConnectWebviewStatus",
          "url": {
            "type": "string",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "wait_for_device_creation": "boolean",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "ConnectWebviewCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "ConnectWebviewDeviceSelectionMode": {
        "enum": [
          "none",
          "single",
          "multiple",
        ],
      },
      "ConnectWebviewStatus": {
        "enum": [
          "pending",
          "failed",
          "authorized",
        ],
      },
      "ConnectedAccount": {
        "docs": undefined,
        "properties": {
          "account_type": "optional<string>",
          "account_type_display_name": "string",
          "automatically_manage_new_devices": "boolean",
          "connected_account_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "optional<datetime>",
          "custom_metadata": "map<string, ConnectedAccountCustomMetadataValue>",
          "errors": "optional<unknown>",
          "user_identifier": "optional<ConnectedAccountUserIdentifier>",
          "warnings": "optional<unknown>",
        },
      },
      "ConnectedAccountCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "ConnectedAccountUserIdentifier": {
        "docs": undefined,
        "properties": {
          "api_url": "optional<string>",
          "email": "optional<string>",
          "exclusive": "optional<boolean>",
          "phone": "optional<string>",
          "username": "optional<string>",
        },
      },
      "Device": {
        "docs": undefined,
        "properties": {
          "can_program_offline_access_codes": "optional<boolean>",
          "can_program_online_access_codes": "optional<boolean>",
          "can_remotely_lock": "optional<boolean>",
          "can_remotely_unlock": "optional<boolean>",
          "can_simulate_connection": "optional<boolean>",
          "can_simulate_disconnection": "optional<boolean>",
          "can_simulate_removal": "optional<boolean>",
          "capabilities_supported": {
            "docs": "Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health.",
            "type": "list<DeviceCapabilitiesSupportedItem>",
          },
          "connected_account_id": {
            "docs": "Unique identifier for the account associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": {
            "docs": "Date and time at which the device object was created.",
            "type": "datetime",
          },
          "custom_metadata": "map<string, DeviceCustomMetadataValue>",
          "device_id": {
            "docs": "Unique identifier for the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_type": {
            "docs": "Type of the device.",
            "type": "DeviceDeviceType",
          },
          "display_name": {
            "docs": "Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.",
            "type": "string",
          },
          "errors": {
            "docs": "Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.",
            "type": "list<DeviceErrorsItem>",
          },
          "is_managed": {
            "docs": "Indicates whether Seam manages the device.",
            "type": "boolean",
          },
          "location": {
            "docs": "Location information for the device.",
            "type": "optional<DeviceLocation>",
          },
          "nickname": {
            "docs": "Optional nickname to describe the device, settable through Seam",
            "type": "optional<string>",
          },
          "properties": {
            "docs": "Properties of the device.",
            "type": "DeviceProperties",
          },
          "warnings": {
            "docs": "Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.",
            "type": "list<DeviceWarningsItem>",
          },
          "workspace_id": {
            "docs": "Unique identifier for the Seam workspace associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "DeviceCapabilitiesSupportedItem": {
        "enum": [
          "access_code",
          "lock",
          "noise_detection",
          "thermostat",
          "battery",
          "phone",
        ],
      },
      "DeviceCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "DeviceDeviceType": {
        "docs": "Type of the device.",
        "enum": [
          "akuvox_lock",
          "august_lock",
          "brivo_access_point",
          "butterflymx_panel",
          "avigilon_alta_entry",
          "doorking_lock",
          "genie_door",
          "igloo_lock",
          "linear_lock",
          "lockly_lock",
          "kwikset_lock",
          "nuki_lock",
          "salto_lock",
          "schlage_lock",
          "seam_relay",
          "smartthings_lock",
          "wyze_lock",
          "yale_lock",
          "two_n_intercom",
          "controlbyweb_device",
          "ttlock_lock",
          "igloohome_lock",
          "hubitat_lock",
          "four_suites_door",
          "dormakaba_oracode_door",
          "tedee_lock",
          "noiseaware_activity_zone",
          "minut_sensor",
          "ecobee_thermostat",
          "nest_thermostat",
          "honeywell_resideo_thermostat",
          "ios_phone",
          "android_phone",
        ],
      },
      "DeviceErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "DeviceLocation": {
        "docs": "Location information for the device.",
        "properties": {
          "location_name": {
            "docs": "Name of the device location.",
            "type": "optional<string>",
          },
          "timezone": {
            "docs": "Time zone of the device location.",
            "type": "optional<string>",
          },
        },
      },
      "DeviceProperties": {
        "docs": "Properties of the device.",
        "properties": {
          "_experimental_supported_code_from_access_codes_lengths": "optional<list<double>>",
          "accessory_keypad": {
            "docs": "Represents the accessory keypad state.",
            "type": "optional<DevicePropertiesAccessoryKeypad>",
          },
          "appearance": "DevicePropertiesAppearance",
          "assa_abloy_credential_service_metadata": "optional<DevicePropertiesAssaAbloyCredentialServiceMetadata>",
          "august_metadata": "optional<DevicePropertiesAugustMetadata>",
          "avigilon_alta_metadata": "optional<DevicePropertiesAvigilonAltaMetadata>",
          "battery": {
            "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
            "type": "optional<DevicePropertiesBattery>",
          },
          "battery_level": {
            "docs": "Indicates the battery level of the device as a decimal value between 0 and 1, inclusive.",
            "type": "optional<double>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "brivo_metadata": "optional<DevicePropertiesBrivoMetadata>",
          "code_constraints": "optional<list<DevicePropertiesCodeConstraintsItem>>",
          "controlbyweb_metadata": "optional<DevicePropertiesControlbywebMetadata>",
          "currently_triggering_noise_threshold_ids": {
            "docs": "Array of noise threshold IDs that are currently triggering.",
            "type": "optional<list<string>>",
          },
          "door_open": "optional<boolean>",
          "dormakaba_oracode_metadata": "optional<DevicePropertiesDormakabaOracodeMetadata>",
          "ecobee_metadata": "optional<DevicePropertiesEcobeeMetadata>",
          "four_suites_metadata": "optional<DevicePropertiesFourSuitesMetadata>",
          "genie_metadata": "optional<DevicePropertiesGenieMetadata>",
          "has_direct_power": {
            "docs": "Indicates whether the device has direct power.",
            "type": "optional<boolean>",
          },
          "has_native_entry_events": "optional<boolean>",
          "honeywell_resideo_metadata": "optional<DevicePropertiesHoneywellResideoMetadata>",
          "hubitat_metadata": "optional<DevicePropertiesHubitatMetadata>",
          "igloo_metadata": "optional<DevicePropertiesIglooMetadata>",
          "igloohome_metadata": "optional<DevicePropertiesIgloohomeMetadata>",
          "image_alt_text": {
            "docs": "Alt text for the device image.",
            "type": "optional<string>",
          },
          "image_url": {
            "docs": "Image URL for the device.",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "keypad_battery": "optional<DevicePropertiesKeypadBattery>",
          "kwikset_metadata": "optional<DevicePropertiesKwiksetMetadata>",
          "locked": "optional<boolean>",
          "lockly_metadata": "optional<DevicePropertiesLocklyMetadata>",
          "manufacturer": {
            "docs": "Manufacturer of the device.",
            "type": "optional<string>",
          },
          "max_active_codes_supported": "optional<double>",
          "minut_metadata": "optional<DevicePropertiesMinutMetadata>",
          "model": "DevicePropertiesModel",
          "name": {
            "docs": "
      ---
      deprecated: use device.display_name instead
      ---
      Name of the device.
      ",
            "type": "string",
          },
          "nest_metadata": "optional<DevicePropertiesNestMetadata>",
          "noise_level_decibels": {
            "docs": "Indicates current noise level in decibels, if the device supports noise detection.",
            "type": "optional<double>",
          },
          "noiseaware_metadata": "optional<DevicePropertiesNoiseawareMetadata>",
          "nuki_metadata": "optional<DevicePropertiesNukiMetadata>",
          "offline_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use offline access codes for the device.",
            "type": "optional<boolean>",
          },
          "online": {
            "docs": "Indicates whether the device is online.",
            "type": "boolean",
          },
          "online_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use online access codes for the device.",
            "type": "optional<boolean>",
          },
          "salto_metadata": "optional<DevicePropertiesSaltoMetadata>",
          "schlage_metadata": "optional<DevicePropertiesSchlageMetadata>",
          "seam_bridge_metadata": "optional<DevicePropertiesSeamBridgeMetadata>",
          "serial_number": {
            "docs": "Serial number of the device.",
            "type": "optional<string>",
          },
          "smartthings_metadata": "optional<DevicePropertiesSmartthingsMetadata>",
          "supported_code_lengths": "optional<list<double>>",
          "supports_accessory_keypad": {
            "docs": "
      ---
      deprecated: use device.properties.model.can_connect_accessory_keypad
      ---
      ",
            "type": "optional<boolean>",
          },
          "supports_backup_access_code_pool": "optional<boolean>",
          "supports_offline_access_codes": {
            "docs": "
      ---
      deprecated: use offline_access_codes_enabled
      ---
      ",
            "type": "optional<boolean>",
          },
          "tedee_metadata": "optional<DevicePropertiesTedeeMetadata>",
          "ttlock_metadata": "optional<DevicePropertiesTtlockMetadata>",
          "two_n_metadata": "optional<DevicePropertiesTwoNMetadata>",
          "wyze_metadata": "optional<DevicePropertiesWyzeMetadata>",
        },
      },
      "DevicePropertiesAccessoryKeypad": {
        "docs": "Represents the accessory keypad state.",
        "properties": {
          "battery": {
            "docs": "Indicates if the keypad battery properties.",
            "type": "optional<DevicePropertiesAccessoryKeypadBattery>",
          },
          "is_connected": {
            "docs": "Indicates if the accessory_keypad is connected to the device.",
            "type": "boolean",
          },
        },
      },
      "DevicePropertiesAccessoryKeypadBattery": {
        "docs": "Indicates if the keypad battery properties.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
        },
      },
      "DevicePropertiesAppearance": {
        "docs": undefined,
        "properties": {
          "name": {
            "docs": "Name of the device as seen from the provider API and application, not settable through Seam.",
            "type": "string",
          },
        },
      },
      "DevicePropertiesAssaAbloyCredentialServiceMetadata": {
        "docs": undefined,
        "properties": {
          "endpoints": "list<DevicePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem>",
          "has_active_endpoint": "boolean",
        },
      },
      "DevicePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem": {
        "docs": undefined,
        "properties": {
          "endpoint_id": "string",
          "is_active": "boolean",
        },
      },
      "DevicePropertiesAugustMetadata": {
        "docs": undefined,
        "properties": {
          "has_keypad": "boolean",
          "house_id": "optional<string>",
          "house_name": "string",
          "keypad_battery_level": "optional<string>",
          "lock_id": "string",
          "lock_name": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesAvigilonAltaMetadata": {
        "docs": undefined,
        "properties": {
          "entry_name": "string",
          "entry_relays_total_count": "double",
          "org_name": "string",
          "site_id": "double",
          "site_name": "string",
          "zone_id": "double",
          "zone_name": "string",
        },
      },
      "DevicePropertiesBattery": {
        "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "status": "DevicePropertiesBatteryStatus",
        },
      },
      "DevicePropertiesBatteryStatus": {
        "enum": [
          "critical",
          "low",
          "good",
          "full",
        ],
      },
      "DevicePropertiesBrivoMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
        },
      },
      "DevicePropertiesCodeConstraintsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "DevicePropertiesCodeConstraintsItemZero",
          "DevicePropertiesCodeConstraintsItemMaxLength",
        ],
      },
      "DevicePropertiesCodeConstraintsItemMaxLength": {
        "docs": undefined,
        "properties": {
          "constraint_type": "DevicePropertiesCodeConstraintsItemMaxLengthConstraintType",
          "max_length": "optional<double>",
          "min_length": "optional<double>",
        },
      },
      "DevicePropertiesCodeConstraintsItemMaxLengthConstraintType": {
        "enum": [
          "name_length",
          "name_must_be_unique",
        ],
      },
      "DevicePropertiesCodeConstraintsItemZero": {
        "docs": undefined,
        "properties": {
          "constraint_type": "DevicePropertiesCodeConstraintsItemZeroConstraintType",
        },
      },
      "DevicePropertiesCodeConstraintsItemZeroConstraintType": {
        "enum": [
          "no_zeros",
          "cannot_start_with_12",
          "no_triple_consecutive_ints",
          "cannot_specify_pin_code",
          "pin_code_matches_existing_set",
          "start_date_in_future",
          "no_ascending_or_descending_sequence",
          "at_least_three_unique_digits",
          "cannot_contain_089",
        ],
      },
      "DevicePropertiesControlbywebMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "relay_name": "optional<string>",
        },
      },
      "DevicePropertiesDormakabaOracodeMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "optional<double>",
          "door_id": "double",
          "door_is_wireless": "boolean",
          "door_name": "string",
          "iana_timezone": "optional<string>",
          "predefined_time_slots": "optional<list<DevicePropertiesDormakabaOracodeMetadataPredefinedTimeSlotsItem>>",
          "site_id": "double",
          "site_name": "string",
        },
      },
      "DevicePropertiesDormakabaOracodeMetadataPredefinedTimeSlotsItem": {
        "docs": undefined,
        "properties": {
          "check_in_time": "string",
          "check_out_time": "string",
          "dormakaba_oracode_user_level_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ext_dormakaba_oracode_user_level_prefix": "double",
          "is_24_hour": "boolean",
          "is_biweekly_mode": "boolean",
          "is_master": "boolean",
          "is_one_shot": "boolean",
          "name": "string",
          "prefix": "double",
        },
      },
      "DevicePropertiesEcobeeMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
          "ecobee_device_id": "string",
        },
      },
      "DevicePropertiesFourSuitesMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "double",
          "device_name": "string",
          "reclose_delay_in_seconds": "double",
        },
      },
      "DevicePropertiesGenieMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
          "door_name": "string",
        },
      },
      "DevicePropertiesHoneywellResideoMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
          "honeywell_resideo_device_id": "string",
        },
      },
      "DevicePropertiesHubitatMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_label": "string",
          "device_name": "string",
        },
      },
      "DevicePropertiesIglooMetadata": {
        "docs": undefined,
        "properties": {
          "bridge_id": "string",
          "device_id": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesIgloohomeMetadata": {
        "docs": undefined,
        "properties": {
          "bridge_id": "optional<string>",
          "bridge_name": "optional<string>",
          "device_id": "string",
          "device_name": "string",
          "keypad_id": "optional<string>",
        },
      },
      "DevicePropertiesKeypadBattery": {
        "docs": undefined,
        "properties": {
          "level": "double",
        },
      },
      "DevicePropertiesKwiksetMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "model_number": "string",
        },
      },
      "DevicePropertiesLocklyMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesMinutMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "latest_sensor_values": "DevicePropertiesMinutMetadataLatestSensorValues",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValues": {
        "docs": undefined,
        "properties": {
          "accelerometer_z": "DevicePropertiesMinutMetadataLatestSensorValuesAccelerometerZ",
          "humidity": "DevicePropertiesMinutMetadataLatestSensorValuesHumidity",
          "pressure": "DevicePropertiesMinutMetadataLatestSensorValuesPressure",
          "sound": "DevicePropertiesMinutMetadataLatestSensorValuesSound",
          "temperature": "DevicePropertiesMinutMetadataLatestSensorValuesTemperature",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesAccelerometerZ": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesHumidity": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesPressure": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesSound": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesTemperature": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesModel": {
        "docs": undefined,
        "properties": {
          "accessory_keypad_supported": {
            "docs": "
      ---
      deprecated: use device.properties.model.can_connect_accessory_keypad
      ---
      ",
            "type": "optional<boolean>",
          },
          "can_connect_accessory_keypad": {
            "docs": "Indicates whether the device can connect a accessory keypad.",
            "type": "optional<boolean>",
          },
          "display_name": {
            "docs": "Display name of the device model.",
            "type": "string",
          },
          "has_built_in_keypad": {
            "docs": "Indicates whether the device has a built in accessory keypad.",
            "type": "optional<boolean>",
          },
          "manufacturer_display_name": {
            "docs": "Display name that corresponds to the manufacturer-specific terminology for the device.",
            "type": "string",
          },
          "offline_access_codes_supported": {
            "docs": "Indicates whether the device supports offline access codes.",
            "type": "optional<boolean>",
          },
          "online_access_codes_supported": {
            "docs": "Indicates whether the device supports online access codes.",
            "type": "optional<boolean>",
          },
        },
      },
      "DevicePropertiesNestMetadata": {
        "docs": undefined,
        "properties": {
          "custom_name": "string",
          "device_name": "string",
          "nest_device_id": "string",
        },
      },
      "DevicePropertiesNoiseawareMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_model": "DevicePropertiesNoiseawareMetadataDeviceModel",
          "device_name": "string",
          "noise_level_decibel": "double",
          "noise_level_nrs": "double",
        },
      },
      "DevicePropertiesNoiseawareMetadataDeviceModel": {
        "enum": [
          "indoor",
          "outdoor",
        ],
      },
      "DevicePropertiesNukiMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "keypad_2_paired": "optional<boolean>",
          "keypad_battery_critical": "optional<boolean>",
          "keypad_paired": "optional<boolean>",
        },
      },
      "DevicePropertiesSaltoMetadata": {
        "docs": undefined,
        "properties": {
          "battery_level": "string",
          "customer_reference": "string",
          "lock_id": "string",
          "lock_type": "string",
          "locked_state": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesSchlageMetadata": {
        "docs": undefined,
        "properties": {
          "access_code_length": "optional<double>",
          "device_id": "string",
          "device_name": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesSeamBridgeMetadata": {
        "docs": undefined,
        "properties": {
          "device_num": "double",
          "name": "string",
          "unlock_method": "optional<DevicePropertiesSeamBridgeMetadataUnlockMethod>",
        },
      },
      "DevicePropertiesSeamBridgeMetadataUnlockMethod": {
        "enum": [
          "bridge",
          "doorking",
        ],
      },
      "DevicePropertiesSmartthingsMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "location_id": "optional<string>",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesTedeeMetadata": {
        "docs": undefined,
        "properties": {
          "bridge_id": "double",
          "bridge_name": "string",
          "device_id": "double",
          "device_model": "string",
          "device_name": "string",
          "keypad_id": "optional<double>",
          "serial_number": "string",
        },
      },
      "DevicePropertiesTtlockMetadata": {
        "docs": undefined,
        "properties": {
          "feature_value": "string",
          "lock_alias": "string",
          "lock_id": "double",
        },
      },
      "DevicePropertiesTwoNMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "double",
          "device_name": "string",
        },
      },
      "DevicePropertiesWyzeMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_info_model": "string",
          "device_name": "string",
          "keypad_uuid": "optional<string>",
          "locker_status_hardlock": "optional<double>",
          "product_model": "string",
          "product_name": "string",
          "product_type": "string",
        },
      },
      "DeviceProvider": {
        "docs": undefined,
        "properties": {
          "device_provider_name": "DeviceProviderDeviceProviderName",
          "display_name": "string",
          "image_url": "string",
          "provider_categories": "list<DeviceProviderProviderCategoriesItem>",
        },
      },
      "DeviceProviderDeviceProviderName": {
        "enum": [
          "akuvox",
          "august",
          "avigilon_alta",
          "brivo",
          "butterflymx",
          "schlage",
          "smartthings",
          "yale",
          "genie",
          "doorking",
          "salto",
          "lockly",
          "ttlock",
          "linear",
          "noiseaware",
          "nuki",
          "seam_relay_admin",
          "igloo",
          "kwikset",
          "minut",
          "my_2n",
          "controlbyweb",
          "nest",
          "igloohome",
          "ecobee",
          "hubitat",
          "four_suites",
          "dormakaba_oracode",
          "pti",
          "wyze",
          "seam_passport",
          "visionline",
          "assa_abloy_credential_service",
          "seam_bridge",
          "tedee",
          "honeywell_resideo",
          "latch",
        ],
      },
      "DeviceProviderProviderCategoriesItem": {
        "enum": [
          "stable",
          "consumer_smartlocks",
          "thermostats",
          "noise_sensors",
          "access_control_systems",
        ],
      },
      "DeviceWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "EnrollmentAutomation": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "credential_manager_acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "enrollment_automation_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "user_identity_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "Event": {
        "docs": undefined,
        "properties": {
          "acs_credential_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_user_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_attempt_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "client_session_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "device_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "enrollment_automation_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "event_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "event_type": "string",
          "occurred_at": "datetime",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "Network": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "display_name": "string",
          "network_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "NoiseThreshold": {
        "docs": undefined,
        "properties": {
          "device_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ends_daily_at": "string",
          "name": "string",
          "noise_threshold_decibels": "double",
          "noise_threshold_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "noise_threshold_nrs": "optional<double>",
          "starts_daily_at": "string",
        },
      },
      "Phone": {
        "docs": undefined,
        "properties": {
          "can_program_offline_access_codes": "optional<boolean>",
          "can_program_online_access_codes": "optional<boolean>",
          "can_remotely_lock": "optional<boolean>",
          "can_remotely_unlock": "optional<boolean>",
          "can_simulate_connection": "optional<boolean>",
          "can_simulate_disconnection": "optional<boolean>",
          "can_simulate_removal": "optional<boolean>",
          "capabilities_supported": {
            "docs": "Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health.",
            "type": "list<PhoneCapabilitiesSupportedItem>",
          },
          "created_at": {
            "docs": "Date and time at which the device object was created.",
            "type": "datetime",
          },
          "custom_metadata": "map<string, PhoneCustomMetadataValue>",
          "device_id": {
            "docs": "Unique identifier for the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_type": "PhoneDeviceType",
          "display_name": {
            "docs": "Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.",
            "type": "string",
          },
          "errors": {
            "docs": "Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.",
            "type": "list<PhoneErrorsItem>",
          },
          "is_managed": {
            "docs": "Indicates whether Seam manages the device.",
            "type": "boolean",
          },
          "location": {
            "docs": "Location information for the device.",
            "type": "optional<PhoneLocation>",
          },
          "nickname": {
            "docs": "Optional nickname to describe the device, settable through Seam",
            "type": "optional<string>",
          },
          "properties": "PhoneProperties",
          "warnings": {
            "docs": "Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.",
            "type": "list<PhoneWarningsItem>",
          },
          "workspace_id": {
            "docs": "Unique identifier for the Seam workspace associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "PhoneCapabilitiesSupportedItem": {
        "enum": [
          "access_code",
          "lock",
          "noise_detection",
          "thermostat",
          "battery",
          "phone",
        ],
      },
      "PhoneCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "PhoneDeviceType": {
        "enum": [
          "android_phone",
          "ios_phone",
        ],
      },
      "PhoneErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "PhoneLocation": {
        "docs": "Location information for the device.",
        "properties": {
          "location_name": {
            "docs": "Name of the device location.",
            "type": "optional<string>",
          },
          "timezone": {
            "docs": "Time zone of the device location.",
            "type": "optional<string>",
          },
        },
      },
      "PhoneProperties": {
        "docs": undefined,
        "properties": {
          "assa_abloy_credential_service_metadata": "optional<PhonePropertiesAssaAbloyCredentialServiceMetadata>",
        },
      },
      "PhonePropertiesAssaAbloyCredentialServiceMetadata": {
        "docs": undefined,
        "properties": {
          "endpoints": "list<PhonePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem>",
          "has_active_endpoint": "boolean",
        },
      },
      "PhonePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem": {
        "docs": undefined,
        "properties": {
          "endpoint_id": "string",
          "is_active": "boolean",
        },
      },
      "PhoneWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "ServiceHealth": {
        "docs": undefined,
        "properties": {
          "description": "string",
          "service": "string",
          "status": "ServiceHealthStatus",
        },
      },
      "ServiceHealthStatus": {
        "enum": [
          "healthy",
          "degraded",
          "down",
        ],
      },
      "UnmanagedAccessCode": {
        "docs": undefined,
        "properties": {
          "access_code_id": {
            "docs": "Unique identifier for the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "code": {
            "docs": "Code used for access. Typically, a numeric or alphanumeric string.",
            "type": "optional<string>",
          },
          "created_at": {
            "docs": "Date and time at which the access code was created.",
            "type": "datetime",
          },
          "device_id": {
            "docs": "Unique identifier for the device associated with the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ends_at": {
            "docs": "Date and time after which the time-bound access code becomes inactive.",
            "type": "optional<datetime>",
          },
          "errors": "optional<unknown>",
          "is_managed": "boolean",
          "name": {
            "docs": "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.",
            "type": "optional<string>",
          },
          "starts_at": {
            "docs": "Date and time at which the time-bound access code becomes active.",
            "type": "optional<datetime>",
          },
          "status": "literal<"set">",
          "type": {
            "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
            "type": "UnmanagedAccessCodeType",
          },
          "warnings": "optional<unknown>",
        },
      },
      "UnmanagedAccessCodeType": {
        "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
        "enum": [
          "time_bound",
          "ongoing",
        ],
      },
      "UnmanagedDevice": {
        "docs": undefined,
        "properties": {
          "can_program_offline_access_codes": "optional<boolean>",
          "can_program_online_access_codes": "optional<boolean>",
          "can_remotely_lock": "optional<boolean>",
          "can_remotely_unlock": "optional<boolean>",
          "can_simulate_connection": "optional<boolean>",
          "can_simulate_disconnection": "optional<boolean>",
          "can_simulate_removal": "optional<boolean>",
          "capabilities_supported": {
            "docs": "Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health.",
            "type": "list<UnmanagedDeviceCapabilitiesSupportedItem>",
          },
          "connected_account_id": {
            "docs": "Unique identifier for the account associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": {
            "docs": "Date and time at which the device object was created.",
            "type": "datetime",
          },
          "device_id": {
            "docs": "Unique identifier for the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_type": {
            "docs": "Type of the device.",
            "type": "UnmanagedDeviceDeviceType",
          },
          "errors": {
            "docs": "Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.",
            "type": "list<UnmanagedDeviceErrorsItem>",
          },
          "is_managed": "boolean",
          "properties": "UnmanagedDeviceProperties",
          "warnings": {
            "docs": "Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.",
            "type": "list<UnmanagedDeviceWarningsItem>",
          },
          "workspace_id": {
            "docs": "Unique identifier for the Seam workspace associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "UnmanagedDeviceCapabilitiesSupportedItem": {
        "enum": [
          "access_code",
          "lock",
          "noise_detection",
          "thermostat",
          "battery",
          "phone",
        ],
      },
      "UnmanagedDeviceDeviceType": {
        "docs": "Type of the device.",
        "enum": [
          "akuvox_lock",
          "august_lock",
          "brivo_access_point",
          "butterflymx_panel",
          "avigilon_alta_entry",
          "doorking_lock",
          "genie_door",
          "igloo_lock",
          "linear_lock",
          "lockly_lock",
          "kwikset_lock",
          "nuki_lock",
          "salto_lock",
          "schlage_lock",
          "seam_relay",
          "smartthings_lock",
          "wyze_lock",
          "yale_lock",
          "two_n_intercom",
          "controlbyweb_device",
          "ttlock_lock",
          "igloohome_lock",
          "hubitat_lock",
          "four_suites_door",
          "dormakaba_oracode_door",
          "tedee_lock",
          "noiseaware_activity_zone",
          "minut_sensor",
          "ecobee_thermostat",
          "nest_thermostat",
          "honeywell_resideo_thermostat",
          "ios_phone",
          "android_phone",
        ],
      },
      "UnmanagedDeviceErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "UnmanagedDeviceProperties": {
        "docs": undefined,
        "properties": {
          "accessory_keypad": {
            "docs": "Represents the accessory keypad state.",
            "type": "optional<UnmanagedDevicePropertiesAccessoryKeypad>",
          },
          "battery": {
            "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
            "type": "optional<UnmanagedDevicePropertiesBattery>",
          },
          "battery_level": {
            "docs": "Indicates the battery level of the device as a decimal value between 0 and 1, inclusive.",
            "type": "optional<double>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "image_alt_text": {
            "docs": "Alt text for the device image.",
            "type": "optional<string>",
          },
          "image_url": {
            "docs": "Image URL for the device.",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "manufacturer": {
            "docs": "Manufacturer of the device.",
            "type": "optional<string>",
          },
          "model": "UnmanagedDevicePropertiesModel",
          "name": {
            "docs": "
      ---
      deprecated: use device.display_name instead
      ---
      Name of the device.
      ",
            "type": "string",
          },
          "offline_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use offline access codes for the device.",
            "type": "optional<boolean>",
          },
          "online": {
            "docs": "Indicates whether the device is online.",
            "type": "boolean",
          },
          "online_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use online access codes for the device.",
            "type": "optional<boolean>",
          },
        },
      },
      "UnmanagedDevicePropertiesAccessoryKeypad": {
        "docs": "Represents the accessory keypad state.",
        "properties": {
          "battery": {
            "docs": "Indicates if the keypad battery properties.",
            "type": "optional<UnmanagedDevicePropertiesAccessoryKeypadBattery>",
          },
          "is_connected": {
            "docs": "Indicates if the accessory_keypad is connected to the device.",
            "type": "boolean",
          },
        },
      },
      "UnmanagedDevicePropertiesAccessoryKeypadBattery": {
        "docs": "Indicates if the keypad battery properties.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
        },
      },
      "UnmanagedDevicePropertiesBattery": {
        "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "status": "UnmanagedDevicePropertiesBatteryStatus",
        },
      },
      "UnmanagedDevicePropertiesBatteryStatus": {
        "enum": [
          "critical",
          "low",
          "good",
          "full",
        ],
      },
      "UnmanagedDevicePropertiesModel": {
        "docs": undefined,
        "properties": {
          "accessory_keypad_supported": {
            "docs": "
      ---
      deprecated: use device.properties.model.can_connect_accessory_keypad
      ---
      ",
            "type": "optional<boolean>",
          },
          "can_connect_accessory_keypad": {
            "docs": "Indicates whether the device can connect a accessory keypad.",
            "type": "optional<boolean>",
          },
          "display_name": {
            "docs": "Display name of the device model.",
            "type": "string",
          },
          "has_built_in_keypad": {
            "docs": "Indicates whether the device has a built in accessory keypad.",
            "type": "optional<boolean>",
          },
          "manufacturer_display_name": {
            "docs": "Display name that corresponds to the manufacturer-specific terminology for the device.",
            "type": "string",
          },
          "offline_access_codes_supported": {
            "docs": "Indicates whether the device supports offline access codes.",
            "type": "optional<boolean>",
          },
          "online_access_codes_supported": {
            "docs": "Indicates whether the device supports online access codes.",
            "type": "optional<boolean>",
          },
        },
      },
      "UnmanagedDeviceWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "UserIdentity": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "display_name": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "email_address": {
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "full_name": {
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "phone_number": "optional<string>",
          "user_identity_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "user_identity_key": {
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "Webhook": {
        "docs": undefined,
        "properties": {
          "event_types": "optional<list<string>>",
          "secret": "optional<string>",
          "url": "string",
          "webhook_id": "string",
        },
      },
      "Workspace": {
        "docs": undefined,
        "properties": {
          "company_name": "string",
          "connect_partner_name": {
            "docs": "
    ---
    deprecated: use company_name
    ---
  ",
            "type": "optional<string>",
          },
          "is_sandbox": "boolean",
          "name": "string",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "BearerAuthScheme",
    "auth-schemes": {
      "BearerAuthScheme": {
        "scheme": "bearer",
      },
    },
    "default-environment": "Default",
    "display-name": "Seam Connect",
    "environments": {
      "Default": "https://connect.getseam.com",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "headers": {
      "client-session-token": {
        "env": undefined,
        "name": "clientSessionToken",
        "type": "string",
      },
      "seam-client-session-token": {
        "env": undefined,
        "name": "seamClientSessionToken",
        "type": "string",
      },
      "seam-workspace": {
        "env": undefined,
        "name": "seamWorkspace",
        "type": "string",
      },
    },
    "name": "api",
  },
}
`;

exports[`seam seam simple 1`] = `
{
  "definitionFiles": {
    "accessCodes.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/access_codes/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/create",
            "request": {
              "body": {
                "properties": {
                  "allow_external_modification": "optional<boolean>",
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 9,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "common_code_key": "optional<string>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_at": "optional<string>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_offline_access_code": "optional<boolean>",
                  "is_one_time_use": "optional<boolean>",
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "optional<AccessCodesCreateRequestMaxTimeRounding>",
                  },
                  "name": "optional<string>",
                  "prefer_native_scheduling": "optional<boolean>",
                  "starts_at": "optional<string>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "use_backup_access_code_pool": "optional<boolean>",
                  "use_offline_access_code": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "AccessCodesCreateResponse",
            },
          },
          "create_multiple": {
            "auth": true,
            "display-name": "/access_codes/create_multiple",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_ids": [
                    "device_ids",
                  ],
                },
                "response": {
                  "body": {
                    "access_codes": [
                      {
                        "access_code_id": "access_code_id",
                        "code": "code",
                        "common_code_key": "common_code_key",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "ends_at": "2024-01-15T09:30:00Z",
                        "errors": {
                          "key": "value",
                        },
                        "is_backup": true,
                        "is_backup_access_code_available": true,
                        "is_external_modification_allowed": true,
                        "is_managed": true,
                        "is_offline_access_code": true,
                        "is_one_time_use": true,
                        "is_scheduled_on_device": true,
                        "is_waiting_for_code_assignment": true,
                        "name": "name",
                        "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                        "starts_at": "2024-01-15T09:30:00Z",
                        "status": "setting",
                        "type": "time_bound",
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/create_multiple",
            "request": {
              "body": {
                "properties": {
                  "allow_external_modification": "optional<boolean>",
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "behavior_when_code_cannot_be_shared": {
                    "default": "throw",
                    "type": "optional<AccessCodesCreateMultipleRequestBehaviorWhenCodeCannotBeShared>",
                  },
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 9,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "device_ids": "list<string>",
                  "ends_at": "optional<string>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_offline_access_code": "optional<boolean>",
                  "is_one_time_use": "optional<boolean>",
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "optional<AccessCodesCreateMultipleRequestMaxTimeRounding>",
                  },
                  "name": "optional<string>",
                  "prefer_native_scheduling": "optional<boolean>",
                  "preferred_code_length": "optional<double>",
                  "starts_at": "optional<string>",
                  "use_backup_access_code_pool": "optional<boolean>",
                  "use_offline_access_code": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesCreateMultipleRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_codes",
              "type": "AccessCodesCreateMultipleResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/access_codes/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/delete",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessCodesDeleteResponse",
            },
          },
          "generate_code": {
            "auth": true,
            "display-name": "/access_codes/generate_code",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "generated_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/generate_code",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesGenerateCodeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "generated_code",
              "type": "AccessCodesGenerateCodeResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/access_codes/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/get",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "code": "optional<string>",
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "AccessCodesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/access_codes/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "access_codes": [
                      {
                        "access_code_id": "access_code_id",
                        "code": "code",
                        "common_code_key": "common_code_key",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "ends_at": "2024-01-15T09:30:00Z",
                        "errors": {
                          "key": "value",
                        },
                        "is_backup": true,
                        "is_backup_access_code_available": true,
                        "is_external_modification_allowed": true,
                        "is_managed": true,
                        "is_offline_access_code": true,
                        "is_one_time_use": true,
                        "is_scheduled_on_device": true,
                        "is_waiting_for_code_assignment": true,
                        "name": "name",
                        "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                        "starts_at": "2024-01-15T09:30:00Z",
                        "status": "setting",
                        "type": "time_bound",
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/list",
            "request": {
              "body": {
                "properties": {
                  "access_code_ids": "optional<list<string>>",
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_codes",
              "type": "AccessCodesListResponse",
            },
          },
          "pull_backup_access_code": {
            "auth": true,
            "display-name": "/access_codes/pull_backup_access_code",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "backup_access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "common_code_key": "common_code_key",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_backup": true,
                      "is_backup_access_code_available": true,
                      "is_external_modification_allowed": true,
                      "is_managed": true,
                      "is_offline_access_code": true,
                      "is_one_time_use": true,
                      "is_scheduled_on_device": true,
                      "is_waiting_for_code_assignment": true,
                      "name": "name",
                      "pulled_backup_access_code_id": "pulled_backup_access_code_id",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "setting",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/pull_backup_access_code",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessCodesPullBackupAccessCodeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "backup_access_code",
              "type": "AccessCodesPullBackupAccessCodeResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/access_codes/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/update",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allow_external_modification": "optional<boolean>",
                  "attempt_for_offline_device": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": 9,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_at": "optional<string>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_managed": "optional<boolean>",
                  "is_offline_access_code": "optional<boolean>",
                  "is_one_time_use": "optional<boolean>",
                  "max_time_rounding": {
                    "default": "1hour",
                    "type": "optional<AccessCodesUpdateRequestMaxTimeRounding>",
                  },
                  "name": "optional<string>",
                  "prefer_native_scheduling": "optional<boolean>",
                  "starts_at": "optional<string>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "type": "optional<AccessCodesUpdateRequestType>",
                  "use_backup_access_code_pool": "optional<boolean>",
                  "use_offline_access_code": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "AccessCodesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessCodesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "AccessCodesCreateMultipleRequestBehaviorWhenCodeCannotBeShared": {
          "default": "throw",
          "enum": [
            "throw",
            "create_random_code",
          ],
        },
        "AccessCodesCreateMultipleRequestMaxTimeRounding": {
          "default": "1hour",
          "enum": [
            {
              "name": "OneHour",
              "value": "1hour",
            },
            {
              "name": "OneDay",
              "value": "1day",
            },
            {
              "name": "OneH",
              "value": "1h",
            },
            {
              "name": "OneD",
              "value": "1d",
            },
          ],
        },
        "AccessCodesCreateMultipleResponse": {
          "docs": undefined,
          "properties": {
            "access_codes": "list<root.AccessCode>",
            "ok": "boolean",
          },
        },
        "AccessCodesCreateRequestMaxTimeRounding": {
          "default": "1hour",
          "enum": [
            {
              "name": "OneHour",
              "value": "1hour",
            },
            {
              "name": "OneDay",
              "value": "1day",
            },
            {
              "name": "OneH",
              "value": "1h",
            },
            {
              "name": "OneD",
              "value": "1d",
            },
          ],
        },
        "AccessCodesCreateResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.AccessCode",
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "AccessCodesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "AccessCodesGenerateCodeResponse": {
          "docs": undefined,
          "properties": {
            "generated_code": "root.AccessCode",
            "ok": "boolean",
          },
        },
        "AccessCodesGetResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.AccessCode",
            "ok": "boolean",
          },
        },
        "AccessCodesListResponse": {
          "docs": undefined,
          "properties": {
            "access_codes": "list<root.AccessCode>",
            "ok": "boolean",
          },
        },
        "AccessCodesPullBackupAccessCodeResponse": {
          "docs": undefined,
          "properties": {
            "backup_access_code": "root.AccessCode",
            "ok": "boolean",
          },
        },
        "AccessCodesUpdateRequestMaxTimeRounding": {
          "default": "1hour",
          "enum": [
            {
              "name": "OneHour",
              "value": "1hour",
            },
            {
              "name": "OneDay",
              "value": "1day",
            },
            {
              "name": "OneH",
              "value": "1h",
            },
            {
              "name": "OneD",
              "value": "1d",
            },
          ],
        },
        "AccessCodesUpdateRequestType": {
          "enum": [
            "ongoing",
            "time_bound",
          ],
        },
        "AccessCodesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
    "accessCodes/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create_unmanaged_access_code": {
            "auth": true,
            "display-name": "/access_codes/simulate/create_unmanaged_access_code",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "code": "code",
                  "device_id": "device_id",
                  "name": "name",
                },
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_managed": true,
                      "name": "name",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "set",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/simulate/create_unmanaged_access_code",
            "request": {
              "body": {
                "properties": {
                  "code": {
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": 8,
                      "minLength": 4,
                      "pattern": "^\\d+$",
                    },
                  },
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "string",
                },
              },
              "headers": undefined,
              "name": "SimulateCreateUnmanagedAccessCodeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "SimulateCreateUnmanagedAccessCodeResponse",
            },
          },
        },
      },
      "types": {
        "SimulateCreateUnmanagedAccessCodeResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.UnmanagedAccessCode",
            "ok": "boolean",
          },
        },
      },
    },
    "accessCodes/unmanaged.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "convert_to_managed": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/convert_to_managed",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/convert_to_managed",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allow_external_modification": "optional<boolean>",
                  "force": "optional<boolean>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "UnmanagedConvertToManagedRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedConvertToManagedResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/delete",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "UnmanagedDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "access_code": {
                      "access_code_id": "access_code_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "ends_at": "2024-01-15T09:30:00Z",
                      "errors": {
                        "key": "value",
                      },
                      "is_managed": true,
                      "name": "name",
                      "starts_at": "2024-01-15T09:30:00Z",
                      "status": "set",
                      "type": "time_bound",
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/get",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "code": "optional<string>",
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UnmanagedGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_code",
              "type": "UnmanagedGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "access_codes": [
                      {
                        "access_code_id": "access_code_id",
                        "code": "code",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "ends_at": "2024-01-15T09:30:00Z",
                        "errors": {
                          "key": "value",
                        },
                        "is_managed": true,
                        "name": "name",
                        "starts_at": "2024-01-15T09:30:00Z",
                        "status": "set",
                        "type": "time_bound",
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/list",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UnmanagedListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "access_codes",
              "type": "UnmanagedListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/access_codes/unmanaged/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_code_id": "access_code_id",
                  "is_managed": true,
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/access_codes/unmanaged/update",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allow_external_modification": "optional<boolean>",
                  "force": "optional<boolean>",
                  "is_external_modification_allowed": "optional<boolean>",
                  "is_managed": "boolean",
                },
              },
              "headers": undefined,
              "name": "UnmanagedUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UnmanagedConvertToManagedResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UnmanagedDeleteResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "UnmanagedGetResponse": {
          "docs": undefined,
          "properties": {
            "access_code": "root.UnmanagedAccessCode",
            "ok": "boolean",
          },
        },
        "UnmanagedListResponse": {
          "docs": undefined,
          "properties": {
            "access_codes": "list<root.UnmanagedAccessCode>",
            "ok": "boolean",
          },
        },
        "UnmanagedUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "acs/accessGroups.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "add_user": {
            "auth": true,
            "display-name": "/acs/access_groups/add_user",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/add_user",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsAddUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessGroupsAddUserResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/acs/access_groups/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                },
                "response": {
                  "body": {
                    "acs_access_group": {
                      "access_group_type": "pti_unit",
                      "access_group_type_display_name": "access_group_type_display_name",
                      "acs_access_group_id": "acs_access_group_id",
                      "acs_system_id": "acs_system_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "external_type": "pti_unit",
                      "external_type_display_name": "external_type_display_name",
                      "name": "name",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/get",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_access_group",
              "type": "AccessGroupsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/access_groups/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_access_groups": [
                      {
                        "access_group_type": "pti_unit",
                        "access_group_type_display_name": "access_group_type_display_name",
                        "acs_access_group_id": "acs_access_group_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "external_type": "pti_unit",
                        "external_type_display_name": "external_type_display_name",
                        "name": "name",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/list",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_access_groups",
              "type": "AccessGroupsListResponse",
            },
          },
          "list_users": {
            "auth": true,
            "display-name": "/acs/access_groups/list_users",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                },
                "response": {
                  "body": {
                    "acs_users": [
                      {
                        "access_schedule": {
                          "ends_at": "2024-01-15T09:30:00Z",
                          "starts_at": "2024-01-15T09:30:00Z",
                        },
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email": "email",
                        "email_address": "email_address",
                        "external_type": "pti_user",
                        "external_type_display_name": "external_type_display_name",
                        "full_name": "full_name",
                        "hid_acs_system_id": "hid_acs_system_id",
                        "is_suspended": true,
                        "phone_number": "phone_number",
                        "user_identity_email_address": "user_identity_email_address",
                        "user_identity_full_name": "user_identity_full_name",
                        "user_identity_id": "user_identity_id",
                        "user_identity_phone_number": "user_identity_phone_number",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/list_users",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsListUsersRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_users",
              "type": "AccessGroupsListUsersResponse",
            },
          },
          "remove_user": {
            "auth": true,
            "display-name": "/acs/access_groups/remove_user",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/access_groups/remove_user",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "AccessGroupsRemoveUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "AccessGroupsRemoveUserResponse",
            },
          },
        },
      },
      "types": {
        "AccessGroupsAddUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "AccessGroupsGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_access_group": "root.AcsAccessGroup",
            "ok": "boolean",
          },
        },
        "AccessGroupsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_access_groups": "list<root.AcsAccessGroup>",
            "ok": "boolean",
          },
        },
        "AccessGroupsListUsersResponse": {
          "docs": undefined,
          "properties": {
            "acs_users": "list<root.AcsUser>",
            "ok": "boolean",
          },
        },
        "AccessGroupsRemoveUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "acs/credentialPools.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "display-name": "/acs/credential_pools/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_credential_pools": [
                      {
                        "acs_credential_pool_id": "acs_credential_pool_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "external_type": "hid_part_number",
                        "external_type_display_name": "external_type_display_name",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credential_pools/list",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialPoolsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential_pools",
              "type": "CredentialPoolsListResponse",
            },
          },
        },
      },
      "types": {
        "CredentialPoolsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential_pools": "list<root.AcsCredentialPool>",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/credentialProvisioningAutomations.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "launch": {
            "auth": true,
            "display-name": "/acs/credential_provisioning_automations/launch",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "acs_credential_provisioning_automation": {
                      "acs_credential_provisioning_automation_id": "acs_credential_provisioning_automation_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                      "user_identity_id": "user_identity_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credential_provisioning_automations/launch",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_pool_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "create_credential_manager_user": "optional<boolean>",
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "credential_manager_acs_user_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialProvisioningAutomationsLaunchRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential_provisioning_automation",
              "type": "CredentialProvisioningAutomationsLaunchResponse",
            },
          },
        },
      },
      "types": {
        "CredentialProvisioningAutomationsLaunchResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential_provisioning_automation": "root.AcsCredentialProvisioningAutomation",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/credentials.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "assign": {
            "auth": true,
            "display-name": "/acs/credentials/assign",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/assign",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsAssignRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsAssignResponse",
            },
          },
          "create": {
            "auth": true,
            "display-name": "/acs/credentials/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "access_method": "code",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/create",
            "request": {
              "body": {
                "properties": {
                  "access_method": "CredentialsCreateRequestAccessMethod",
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "allowed_acs_entrance_ids": "optional<list<string>>",
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^\\d+$",
                    },
                  },
                  "credential_manager_acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_at": "optional<datetime>",
                  "is_multi_phone_sync_credential": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "starts_at": "optional<datetime>",
                  "visionline_metadata": "optional<CredentialsCreateRequestVisionlineMetadata>",
                },
              },
              "headers": undefined,
              "name": "CredentialsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential",
              "type": "CredentialsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/acs/credentials/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/delete",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/acs/credentials/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/get",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credential",
              "type": "CredentialsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/credentials/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_credentials": [
                      {
                        "access_method": "code",
                        "acs_credential_id": "acs_credential_id",
                        "acs_credential_pool_id": "acs_credential_pool_id",
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "code": "code",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "ends_at": "ends_at",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "external_type": "pti_card",
                        "external_type_display_name": "external_type_display_name",
                        "is_latest_desired_state_synced_with_provider": true,
                        "is_multi_phone_sync_credential": true,
                        "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                        "parent_acs_credential_id": "parent_acs_credential_id",
                        "starts_at": "starts_at",
                        "visionline_metadata": {
                          "card_function_type": "guest",
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/list",
            "request": {
              "body": {
                "properties": {
                  "is_multi_phone_sync_credential": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "CredentialsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credentials",
              "type": "CredentialsListResponse",
            },
          },
          "list_accessible_entrances": {
            "auth": true,
            "display-name": "/acs/credentials/list_accessible_entrances",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "acs_entrances": [
                      {
                        "acs_entrance_id": "acs_entrance_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "latch_metadata": {
                          "accessibility_type": "accessibility_type",
                          "door_name": "door_name",
                          "door_type": "door_type",
                          "is_connected": true,
                        },
                        "visionline_metadata": {
                          "door_category": "entrance",
                          "door_name": "door_name",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/list_accessible_entrances",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsListAccessibleEntrancesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrances",
              "type": "CredentialsListAccessibleEntrancesResponse",
            },
          },
          "unassign": {
            "auth": true,
            "display-name": "/acs/credentials/unassign",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/unassign",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "CredentialsUnassignRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsUnassignResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/acs/credentials/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_credential_id": "acs_credential_id",
                },
                "response": {
                  "body": {
                    "acs_credential": {
                      "access_method": "code",
                      "acs_credential_id": "acs_credential_id",
                      "acs_credential_pool_id": "acs_credential_pool_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "code": "code",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "ends_at": "ends_at",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "external_type": "pti_card",
                      "external_type_display_name": "external_type_display_name",
                      "is_latest_desired_state_synced_with_provider": true,
                      "is_multi_phone_sync_credential": true,
                      "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                      "parent_acs_credential_id": "parent_acs_credential_id",
                      "starts_at": "starts_at",
                      "visionline_metadata": {
                        "card_function_type": "guest",
                        "common_acs_entrance_ids": [
                          "common_acs_entrance_ids",
                        ],
                        "guest_acs_entrance_ids": [
                          "guest_acs_entrance_ids",
                        ],
                        "joiner_acs_credential_ids": [
                          "joiner_acs_credential_ids",
                        ],
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/credentials/update",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": "string",
                  "code": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^\\d+$",
                    },
                  },
                  "ends_at": "optional<datetime>",
                },
              },
              "headers": undefined,
              "name": "CredentialsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "CredentialsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "CredentialsAssignResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsCreateRequestAccessMethod": {
          "enum": [
            "code",
            "card",
            "mobile_key",
          ],
        },
        "CredentialsCreateRequestVisionlineMetadata": {
          "docs": undefined,
          "properties": {
            "assa_abloy_credential_service_mobile_endpoint_id": {
              "type": "optional<string>",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "card_format": "optional<CredentialsCreateRequestVisionlineMetadataCardFormat>",
            "card_function_type": {
              "default": "guest",
              "type": "optional<CredentialsCreateRequestVisionlineMetadataCardFunctionType>",
            },
            "is_override_key": {
              "docs": "
          ---
          deprecated: use override.
          ---
        ",
              "type": "optional<boolean>",
            },
            "joiner_acs_credential_ids": "optional<list<string>>",
            "override": "optional<boolean>",
          },
        },
        "CredentialsCreateRequestVisionlineMetadataCardFormat": {
          "enum": [
            "TLCode",
            "rfid48",
          ],
        },
        "CredentialsCreateRequestVisionlineMetadataCardFunctionType": {
          "default": "guest",
          "enum": [
            "guest",
            "staff",
          ],
        },
        "CredentialsCreateResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "CredentialsGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsListAccessibleEntrancesResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrances": "list<root.AcsEntrance>",
            "ok": "boolean",
          },
        },
        "CredentialsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_credentials": "list<root.AcsCredential>",
            "ok": "boolean",
          },
        },
        "CredentialsUnassignResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
        "CredentialsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "acs_credential": "root.AcsCredential",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/entrances.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/acs/entrances/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_entrance_id": "acs_entrance_id",
                },
                "response": {
                  "body": {
                    "acs_entrance": {
                      "acs_entrance_id": "acs_entrance_id",
                      "acs_system_id": "acs_system_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "latch_metadata": {
                        "accessibility_type": "accessibility_type",
                        "door_name": "door_name",
                        "door_type": "door_type",
                        "is_connected": true,
                      },
                      "visionline_metadata": {
                        "door_category": "entrance",
                        "door_name": "door_name",
                        "profiles": [
                          {
                            "visionline_door_profile_id": "visionline_door_profile_id",
                            "visionline_door_profile_type": "BLE",
                          },
                        ],
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/get",
            "request": {
              "body": {
                "properties": {
                  "acs_entrance_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EntrancesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrance",
              "type": "EntrancesGetResponse",
            },
          },
          "grant_access": {
            "auth": true,
            "display-name": "/acs/entrances/grant_access",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_entrance_id": "acs_entrance_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/grant_access",
            "request": {
              "body": {
                "properties": {
                  "acs_entrance_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EntrancesGrantAccessRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "EntrancesGrantAccessResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/entrances/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_entrances": [
                      {
                        "acs_entrance_id": "acs_entrance_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "latch_metadata": {
                          "accessibility_type": "accessibility_type",
                          "door_name": "door_name",
                          "door_type": "door_type",
                          "is_connected": true,
                        },
                        "visionline_metadata": {
                          "door_category": "entrance",
                          "door_name": "door_name",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/list",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EntrancesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrances",
              "type": "EntrancesListResponse",
            },
          },
          "list_credentials_with_access": {
            "auth": true,
            "display-name": "/acs/entrances/list_credentials_with_access",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_entrance_id": "acs_entrance_id",
                },
                "response": {
                  "body": {
                    "acs_credentials": [
                      {
                        "access_method": "code",
                        "acs_credential_id": "acs_credential_id",
                        "acs_credential_pool_id": "acs_credential_pool_id",
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "code": "code",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "ends_at": "ends_at",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "external_type": "pti_card",
                        "external_type_display_name": "external_type_display_name",
                        "is_latest_desired_state_synced_with_provider": true,
                        "is_multi_phone_sync_credential": true,
                        "latest_desired_state_synced_with_provider_at": "2024-01-15T09:30:00Z",
                        "parent_acs_credential_id": "parent_acs_credential_id",
                        "starts_at": "starts_at",
                        "visionline_metadata": {
                          "card_function_type": "guest",
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/entrances/list_credentials_with_access",
            "request": {
              "body": {
                "properties": {
                  "acs_entrance_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "include_if": "optional<list<literal<"visionline_metadata.is_valid">>>",
                },
              },
              "headers": undefined,
              "name": "EntrancesListCredentialsWithAccessRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_credentials",
              "type": "EntrancesListCredentialsWithAccessResponse",
            },
          },
        },
      },
      "types": {
        "EntrancesGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrance": "root.AcsEntrance",
            "ok": "boolean",
          },
        },
        "EntrancesGrantAccessResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "EntrancesListCredentialsWithAccessResponse": {
          "docs": undefined,
          "properties": {
            "acs_credentials": "list<root.AcsCredential>",
            "ok": "boolean",
          },
        },
        "EntrancesListResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrances": "list<root.AcsEntrance>",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/systems.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/acs/systems/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_system": {
                      "acs_system_id": "acs_system_id",
                      "can_add_acs_users_to_acs_access_groups": true,
                      "can_automate_enrollment": true,
                      "can_create_acs_access_groups": true,
                      "can_remove_acs_users_from_acs_access_groups": true,
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "errors": [
                        {
                          "created_at": "2024-01-15T09:30:00Z",
                          "error_code": "seam_bridge_disconnected",
                          "message": "errors",
                        },
                      ],
                      "external_type": "pti_site",
                      "external_type_display_name": "external_type_display_name",
                      "image_alt_text": "image_alt_text",
                      "image_url": "image_url",
                      "name": "name",
                      "system_type": "pti_site",
                      "system_type_display_name": "system_type_display_name",
                      "warnings": [
                        {},
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/systems/get",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SystemsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_system",
              "type": "SystemsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/systems/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_systems": [
                      {
                        "acs_system_id": "acs_system_id",
                        "can_add_acs_users_to_acs_access_groups": true,
                        "can_automate_enrollment": true,
                        "can_create_acs_access_groups": true,
                        "can_remove_acs_users_from_acs_access_groups": true,
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "errors": [
                          {
                            "created_at": "2024-01-15T09:30:00Z",
                            "error_code": "seam_bridge_disconnected",
                            "message": "errors",
                          },
                        ],
                        "external_type": "pti_site",
                        "external_type_display_name": "external_type_display_name",
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "name": "name",
                        "system_type": "pti_site",
                        "system_type_display_name": "system_type_display_name",
                        "warnings": [
                          {},
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/systems/list",
            "request": {
              "body": {
                "properties": {
                  "connected_account_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SystemsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_systems",
              "type": "SystemsListResponse",
            },
          },
          "list_compatible_credential_manager_acs_systems": {
            "auth": true,
            "display-name": "/acs/systems/list_compatible_credential_manager_acs_systems",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_systems": [
                      {
                        "acs_system_id": "acs_system_id",
                        "can_add_acs_users_to_acs_access_groups": true,
                        "can_automate_enrollment": true,
                        "can_create_acs_access_groups": true,
                        "can_remove_acs_users_from_acs_access_groups": true,
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "errors": [
                          {
                            "created_at": "2024-01-15T09:30:00Z",
                            "error_code": "seam_bridge_disconnected",
                            "message": "errors",
                          },
                        ],
                        "external_type": "pti_site",
                        "external_type_display_name": "external_type_display_name",
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "name": "name",
                        "system_type": "pti_site",
                        "system_type_display_name": "system_type_display_name",
                        "warnings": [
                          {},
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/systems/list_compatible_credential_manager_acs_systems",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SystemsListCompatibleCredentialManagerAcsSystemsRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_systems",
              "type": "SystemsListCompatibleCredentialManagerAcsSystemsResponse",
            },
          },
        },
      },
      "types": {
        "SystemsGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_system": "root.AcsSystem",
            "ok": "boolean",
          },
        },
        "SystemsListCompatibleCredentialManagerAcsSystemsResponse": {
          "docs": undefined,
          "properties": {
            "acs_systems": "list<root.AcsSystem>",
            "ok": "boolean",
          },
        },
        "SystemsListResponse": {
          "docs": undefined,
          "properties": {
            "acs_systems": "list<root.AcsSystem>",
            "ok": "boolean",
          },
        },
      },
    },
    "acs/users.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "add_to_access_group": {
            "auth": true,
            "display-name": "/acs/users/add_to_access_group",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/add_to_access_group",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersAddToAccessGroupRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersAddToAccessGroupResponse",
            },
          },
          "create": {
            "auth": true,
            "display-name": "/acs/users/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_system_id": "acs_system_id",
                },
                "response": {
                  "body": {
                    "acs_user": {
                      "access_schedule": {
                        "ends_at": "2024-01-15T09:30:00Z",
                        "starts_at": "2024-01-15T09:30:00Z",
                      },
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email": "email",
                      "email_address": "email_address",
                      "external_type": "pti_user",
                      "external_type_display_name": "external_type_display_name",
                      "full_name": "full_name",
                      "hid_acs_system_id": "hid_acs_system_id",
                      "is_suspended": true,
                      "phone_number": "phone_number",
                      "user_identity_email_address": "user_identity_email_address",
                      "user_identity_full_name": "user_identity_full_name",
                      "user_identity_id": "user_identity_id",
                      "user_identity_phone_number": "user_identity_phone_number",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/create",
            "request": {
              "body": {
                "properties": {
                  "access_schedule": "optional<UsersCreateRequestAccessSchedule>",
                  "acs_access_group_ids": "optional<list<string>>",
                  "acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email": {
                    "docs": "
    ---
    deprecated: use email_address.
    ---
    ",
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": "optional<string>",
                  "phone_number": "optional<string>",
                  "user_identity_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_user",
              "type": "UsersCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/acs/users/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/delete",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/acs/users/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_user": {
                      "access_schedule": {
                        "ends_at": "2024-01-15T09:30:00Z",
                        "starts_at": "2024-01-15T09:30:00Z",
                      },
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email": "email",
                      "email_address": "email_address",
                      "external_type": "pti_user",
                      "external_type_display_name": "external_type_display_name",
                      "full_name": "full_name",
                      "hid_acs_system_id": "hid_acs_system_id",
                      "is_suspended": true,
                      "phone_number": "phone_number",
                      "user_identity_email_address": "user_identity_email_address",
                      "user_identity_full_name": "user_identity_full_name",
                      "user_identity_id": "user_identity_id",
                      "user_identity_phone_number": "user_identity_phone_number",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/get",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_user",
              "type": "UsersGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/acs/users/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "acs_users": [
                      {
                        "access_schedule": {
                          "ends_at": "2024-01-15T09:30:00Z",
                          "starts_at": "2024-01-15T09:30:00Z",
                        },
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email": "email",
                        "email_address": "email_address",
                        "external_type": "pti_user",
                        "external_type_display_name": "external_type_display_name",
                        "full_name": "full_name",
                        "hid_acs_system_id": "hid_acs_system_id",
                        "is_suspended": true,
                        "phone_number": "phone_number",
                        "user_identity_email_address": "user_identity_email_address",
                        "user_identity_full_name": "user_identity_full_name",
                        "user_identity_id": "user_identity_id",
                        "user_identity_phone_number": "user_identity_phone_number",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/list",
            "request": {
              "body": {
                "properties": {
                  "acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_email_address": "optional<string>",
                  "user_identity_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_phone_number": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UsersListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_users",
              "type": "UsersListResponse",
            },
          },
          "list_accessible_entrances": {
            "auth": true,
            "display-name": "/acs/users/list_accessible_entrances",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "acs_entrances": [
                      {
                        "acs_entrance_id": "acs_entrance_id",
                        "acs_system_id": "acs_system_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "latch_metadata": {
                          "accessibility_type": "accessibility_type",
                          "door_name": "door_name",
                          "door_type": "door_type",
                          "is_connected": true,
                        },
                        "visionline_metadata": {
                          "door_category": "entrance",
                          "door_name": "door_name",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/list_accessible_entrances",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersListAccessibleEntrancesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_entrances",
              "type": "UsersListAccessibleEntrancesResponse",
            },
          },
          "remove_from_access_group": {
            "auth": true,
            "display-name": "/acs/users/remove_from_access_group",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_access_group_id": "acs_access_group_id",
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/remove_from_access_group",
            "request": {
              "body": {
                "properties": {
                  "acs_access_group_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersRemoveFromAccessGroupRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersRemoveFromAccessGroupResponse",
            },
          },
          "revoke_access_to_all_entrances": {
            "auth": true,
            "display-name": "/acs/users/revoke_access_to_all_entrances",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/revoke_access_to_all_entrances",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersRevokeAccessToAllEntrancesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersRevokeAccessToAllEntrancesResponse",
            },
          },
          "suspend": {
            "auth": true,
            "display-name": "/acs/users/suspend",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/suspend",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersSuspendRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersSuspendResponse",
            },
          },
          "unsuspend": {
            "auth": true,
            "display-name": "/acs/users/unsuspend",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/unsuspend",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UsersUnsuspendRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersUnsuspendResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/acs/users/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/acs/users/update",
            "request": {
              "body": {
                "properties": {
                  "access_schedule": "optional<UsersUpdateRequestAccessSchedule>",
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email": {
                    "docs": "
    ---
    deprecated: use email_address.
    ---
    ",
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": "optional<string>",
                  "hid_acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "phone_number": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UsersUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UsersUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UsersAddToAccessGroupResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersCreateRequestAccessSchedule": {
          "docs": undefined,
          "properties": {
            "ends_at": "datetime",
            "starts_at": "datetime",
          },
        },
        "UsersCreateResponse": {
          "docs": undefined,
          "properties": {
            "acs_user": "root.AcsUser",
            "ok": "boolean",
          },
        },
        "UsersDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersGetResponse": {
          "docs": undefined,
          "properties": {
            "acs_user": "root.AcsUser",
            "ok": "boolean",
          },
        },
        "UsersListAccessibleEntrancesResponse": {
          "docs": undefined,
          "properties": {
            "acs_entrances": "list<root.AcsEntrance>",
            "ok": "boolean",
          },
        },
        "UsersListResponse": {
          "docs": undefined,
          "properties": {
            "acs_users": "list<root.AcsUser>",
            "ok": "boolean",
          },
        },
        "UsersRemoveFromAccessGroupResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersRevokeAccessToAllEntrancesResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersSuspendResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersUnsuspendResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UsersUpdateRequestAccessSchedule": {
          "docs": undefined,
          "properties": {
            "ends_at": "datetime",
            "starts_at": "datetime",
          },
        },
        "UsersUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "actionAttempts.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/action_attempts/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "action_attempt_id": "action_attempt_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/action_attempts/get",
            "request": {
              "body": {
                "properties": {
                  "action_attempt_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ActionAttemptsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ActionAttemptsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/action_attempts/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "action_attempt_ids": [
                    "action_attempt_ids",
                  ],
                },
                "response": {
                  "body": {
                    "action_attempts": [
                      {
                        "action_attempt_id": "action_attempt_id",
                        "action_type": "LOCK_DOOR",
                        "error": "error",
                        "result": "result",
                        "status": "pending",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/action_attempts/list",
            "request": {
              "body": {
                "properties": {
                  "action_attempt_ids": "list<string>",
                },
              },
              "headers": undefined,
              "name": "ActionAttemptsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempts",
              "type": "ActionAttemptsListResponse",
            },
          },
        },
      },
      "types": {
        "ActionAttemptsGetResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ActionAttemptsListResponse": {
          "docs": undefined,
          "properties": {
            "action_attempts": "list<root.ActionAttempt>",
            "ok": "boolean",
          },
        },
      },
    },
    "clientSessions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": false,
            "display-name": "/client_sessions/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/create",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_ids": "optional<list<string>>",
                  "connected_account_ids": "optional<list<string>>",
                  "expires_at": "optional<datetime>",
                  "user_identifier_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_ids": "optional<list<string>>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_session",
              "type": "ClientSessionsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/client_sessions/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "client_session_id": "client_session_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/delete",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClientSessionsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClientSessionsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/client_sessions/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/get",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": "optional<string>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_session",
              "type": "ClientSessionsGetResponse",
            },
          },
          "get_or_create": {
            "auth": false,
            "display-name": "/client_sessions/get_or_create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/get_or_create",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_ids": "optional<list<string>>",
                  "connected_account_ids": "optional<list<string>>",
                  "expires_at": "optional<datetime>",
                  "user_identifier_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_ids": "optional<list<string>>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsGetOrCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_session",
              "type": "ClientSessionsGetOrCreateResponse",
            },
          },
          "grant_access": {
            "auth": true,
            "display-name": "/client_sessions/grant_access",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_session": {
                      "client_session_id": "client_session_id",
                      "connect_webview_ids": [
                        "connect_webview_ids",
                      ],
                      "connected_account_ids": [
                        "connected_account_ids",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_count": 1.1,
                      "token": "token",
                      "user_identifier_key": "user_identifier_key",
                      "user_identity_ids": [
                        "user_identity_ids",
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/grant_access",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": "optional<string>",
                  "connect_webview_ids": "optional<list<string>>",
                  "connected_account_ids": "optional<list<string>>",
                  "user_identifier_key": "optional<string>",
                  "user_identity_ids": "optional<list<string>>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsGrantAccessRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClientSessionsGrantAccessResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/client_sessions/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "client_sessions": [
                      {
                        "client_session_id": "client_session_id",
                        "connect_webview_ids": [
                          "connect_webview_ids",
                        ],
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_count": 1.1,
                        "token": "token",
                        "user_identifier_key": "user_identifier_key",
                        "user_identity_ids": [
                          "user_identity_ids",
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/list",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": "optional<string>",
                  "connect_webview_id": "optional<string>",
                  "user_identifier_key": "optional<string>",
                  "user_identity_id": "optional<string>",
                  "without_user_identifier_key": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "ClientSessionsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "client_sessions",
              "type": "ClientSessionsListResponse",
            },
          },
          "revoke": {
            "auth": true,
            "display-name": "/client_sessions/revoke",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "client_session_id": "client_session_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/client_sessions/revoke",
            "request": {
              "body": {
                "properties": {
                  "client_session_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClientSessionsRevokeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClientSessionsRevokeResponse",
            },
          },
        },
      },
      "types": {
        "ClientSessionsCreateResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ClientSessionsGetOrCreateResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsGetResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsGrantAccessResponse": {
          "docs": undefined,
          "properties": {
            "client_session": "root.ClientSession",
            "ok": "boolean",
          },
        },
        "ClientSessionsListResponse": {
          "docs": undefined,
          "properties": {
            "client_sessions": "list<root.ClientSession>",
            "ok": "boolean",
          },
        },
        "ClientSessionsRevokeResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "connectWebviews.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/connect_webviews/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "connect_webview": {
                      "accepted_devices": [
                        "accepted_devices",
                      ],
                      "accepted_providers": [
                        "accepted_providers",
                      ],
                      "any_device_allowed": true,
                      "any_provider_allowed": true,
                      "authorized_at": "2024-01-15T09:30:00Z",
                      "automatically_manage_new_devices": true,
                      "connect_webview_id": "connect_webview_id",
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "custom_redirect_failure_url": "custom_redirect_failure_url",
                      "custom_redirect_url": "custom_redirect_url",
                      "device_selection_mode": "none",
                      "login_successful": true,
                      "selected_provider": "selected_provider",
                      "status": "pending",
                      "url": "url",
                      "wait_for_device_creation": true,
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/create",
            "request": {
              "body": {
                "properties": {
                  "accepted_providers": "optional<list<ConnectWebviewsCreateRequestAcceptedProvidersItem>>",
                  "automatically_manage_new_devices": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "custom_metadata": "optional<map<string, optional<ConnectWebviewsCreateRequestCustomMetadataValue>>>",
                  "custom_redirect_failure_url": "optional<string>",
                  "custom_redirect_url": "optional<string>",
                  "device_selection_mode": "optional<ConnectWebviewsCreateRequestDeviceSelectionMode>",
                  "provider_category": "optional<ConnectWebviewsCreateRequestProviderCategory>",
                  "wait_for_device_creation": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connect_webview",
              "type": "ConnectWebviewsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/connect_webviews/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connect_webview_id": "connect_webview_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/delete",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ConnectWebviewsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/connect_webviews/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connect_webview_id": "connect_webview_id",
                },
                "response": {
                  "body": {
                    "connect_webview": {
                      "accepted_devices": [
                        "accepted_devices",
                      ],
                      "accepted_providers": [
                        "accepted_providers",
                      ],
                      "any_device_allowed": true,
                      "any_provider_allowed": true,
                      "authorized_at": "2024-01-15T09:30:00Z",
                      "automatically_manage_new_devices": true,
                      "connect_webview_id": "connect_webview_id",
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "custom_redirect_failure_url": "custom_redirect_failure_url",
                      "custom_redirect_url": "custom_redirect_url",
                      "device_selection_mode": "none",
                      "login_successful": true,
                      "selected_provider": "selected_provider",
                      "status": "pending",
                      "url": "url",
                      "wait_for_device_creation": true,
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/get",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connect_webview",
              "type": "ConnectWebviewsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/connect_webviews/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "connect_webviews": [
                      {
                        "accepted_devices": [
                          "accepted_devices",
                        ],
                        "accepted_providers": [
                          "accepted_providers",
                        ],
                        "any_device_allowed": true,
                        "any_provider_allowed": true,
                        "authorized_at": "2024-01-15T09:30:00Z",
                        "automatically_manage_new_devices": true,
                        "connect_webview_id": "connect_webview_id",
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "custom_redirect_failure_url": "custom_redirect_failure_url",
                        "custom_redirect_url": "custom_redirect_url",
                        "device_selection_mode": "none",
                        "login_successful": true,
                        "selected_provider": "selected_provider",
                        "status": "pending",
                        "url": "url",
                        "wait_for_device_creation": true,
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connect_webviews/list",
            "request": {
              "body": {
                "properties": {
                  "custom_metadata_has": {
                    "docs": "Returns devices where the webview's custom_metadata contains all of the provided key/value pairs.",
                    "type": "optional<map<string, ConnectWebviewsListRequestCustomMetadataHasValue>>",
                  },
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ConnectWebviewsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connect_webviews",
              "type": "ConnectWebviewsListResponse",
            },
          },
        },
      },
      "types": {
        "ConnectWebviewsCreateRequestAcceptedProvidersItem": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "schlage",
            "smartthings",
            "yale",
            "genie",
            "doorking",
            "salto",
            "lockly",
            "ttlock",
            "linear",
            "noiseaware",
            "nuki",
            "seam_relay_admin",
            "igloo",
            "kwikset",
            "minut",
            "my_2n",
            "controlbyweb",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "four_suites",
            "dormakaba_oracode",
            "pti",
            "wyze",
            "seam_passport",
            "visionline",
            "assa_abloy_credential_service",
            "seam_bridge",
            "tedee",
            "honeywell_resideo",
            "latch",
            "yale_access",
            "hid_cm",
            "google_nest",
          ],
        },
        "ConnectWebviewsCreateRequestCustomMetadataValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            {
              "type": "string",
              "validation": {
                "format": undefined,
                "maxLength": 500,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "boolean",
            "optional<string>",
          ],
        },
        "ConnectWebviewsCreateRequestDeviceSelectionMode": {
          "enum": [
            "none",
            "single",
            "multiple",
          ],
        },
        "ConnectWebviewsCreateRequestProviderCategory": {
          "enum": [
            "stable",
            "consumer_smartlocks",
            "thermostats",
            "noise_sensors",
            "access_control_systems",
            "internal_beta",
          ],
        },
        "ConnectWebviewsCreateResponse": {
          "docs": undefined,
          "properties": {
            "connect_webview": "root.ConnectWebview",
            "ok": "boolean",
          },
        },
        "ConnectWebviewsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ConnectWebviewsGetResponse": {
          "docs": undefined,
          "properties": {
            "connect_webview": "root.ConnectWebview",
            "ok": "boolean",
          },
        },
        "ConnectWebviewsListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "ConnectWebviewsListResponse": {
          "docs": undefined,
          "properties": {
            "connect_webviews": "list<root.ConnectWebview>",
            "ok": "boolean",
          },
        },
      },
    },
    "connectedAccounts.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "auth": true,
            "display-name": "/connected_accounts/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connected_account_id": "connected_account_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/delete",
            "request": {
              "body": {
                "properties": {
                  "connected_account_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectedAccountsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ConnectedAccountsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/connected_accounts/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connected_account_id": "connected_account_id",
                },
                "response": {
                  "body": {
                    "connected_account": {
                      "account_type": "account_type",
                      "account_type_display_name": "account_type_display_name",
                      "automatically_manage_new_devices": true,
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "errors": {
                        "key": "value",
                      },
                      "user_identifier": {
                        "api_url": "api_url",
                        "email": "email",
                        "exclusive": true,
                        "phone": "phone",
                        "username": "username",
                      },
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/get",
            "request": {
              "body": "ConnectedAccountsGetRequest",
            },
            "response": {
              "docs": "OK",
              "property": "connected_account",
              "type": "ConnectedAccountsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/connected_accounts/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "connected_accounts": [
                      {
                        "account_type": "account_type",
                        "account_type_display_name": "account_type_display_name",
                        "automatically_manage_new_devices": true,
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "errors": {
                          "key": "value",
                        },
                        "warnings": {
                          "key": "value",
                        },
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/list",
            "request": {
              "body": {
                "properties": {
                  "custom_metadata_has": {
                    "docs": "Returns devices where the account's custom_metadata contains all of the provided key/value pairs.",
                    "type": "optional<map<string, ConnectedAccountsListRequestCustomMetadataHasValue>>",
                  },
                },
              },
              "headers": undefined,
              "name": "ConnectedAccountsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connected_accounts",
              "type": "ConnectedAccountsListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/connected_accounts/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "connected_account_id": "connected_account_id",
                },
                "response": {
                  "body": {
                    "connected_account": {
                      "account_type": "account_type",
                      "account_type_display_name": "account_type_display_name",
                      "automatically_manage_new_devices": true,
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "errors": {
                        "key": "value",
                      },
                      "user_identifier": {
                        "api_url": "api_url",
                        "email": "email",
                        "exclusive": true,
                        "phone": "phone",
                        "username": "username",
                      },
                      "warnings": {
                        "key": "value",
                      },
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/connected_accounts/update",
            "request": {
              "body": {
                "properties": {
                  "automatically_manage_new_devices": "optional<boolean>",
                  "connected_account_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "custom_metadata": "optional<map<string, optional<ConnectedAccountsUpdateRequestCustomMetadataValue>>>",
                },
              },
              "headers": undefined,
              "name": "ConnectedAccountsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "connected_account",
              "type": "ConnectedAccountsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ConnectedAccountsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ConnectedAccountsGetRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "ConnectedAccountsGetRequestConnectedAccountId",
            "ConnectedAccountsGetRequestEmail",
          ],
        },
        "ConnectedAccountsGetRequestConnectedAccountId": {
          "docs": undefined,
          "properties": {
            "connected_account_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "ConnectedAccountsGetRequestEmail": {
          "docs": undefined,
          "properties": {
            "email": {
              "type": "string",
              "validation": {
                "format": "email",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "ConnectedAccountsGetResponse": {
          "docs": undefined,
          "properties": {
            "connected_account": "root.ConnectedAccount",
            "ok": "boolean",
          },
        },
        "ConnectedAccountsListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "ConnectedAccountsListResponse": {
          "docs": undefined,
          "properties": {
            "connected_accounts": "list<root.ConnectedAccount>",
            "ok": "boolean",
          },
        },
        "ConnectedAccountsUpdateRequestCustomMetadataValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            {
              "type": "string",
              "validation": {
                "format": undefined,
                "maxLength": 500,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "boolean",
            "optional<string>",
          ],
        },
        "ConnectedAccountsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "connected_account": "root.ConnectedAccount",
            "ok": "boolean",
          },
        },
      },
    },
    "devices.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "auth": true,
            "display-name": "/devices/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/delete",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "DevicesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "DevicesDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/devices/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "DevicesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device",
              "type": "DevicesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/devices/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, DevicesListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<DevicesListRequestDeviceType>",
                  "device_types": "optional<list<DevicesListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<DevicesListRequestExcludeIfItem>>",
                  "include_if": "optional<list<DevicesListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<DevicesListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "DevicesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "DevicesListResponse",
            },
          },
          "list_device_providers": {
            "auth": true,
            "display-name": "/devices/list_device_providers",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device_providers": [
                      {
                        "device_provider_name": "akuvox",
                        "display_name": "display_name",
                        "image_url": "image_url",
                        "provider_categories": [
                          "stable",
                        ],
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/list_device_providers",
            "request": {
              "body": {
                "properties": {
                  "provider_category": "optional<DevicesListDeviceProvidersRequestProviderCategory>",
                },
              },
              "headers": undefined,
              "name": "DevicesListDeviceProvidersRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device_providers",
              "type": "DevicesListDeviceProvidersResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/devices/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/update",
            "request": {
              "body": {
                "properties": {
                  "custom_metadata": "optional<map<string, optional<DevicesUpdateRequestCustomMetadataValue>>>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "is_managed": {
                    "default": true,
                    "type": "optional<boolean>",
                  },
                  "name": "optional<string>",
                  "properties": "optional<DevicesUpdateRequestProperties>",
                },
              },
              "headers": undefined,
              "name": "DevicesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "DevicesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "DevicesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "DevicesGetResponse": {
          "docs": undefined,
          "properties": {
            "device": "root.Device",
            "ok": "boolean",
          },
        },
        "DevicesListDeviceProvidersRequestProviderCategory": {
          "enum": [
            "stable",
            "consumer_smartlocks",
            "thermostats",
            "noise_sensors",
            "access_control_systems",
          ],
        },
        "DevicesListDeviceProvidersResponse": {
          "docs": undefined,
          "properties": {
            "device_providers": "list<root.DeviceProvider>",
            "ok": "boolean",
          },
        },
        "DevicesListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "DevicesListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "DevicesListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "DevicesListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "DevicesListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "DevicesListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "DevicesListResponse": {
          "docs": undefined,
          "properties": {
            "devices": "list<root.Device>",
            "ok": "boolean",
          },
        },
        "DevicesUpdateRequestCustomMetadataValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            {
              "type": "string",
              "validation": {
                "format": undefined,
                "maxLength": 500,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "boolean",
            "optional<string>",
          ],
        },
        "DevicesUpdateRequestProperties": {
          "docs": undefined,
          "properties": {
            "name": "optional<string>",
          },
        },
        "DevicesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "devices/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "connect": {
            "auth": true,
            "display-name": "/devices/simulate/connect",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/simulate/connect",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateConnectRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateConnectResponse",
            },
          },
          "disconnect": {
            "auth": true,
            "display-name": "/devices/simulate/disconnect",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/simulate/disconnect",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateDisconnectRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateDisconnectResponse",
            },
          },
          "remove": {
            "auth": true,
            "display-name": "/devices/simulate/remove",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/simulate/remove",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateRemoveRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateRemoveResponse",
            },
          },
        },
      },
      "types": {
        "SimulateConnectResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "SimulateDisconnectResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "SimulateRemoveResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "devices/unmanaged.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/devices/unmanaged/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "properties": {
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "manufacturer": "manufacturer",
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/unmanaged/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UnmanagedGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device",
              "type": "UnmanagedGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/devices/unmanaged/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "properties": {
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/unmanaged/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, UnmanagedListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<UnmanagedListRequestDeviceType>",
                  "device_types": "optional<list<UnmanagedListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<UnmanagedListRequestExcludeIfItem>>",
                  "include_if": "optional<list<UnmanagedListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<UnmanagedListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "UnmanagedListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "UnmanagedListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/devices/unmanaged/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "is_managed": true,
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/devices/unmanaged/update",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "is_managed": "boolean",
                },
              },
              "headers": undefined,
              "name": "UnmanagedUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UnmanagedUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UnmanagedGetResponse": {
          "docs": undefined,
          "properties": {
            "device": "root.UnmanagedDevice",
            "ok": "boolean",
          },
        },
        "UnmanagedListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "UnmanagedListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "UnmanagedListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "UnmanagedListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "UnmanagedListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "UnmanagedListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "UnmanagedListResponse": {
          "docs": undefined,
          "properties": {
            "devices": "list<root.UnmanagedDevice>",
            "ok": "boolean",
          },
        },
        "UnmanagedUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "events.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/events/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "event": {
                      "acs_credential_id": "acs_credential_id",
                      "acs_system_id": "acs_system_id",
                      "acs_user_id": "acs_user_id",
                      "action_attempt_id": "action_attempt_id",
                      "client_session_id": "client_session_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "enrollment_automation_id": "enrollment_automation_id",
                      "event_id": "event_id",
                      "event_type": "event_type",
                      "occurred_at": "2024-01-15T09:30:00Z",
                      "workspace_id": "workspace_id",
                    },
                    "message": "message",
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/events/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "event_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "event_type": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "EventsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "event",
              "type": "EventsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/events/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "events": [
                      {
                        "acs_credential_id": "acs_credential_id",
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "action_attempt_id": "action_attempt_id",
                        "client_session_id": "client_session_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "enrollment_automation_id": "enrollment_automation_id",
                        "event_id": "event_id",
                        "event_type": "event_type",
                        "occurred_at": "2024-01-15T09:30:00Z",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/events/list",
            "request": {
              "body": {
                "properties": {
                  "access_code_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "access_code_ids": "optional<list<string>>",
                  "between": "optional<list<EventsListRequestBetweenItem>>",
                  "connected_account_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_ids": "optional<list<string>>",
                  "event_type": "optional<EventsListRequestEventType>",
                  "event_types": "optional<list<EventsListRequestEventTypesItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "since": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "EventsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "events",
              "type": "EventsListResponse",
            },
          },
        },
      },
      "types": {
        "EventsGetResponse": {
          "docs": undefined,
          "properties": {
            "event": "optional<root.Event>",
            "message": "optional<string>",
            "ok": "boolean",
          },
        },
        "EventsListRequestBetweenItem": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "datetime",
          ],
        },
        "EventsListRequestEventType": {
          "enum": [
            {
              "name": "DeviceAccessoryKeypadConnected",
              "value": "device.accessory_keypad_connected",
            },
            {
              "name": "DeviceAccessoryKeypadDisconnected",
              "value": "device.accessory_keypad_disconnected",
            },
            {
              "name": "DeviceConnected",
              "value": "device.connected",
            },
            {
              "name": "DeviceUnmanagedConnected",
              "value": "device.unmanaged.connected",
            },
            {
              "name": "DeviceDisconnected",
              "value": "device.disconnected",
            },
            {
              "name": "DeviceUnmanagedDisconnected",
              "value": "device.unmanaged.disconnected",
            },
            {
              "name": "DeviceConvertedToUnmanaged",
              "value": "device.converted_to_unmanaged",
            },
            {
              "name": "DeviceUnmanagedConvertedToManaged",
              "value": "device.unmanaged.converted_to_managed",
            },
            {
              "name": "DeviceRemoved",
              "value": "device.removed",
            },
            {
              "name": "DeviceDeleted",
              "value": "device.deleted",
            },
            {
              "name": "DeviceTampered",
              "value": "device.tampered",
            },
            {
              "name": "DeviceLowBattery",
              "value": "device.low_battery",
            },
            {
              "name": "DeviceBatteryStatusChanged",
              "value": "device.battery_status_changed",
            },
            {
              "name": "DeviceThirdPartyIntegrationDetected",
              "value": "device.third_party_integration_detected",
            },
            {
              "name": "DeviceThirdPartyIntegrationNoLongerDetected",
              "value": "device.third_party_integration_no_longer_detected",
            },
            {
              "name": "DeviceSaltoPrivacyModeActivated",
              "value": "device.salto.privacy_mode_activated",
            },
            {
              "name": "DeviceSaltoPrivacyModeDeactivated",
              "value": "device.salto.privacy_mode_deactivated",
            },
            {
              "name": "DeviceConnectionBecameFlaky",
              "value": "device.connection_became_flaky",
            },
            {
              "name": "DeviceConnectionStabilized",
              "value": "device.connection_stabilized",
            },
            {
              "name": "DeviceErrorSubscriptionRequired",
              "value": "device.error.subscription_required",
            },
            {
              "name": "DeviceErrorSubscriptionRequiredResolved",
              "value": "device.error.subscription_required.resolved",
            },
            {
              "name": "AccessCodeCreated",
              "value": "access_code.created",
            },
            {
              "name": "AccessCodeChanged",
              "value": "access_code.changed",
            },
            {
              "name": "AccessCodeScheduledOnDevice",
              "value": "access_code.scheduled_on_device",
            },
            {
              "name": "AccessCodeSetOnDevice",
              "value": "access_code.set_on_device",
            },
            {
              "name": "AccessCodeDeleted",
              "value": "access_code.deleted",
            },
            {
              "name": "AccessCodeRemovedFromDevice",
              "value": "access_code.removed_from_device",
            },
            {
              "name": "AccessCodeFailedToSetOnDevice",
              "value": "access_code.failed_to_set_on_device",
            },
            {
              "name": "AccessCodeDelayInSettingOnDevice",
              "value": "access_code.delay_in_setting_on_device",
            },
            {
              "name": "AccessCodeFailedToRemoveFromDevice",
              "value": "access_code.failed_to_remove_from_device",
            },
            {
              "name": "AccessCodeDelayInRemovingFromDevice",
              "value": "access_code.delay_in_removing_from_device",
            },
            {
              "name": "AccessCodeDeletedExternalToSeam",
              "value": "access_code.deleted_external_to_seam",
            },
            {
              "name": "AccessCodeModifiedExternalToSeam",
              "value": "access_code.modified_external_to_seam",
            },
            {
              "name": "AccessCodeUnmanagedConvertedToManaged",
              "value": "access_code.unmanaged.converted_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedFailedToConvertToManaged",
              "value": "access_code.unmanaged.failed_to_convert_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedCreated",
              "value": "access_code.unmanaged.created",
            },
            {
              "name": "AccessCodeUnmanagedRemoved",
              "value": "access_code.unmanaged.removed",
            },
            {
              "name": "LockLocked",
              "value": "lock.locked",
            },
            {
              "name": "LockUnlocked",
              "value": "lock.unlocked",
            },
            {
              "name": "PhoneDeactivated",
              "value": "phone.deactivated",
            },
            {
              "name": "ConnectedAccountConnected",
              "value": "connected_account.connected",
            },
            {
              "name": "ConnectedAccountSuccessfulLogin",
              "value": "connected_account.successful_login",
            },
            {
              "name": "ConnectedAccountCreated",
              "value": "connected_account.created",
            },
            {
              "name": "ConnectedAccountDeleted",
              "value": "connected_account.deleted",
            },
            {
              "name": "ConnectedAccountDisconnected",
              "value": "connected_account.disconnected",
            },
            {
              "name": "ConnectedAccountCompletedFirstSync",
              "value": "connected_account.completed_first_sync",
            },
            {
              "name": "ConnectedAccountCompletedFirstSyncAfterReconnection",
              "value": "connected_account.completed_first_sync_after_reconnection",
            },
            {
              "name": "NoiseSensorNoiseThresholdTriggered",
              "value": "noise_sensor.noise_threshold_triggered",
            },
            {
              "name": "AccessCodeBackupAccessCodePulled",
              "value": "access_code.backup_access_code_pulled",
            },
            {
              "name": "AcsSystemConnected",
              "value": "acs_system.connected",
            },
            {
              "name": "AcsUserDeleted",
              "value": "acs_user.deleted",
            },
            {
              "name": "AcsCredentialDeleted",
              "value": "acs_credential.deleted",
            },
            {
              "name": "EnrollmentAutomationDeleted",
              "value": "enrollment_automation.deleted",
            },
            {
              "name": "ClientSessionDeleted",
              "value": "client_session.deleted",
            },
            {
              "name": "ActionAttemptLockDoorSucceeded",
              "value": "action_attempt.lock_door.succeeded",
            },
            {
              "name": "ActionAttemptLockDoorFailed",
              "value": "action_attempt.lock_door.failed",
            },
            {
              "name": "ActionAttemptUnlockDoorSucceeded",
              "value": "action_attempt.unlock_door.succeeded",
            },
            {
              "name": "ActionAttemptUnlockDoorFailed",
              "value": "action_attempt.unlock_door.failed",
            },
          ],
        },
        "EventsListRequestEventTypesItem": {
          "enum": [
            {
              "name": "DeviceAccessoryKeypadConnected",
              "value": "device.accessory_keypad_connected",
            },
            {
              "name": "DeviceAccessoryKeypadDisconnected",
              "value": "device.accessory_keypad_disconnected",
            },
            {
              "name": "DeviceConnected",
              "value": "device.connected",
            },
            {
              "name": "DeviceUnmanagedConnected",
              "value": "device.unmanaged.connected",
            },
            {
              "name": "DeviceDisconnected",
              "value": "device.disconnected",
            },
            {
              "name": "DeviceUnmanagedDisconnected",
              "value": "device.unmanaged.disconnected",
            },
            {
              "name": "DeviceConvertedToUnmanaged",
              "value": "device.converted_to_unmanaged",
            },
            {
              "name": "DeviceUnmanagedConvertedToManaged",
              "value": "device.unmanaged.converted_to_managed",
            },
            {
              "name": "DeviceRemoved",
              "value": "device.removed",
            },
            {
              "name": "DeviceDeleted",
              "value": "device.deleted",
            },
            {
              "name": "DeviceTampered",
              "value": "device.tampered",
            },
            {
              "name": "DeviceLowBattery",
              "value": "device.low_battery",
            },
            {
              "name": "DeviceBatteryStatusChanged",
              "value": "device.battery_status_changed",
            },
            {
              "name": "DeviceThirdPartyIntegrationDetected",
              "value": "device.third_party_integration_detected",
            },
            {
              "name": "DeviceThirdPartyIntegrationNoLongerDetected",
              "value": "device.third_party_integration_no_longer_detected",
            },
            {
              "name": "DeviceSaltoPrivacyModeActivated",
              "value": "device.salto.privacy_mode_activated",
            },
            {
              "name": "DeviceSaltoPrivacyModeDeactivated",
              "value": "device.salto.privacy_mode_deactivated",
            },
            {
              "name": "DeviceConnectionBecameFlaky",
              "value": "device.connection_became_flaky",
            },
            {
              "name": "DeviceConnectionStabilized",
              "value": "device.connection_stabilized",
            },
            {
              "name": "DeviceErrorSubscriptionRequired",
              "value": "device.error.subscription_required",
            },
            {
              "name": "DeviceErrorSubscriptionRequiredResolved",
              "value": "device.error.subscription_required.resolved",
            },
            {
              "name": "AccessCodeCreated",
              "value": "access_code.created",
            },
            {
              "name": "AccessCodeChanged",
              "value": "access_code.changed",
            },
            {
              "name": "AccessCodeScheduledOnDevice",
              "value": "access_code.scheduled_on_device",
            },
            {
              "name": "AccessCodeSetOnDevice",
              "value": "access_code.set_on_device",
            },
            {
              "name": "AccessCodeDeleted",
              "value": "access_code.deleted",
            },
            {
              "name": "AccessCodeRemovedFromDevice",
              "value": "access_code.removed_from_device",
            },
            {
              "name": "AccessCodeFailedToSetOnDevice",
              "value": "access_code.failed_to_set_on_device",
            },
            {
              "name": "AccessCodeDelayInSettingOnDevice",
              "value": "access_code.delay_in_setting_on_device",
            },
            {
              "name": "AccessCodeFailedToRemoveFromDevice",
              "value": "access_code.failed_to_remove_from_device",
            },
            {
              "name": "AccessCodeDelayInRemovingFromDevice",
              "value": "access_code.delay_in_removing_from_device",
            },
            {
              "name": "AccessCodeDeletedExternalToSeam",
              "value": "access_code.deleted_external_to_seam",
            },
            {
              "name": "AccessCodeModifiedExternalToSeam",
              "value": "access_code.modified_external_to_seam",
            },
            {
              "name": "AccessCodeUnmanagedConvertedToManaged",
              "value": "access_code.unmanaged.converted_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedFailedToConvertToManaged",
              "value": "access_code.unmanaged.failed_to_convert_to_managed",
            },
            {
              "name": "AccessCodeUnmanagedCreated",
              "value": "access_code.unmanaged.created",
            },
            {
              "name": "AccessCodeUnmanagedRemoved",
              "value": "access_code.unmanaged.removed",
            },
            {
              "name": "LockLocked",
              "value": "lock.locked",
            },
            {
              "name": "LockUnlocked",
              "value": "lock.unlocked",
            },
            {
              "name": "PhoneDeactivated",
              "value": "phone.deactivated",
            },
            {
              "name": "ConnectedAccountConnected",
              "value": "connected_account.connected",
            },
            {
              "name": "ConnectedAccountSuccessfulLogin",
              "value": "connected_account.successful_login",
            },
            {
              "name": "ConnectedAccountCreated",
              "value": "connected_account.created",
            },
            {
              "name": "ConnectedAccountDeleted",
              "value": "connected_account.deleted",
            },
            {
              "name": "ConnectedAccountDisconnected",
              "value": "connected_account.disconnected",
            },
            {
              "name": "ConnectedAccountCompletedFirstSync",
              "value": "connected_account.completed_first_sync",
            },
            {
              "name": "ConnectedAccountCompletedFirstSyncAfterReconnection",
              "value": "connected_account.completed_first_sync_after_reconnection",
            },
            {
              "name": "NoiseSensorNoiseThresholdTriggered",
              "value": "noise_sensor.noise_threshold_triggered",
            },
            {
              "name": "AccessCodeBackupAccessCodePulled",
              "value": "access_code.backup_access_code_pulled",
            },
            {
              "name": "AcsSystemConnected",
              "value": "acs_system.connected",
            },
            {
              "name": "AcsUserDeleted",
              "value": "acs_user.deleted",
            },
            {
              "name": "AcsCredentialDeleted",
              "value": "acs_credential.deleted",
            },
            {
              "name": "EnrollmentAutomationDeleted",
              "value": "enrollment_automation.deleted",
            },
            {
              "name": "ClientSessionDeleted",
              "value": "client_session.deleted",
            },
            {
              "name": "ActionAttemptLockDoorSucceeded",
              "value": "action_attempt.lock_door.succeeded",
            },
            {
              "name": "ActionAttemptLockDoorFailed",
              "value": "action_attempt.lock_door.failed",
            },
            {
              "name": "ActionAttemptUnlockDoorSucceeded",
              "value": "action_attempt.unlock_door.succeeded",
            },
            {
              "name": "ActionAttemptUnlockDoorFailed",
              "value": "action_attempt.unlock_door.failed",
            },
          ],
        },
        "EventsListResponse": {
          "docs": undefined,
          "properties": {
            "events": "list<root.Event>",
            "ok": "boolean",
          },
        },
      },
    },
    "locks.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/locks/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "device": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "lock": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "LocksGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "device",
              "type": "LocksGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/locks/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "locks": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, LocksListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<LocksListRequestDeviceType>",
                  "device_types": "optional<list<LocksListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<LocksListRequestExcludeIfItem>>",
                  "include_if": "optional<list<LocksListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<LocksListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "LocksListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "LocksListResponse",
            },
          },
          "lock_door": {
            "auth": true,
            "display-name": "/locks/lock_door",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/lock_door",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "LocksLockDoorRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "LocksLockDoorResponse",
            },
          },
          "unlock_door": {
            "auth": true,
            "display-name": "/locks/unlock_door",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/locks/unlock_door",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "LocksUnlockDoorRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "LocksUnlockDoorResponse",
            },
          },
        },
      },
      "types": {
        "LocksGetResponse": {
          "docs": undefined,
          "properties": {
            "device": "root.Device",
            "lock": "root.Device",
            "ok": "boolean",
          },
        },
        "LocksListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "LocksListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "LocksListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "LocksListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "LocksListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "LocksListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "LocksListResponse": {
          "docs": undefined,
          "properties": {
            "devices": "list<root.Device>",
            "locks": "list<root.Device>",
            "ok": "boolean",
          },
        },
        "LocksLockDoorResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "LocksUnlockDoorResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
    "networks.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get": {
            "auth": true,
            "display-name": "/networks/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "network_id": "network_id",
                },
                "response": {
                  "body": {
                    "network": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "network_id": "network_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/networks/get",
            "request": {
              "body": {
                "properties": {
                  "network_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "NetworksGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "network",
              "type": "NetworksGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/networks/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "networks": [
                      {
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "network_id": "network_id",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/networks/list",
            "request": {
              "body": {
                "properties": {},
              },
              "headers": undefined,
              "name": "NetworksListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "networks",
              "type": "NetworksListResponse",
            },
          },
        },
      },
      "types": {
        "NetworksGetResponse": {
          "docs": undefined,
          "properties": {
            "network": "root.Network",
            "ok": "boolean",
          },
        },
        "NetworksListResponse": {
          "docs": undefined,
          "properties": {
            "networks": "list<root.Network>",
            "ok": "boolean",
          },
        },
      },
    },
    "noiseSensors/noiseThresholds.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "ends_daily_at": "ends_daily_at",
                  "starts_daily_at": "starts_daily_at",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "noise_threshold": {
                      "device_id": "device_id",
                      "ends_daily_at": "ends_daily_at",
                      "name": "name",
                      "noise_threshold_decibels": 1.1,
                      "noise_threshold_id": "noise_threshold_id",
                      "noise_threshold_nrs": 1.1,
                      "starts_daily_at": "starts_daily_at",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/create",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_daily_at": "string",
                  "name": "optional<string>",
                  "noise_threshold_decibels": "optional<double>",
                  "noise_threshold_nrs": "optional<double>",
                  "starts_daily_at": "string",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "noise_threshold",
              "type": "NoiseThresholdsCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "noise_threshold_id": "noise_threshold_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/delete",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "noise_threshold_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "NoiseThresholdsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "noise_threshold_id": "noise_threshold_id",
                },
                "response": {
                  "body": {
                    "noise_threshold": {
                      "device_id": "device_id",
                      "ends_daily_at": "ends_daily_at",
                      "name": "name",
                      "noise_threshold_decibels": 1.1,
                      "noise_threshold_id": "noise_threshold_id",
                      "noise_threshold_nrs": 1.1,
                      "starts_daily_at": "starts_daily_at",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/get",
            "request": {
              "body": {
                "properties": {
                  "noise_threshold_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "noise_threshold",
              "type": "NoiseThresholdsGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "noise_thresholds": [
                      {
                        "device_id": "device_id",
                        "ends_daily_at": "ends_daily_at",
                        "name": "name",
                        "noise_threshold_decibels": 1.1,
                        "noise_threshold_id": "noise_threshold_id",
                        "noise_threshold_nrs": 1.1,
                        "starts_daily_at": "starts_daily_at",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/list",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "is_programmed": "optional<boolean>",
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "noise_thresholds",
              "type": "NoiseThresholdsListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/noise_sensors/noise_thresholds/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "noise_threshold_id": "noise_threshold_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/noise_thresholds/update",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "ends_daily_at": "optional<string>",
                  "name": "optional<string>",
                  "noise_threshold_decibels": "optional<double>",
                  "noise_threshold_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "noise_threshold_nrs": "optional<double>",
                  "starts_daily_at": "optional<string>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "NoiseThresholdsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "NoiseThresholdsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "NoiseThresholdsCreateResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "noise_threshold": "root.NoiseThreshold",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsGetResponse": {
          "docs": undefined,
          "properties": {
            "noise_threshold": "root.NoiseThreshold",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsListResponse": {
          "docs": undefined,
          "properties": {
            "noise_thresholds": "list<root.NoiseThreshold>",
            "ok": "boolean",
          },
        },
        "NoiseThresholdsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
    "noiseSensors/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "trigger_noise_threshold": {
            "auth": true,
            "display-name": "/noise_sensors/simulate/trigger_noise_threshold",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/noise_sensors/simulate/trigger_noise_threshold",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateTriggerNoiseThresholdRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "SimulateTriggerNoiseThresholdResponse",
            },
          },
        },
      },
      "types": {
        "SimulateTriggerNoiseThresholdResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "phones.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "deactivate": {
            "auth": true,
            "display-name": "/phones/deactivate",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/phones/deactivate",
            "request": {
              "body": {
                "properties": {
                  "device_id": "string",
                },
              },
              "headers": undefined,
              "name": "PhonesDeactivateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "PhonesDeactivateResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/phones/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "phones": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "android_phone",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {},
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/phones/list",
            "request": {
              "body": {
                "properties": {
                  "owner_user_identity_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "PhonesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "phones",
              "type": "PhonesListResponse",
            },
          },
        },
      },
      "types": {
        "PhonesDeactivateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "PhonesListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "phones": "list<root.Phone>",
          },
        },
      },
    },
    "phones/simulate.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create_sandbox_phone": {
            "auth": true,
            "display-name": "/phones/simulate/create_sandbox_phone",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "phone": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "android_phone",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/phones/simulate/create_sandbox_phone",
            "request": {
              "body": {
                "properties": {
                  "assa_abloy_metadata": "optional<SimulateCreateSandboxPhoneRequestAssaAbloyMetadata>",
                  "custom_sdk_installation_id": "optional<string>",
                  "phone_metadata": "optional<SimulateCreateSandboxPhoneRequestPhoneMetadata>",
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "SimulateCreateSandboxPhoneRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "phone",
              "type": "SimulateCreateSandboxPhoneResponse",
            },
          },
        },
      },
      "types": {
        "SimulateCreateSandboxPhoneRequestAssaAbloyMetadata": {
          "docs": undefined,
          "properties": {
            "application_version": {
              "default": "1.0.0",
              "type": "optional<string>",
            },
            "ble_capability": {
              "default": true,
              "type": "optional<boolean>",
            },
            "hce_capability": {
              "default": false,
              "type": "optional<boolean>",
            },
            "nfc_capability": {
              "default": false,
              "type": "optional<boolean>",
            },
            "seos_applet_version": {
              "default": "1.0.0",
              "type": "optional<string>",
            },
            "seos_tsm_endpoint_id": {
              "default": 1,
              "type": "optional<double>",
            },
          },
        },
        "SimulateCreateSandboxPhoneRequestPhoneMetadata": {
          "docs": undefined,
          "properties": {
            "device_manufacturer": {
              "default": "Samsung",
              "type": "optional<string>",
            },
            "device_model": {
              "default": "Samsung Galaxy S10",
              "type": "optional<string>",
            },
            "operating_system": {
              "default": "android",
              "type": "optional<SimulateCreateSandboxPhoneRequestPhoneMetadataOperatingSystem>",
            },
            "os_version": {
              "default": "10",
              "type": "optional<string>",
            },
          },
        },
        "SimulateCreateSandboxPhoneRequestPhoneMetadataOperatingSystem": {
          "default": "android",
          "enum": [
            "android",
            "ios",
          ],
        },
        "SimulateCreateSandboxPhoneResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "phone": "root.Phone",
          },
        },
      },
    },
    "thermostats.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "cool": {
            "auth": true,
            "display-name": "/thermostats/cool",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/cool",
            "request": {
              "body": {
                "properties": {
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsCoolRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsCoolResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/thermostats/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "thermostat": {
                      "can_program_offline_access_codes": true,
                      "can_program_online_access_codes": true,
                      "can_remotely_lock": true,
                      "can_remotely_unlock": true,
                      "can_simulate_connection": true,
                      "can_simulate_disconnection": true,
                      "can_simulate_removal": true,
                      "capabilities_supported": [
                        "access_code",
                      ],
                      "connected_account_id": "connected_account_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "custom_metadata": {
                        "key": "value",
                      },
                      "device_id": "device_id",
                      "device_type": "akuvox_lock",
                      "display_name": "display_name",
                      "errors": [
                        {
                          "error_code": "error_code",
                          "message": "message",
                        },
                      ],
                      "is_managed": true,
                      "location": {
                        "location_name": "location_name",
                        "timezone": "timezone",
                      },
                      "nickname": "nickname",
                      "properties": {
                        "_experimental_supported_code_from_access_codes_lengths": [
                          1.1,
                        ],
                        "accessory_keypad": {
                          "is_connected": true,
                        },
                        "appearance": {
                          "name": "name",
                        },
                        "assa_abloy_credential_service_metadata": {
                          "endpoints": [
                            {
                              "endpoint_id": "endpoint_id",
                              "is_active": true,
                            },
                          ],
                          "has_active_endpoint": true,
                        },
                        "august_metadata": {
                          "has_keypad": true,
                          "house_name": "house_name",
                          "lock_id": "lock_id",
                          "lock_name": "lock_name",
                        },
                        "avigilon_alta_metadata": {
                          "entry_name": "entry_name",
                          "entry_relays_total_count": 1.1,
                          "org_name": "org_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                          "zone_id": 1.1,
                          "zone_name": "zone_name",
                        },
                        "battery": {
                          "level": 1.1,
                          "status": "critical",
                        },
                        "battery_level": 1.1,
                        "brivo_metadata": {
                          "device_name": "device_name",
                        },
                        "code_constraints": [
                          {
                            "constraint_type": "no_zeros",
                          },
                        ],
                        "controlbyweb_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "currently_triggering_noise_threshold_ids": [
                          "currently_triggering_noise_threshold_ids",
                        ],
                        "door_open": true,
                        "dormakaba_oracode_metadata": {
                          "door_id": 1.1,
                          "door_is_wireless": true,
                          "door_name": "door_name",
                          "site_id": 1.1,
                          "site_name": "site_name",
                        },
                        "ecobee_metadata": {
                          "device_name": "device_name",
                          "ecobee_device_id": "ecobee_device_id",
                        },
                        "four_suites_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                          "reclose_delay_in_seconds": 1.1,
                        },
                        "genie_metadata": {
                          "device_name": "device_name",
                          "door_name": "door_name",
                        },
                        "has_direct_power": true,
                        "has_native_entry_events": true,
                        "honeywell_resideo_metadata": {
                          "device_name": "device_name",
                          "honeywell_resideo_device_id": "honeywell_resideo_device_id",
                        },
                        "hubitat_metadata": {
                          "device_id": "device_id",
                          "device_label": "device_label",
                          "device_name": "device_name",
                        },
                        "igloo_metadata": {
                          "bridge_id": "bridge_id",
                          "device_id": "device_id",
                        },
                        "igloohome_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "keypad_battery": {
                          "level": 1.1,
                        },
                        "kwikset_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "model_number": "model_number",
                        },
                        "locked": true,
                        "lockly_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "manufacturer": "manufacturer",
                        "max_active_codes_supported": 1.1,
                        "minut_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                          "latest_sensor_values": {
                            "accelerometer_z": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "humidity": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "pressure": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "sound": {
                              "time": "time",
                              "value": 1.1,
                            },
                            "temperature": {
                              "time": "time",
                              "value": 1.1,
                            },
                          },
                        },
                        "model": {
                          "display_name": "display_name",
                          "manufacturer_display_name": "manufacturer_display_name",
                        },
                        "name": "name",
                        "nest_metadata": {
                          "custom_name": "custom_name",
                          "device_name": "device_name",
                          "nest_device_id": "nest_device_id",
                        },
                        "noise_level_decibels": 1.1,
                        "noiseaware_metadata": {
                          "device_id": "device_id",
                          "device_model": "indoor",
                          "device_name": "device_name",
                          "noise_level_decibel": 1.1,
                          "noise_level_nrs": 1.1,
                        },
                        "nuki_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "offline_access_codes_enabled": true,
                        "online": true,
                        "online_access_codes_enabled": true,
                        "salto_metadata": {
                          "battery_level": "battery_level",
                          "customer_reference": "customer_reference",
                          "lock_id": "lock_id",
                          "lock_type": "lock_type",
                          "locked_state": "locked_state",
                        },
                        "schlage_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "seam_bridge_metadata": {
                          "device_num": 1.1,
                          "name": "name",
                        },
                        "serial_number": "serial_number",
                        "smartthings_metadata": {
                          "device_id": "device_id",
                          "device_name": "device_name",
                        },
                        "supported_code_lengths": [
                          1.1,
                        ],
                        "supports_accessory_keypad": true,
                        "supports_backup_access_code_pool": true,
                        "supports_offline_access_codes": true,
                        "tedee_metadata": {
                          "bridge_id": 1.1,
                          "bridge_name": "bridge_name",
                          "device_id": 1.1,
                          "device_model": "device_model",
                          "device_name": "device_name",
                          "serial_number": "serial_number",
                        },
                        "ttlock_metadata": {
                          "feature_value": "feature_value",
                          "lock_alias": "lock_alias",
                          "lock_id": 1.1,
                        },
                        "two_n_metadata": {
                          "device_id": 1.1,
                          "device_name": "device_name",
                        },
                        "wyze_metadata": {
                          "device_id": "device_id",
                          "device_info_model": "device_info_model",
                          "device_name": "device_name",
                          "product_model": "product_model",
                          "product_name": "product_name",
                          "product_type": "product_type",
                        },
                      },
                      "warnings": [
                        {
                          "message": "message",
                          "warning_code": "warning_code",
                        },
                      ],
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/get",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "name": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ThermostatsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "thermostat",
              "type": "ThermostatsGetResponse",
            },
          },
          "heat": {
            "auth": true,
            "display-name": "/thermostats/heat",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/heat",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsHeatRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsHeatResponse",
            },
          },
          "heat_cool": {
            "auth": true,
            "display-name": "/thermostats/heat_cool",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/heat_cool",
            "request": {
              "body": {
                "properties": {
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsHeatCoolRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsHeatCoolResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/thermostats/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "thermostats": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/list",
            "request": {
              "body": {
                "properties": {
                  "connect_webview_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_id": {
                    "docs": "List all devices owned by this connected account",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "connected_account_ids": "optional<list<string>>",
                  "created_before": "optional<datetime>",
                  "custom_metadata_has": "optional<map<string, ThermostatsListRequestCustomMetadataHasValue>>",
                  "device_ids": "optional<list<string>>",
                  "device_type": "optional<ThermostatsListRequestDeviceType>",
                  "device_types": "optional<list<ThermostatsListRequestDeviceTypesItem>>",
                  "exclude_if": "optional<list<ThermostatsListRequestExcludeIfItem>>",
                  "include_if": "optional<list<ThermostatsListRequestIncludeIfItem>>",
                  "limit": {
                    "default": 500,
                    "type": "optional<double>",
                  },
                  "manufacturer": "optional<ThermostatsListRequestManufacturer>",
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ThermostatsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "thermostats",
              "type": "ThermostatsListResponse",
            },
          },
          "off": {
            "auth": true,
            "display-name": "/thermostats/off",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/off",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsOffRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsOffResponse",
            },
          },
          "set_fan_mode": {
            "auth": true,
            "display-name": "/thermostats/set_fan_mode",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/set_fan_mode",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "fan_mode": "optional<ThermostatsSetFanModeRequestFanMode>",
                  "fan_mode_setting": "optional<ThermostatsSetFanModeRequestFanModeSetting>",
                  "sync": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsSetFanModeRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "ThermostatsSetFanModeResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/thermostats/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "default_climate_setting": {},
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/update",
            "request": {
              "body": {
                "properties": {
                  "default_climate_setting": "ThermostatsUpdateRequestDefaultClimateSetting",
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ThermostatsUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ThermostatsUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ThermostatsCoolResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "thermostat": "root.Device",
          },
        },
        "ThermostatsHeatCoolResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsHeatResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsListRequestCustomMetadataHasValue": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "string",
            "boolean",
          ],
        },
        "ThermostatsListRequestDeviceType": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "ThermostatsListRequestDeviceTypesItem": {
          "enum": [
            "akuvox_lock",
            "august_lock",
            "brivo_access_point",
            "butterflymx_panel",
            "avigilon_alta_entry",
            "doorking_lock",
            "genie_door",
            "igloo_lock",
            "linear_lock",
            "lockly_lock",
            "kwikset_lock",
            "nuki_lock",
            "salto_lock",
            "schlage_lock",
            "seam_relay",
            "smartthings_lock",
            "wyze_lock",
            "yale_lock",
            "two_n_intercom",
            "controlbyweb_device",
            "ttlock_lock",
            "igloohome_lock",
            "hubitat_lock",
            "four_suites_door",
            "dormakaba_oracode_door",
            "tedee_lock",
            "noiseaware_activity_zone",
            "minut_sensor",
            "ecobee_thermostat",
            "nest_thermostat",
            "honeywell_resideo_thermostat",
            "ios_phone",
            "android_phone",
          ],
        },
        "ThermostatsListRequestExcludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "ThermostatsListRequestIncludeIfItem": {
          "enum": [
            "can_remotely_unlock",
            "can_remotely_lock",
            "can_program_offline_access_codes",
            "can_program_online_access_codes",
            "can_simulate_removal",
            "can_simulate_connection",
            "can_simulate_disconnection",
          ],
        },
        "ThermostatsListRequestManufacturer": {
          "enum": [
            "akuvox",
            "august",
            "avigilon_alta",
            "brivo",
            "butterflymx",
            "doorking",
            "four_suites",
            "genie",
            "igloo",
            "keywe",
            "kwikset",
            "linear",
            "lockly",
            "nuki",
            "philia",
            "salto",
            "samsung",
            "schlage",
            "seam",
            "unknown",
            "wyze",
            "yale",
            "minut",
            "two_n",
            "ttlock",
            "nest",
            "igloohome",
            "ecobee",
            "hubitat",
            "controlbyweb",
            "smartthings",
            "dormakaba_oracode",
            "tedee",
            "honeywell_resideo",
          ],
        },
        "ThermostatsListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "thermostats": "list<root.Device>",
          },
        },
        "ThermostatsOffResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsSetFanModeRequestFanMode": {
          "enum": [
            "auto",
            "on",
          ],
        },
        "ThermostatsSetFanModeRequestFanModeSetting": {
          "enum": [
            "auto",
            "on",
          ],
        },
        "ThermostatsSetFanModeResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
        "ThermostatsUpdateRequestDefaultClimateSetting": {
          "docs": undefined,
          "properties": {
            "automatic_cooling_enabled": "optional<boolean>",
            "automatic_heating_enabled": "optional<boolean>",
            "cooling_set_point_celsius": "optional<double>",
            "cooling_set_point_fahrenheit": "optional<double>",
            "heating_set_point_celsius": "optional<double>",
            "heating_set_point_fahrenheit": "optional<double>",
            "hvac_mode_setting": "optional<ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting>",
            "manual_override_allowed": "optional<boolean>",
          },
        },
        "ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting": {
          "enum": [
            "off",
            "heat",
            "cool",
            "heat_cool",
          ],
        },
        "ThermostatsUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "thermostats/climateSettingSchedules.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "schedule_ends_at": "schedule_ends_at",
                  "schedule_starts_at": "schedule_starts_at",
                },
                "response": {
                  "body": {
                    "climate_setting_schedule": {
                      "automatic_cooling_enabled": true,
                      "automatic_heating_enabled": true,
                      "climate_setting_schedule_id": "climate_setting_schedule_id",
                      "cooling_set_point_celsius": 1.1,
                      "cooling_set_point_fahrenheit": 1.1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "errors": {
                        "key": "value",
                      },
                      "heating_set_point_celsius": 1.1,
                      "heating_set_point_fahrenheit": 1.1,
                      "hvac_mode_setting": "off",
                      "manual_override_allowed": true,
                      "name": "name",
                      "schedule_ends_at": "schedule_ends_at",
                      "schedule_starts_at": "schedule_starts_at",
                      "schedule_type": "time_bound",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/create",
            "request": {
              "body": {
                "properties": {
                  "automatic_cooling_enabled": "optional<boolean>",
                  "automatic_heating_enabled": "optional<boolean>",
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "device_id": "string",
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "hvac_mode_setting": "optional<ClimateSettingSchedulesCreateRequestHvacModeSetting>",
                  "manual_override_allowed": "optional<boolean>",
                  "name": "optional<string>",
                  "schedule_ends_at": "string",
                  "schedule_starts_at": "string",
                  "schedule_type": "optional<literal<"time_bound">>",
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "climate_setting_schedule",
              "type": "ClimateSettingSchedulesCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "climate_setting_schedule_id": "climate_setting_schedule_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/delete",
            "request": {
              "body": {
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClimateSettingSchedulesDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "climate_setting_schedule": {
                      "automatic_cooling_enabled": true,
                      "automatic_heating_enabled": true,
                      "climate_setting_schedule_id": "climate_setting_schedule_id",
                      "cooling_set_point_celsius": 1.1,
                      "cooling_set_point_fahrenheit": 1.1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "errors": {
                        "key": "value",
                      },
                      "heating_set_point_celsius": 1.1,
                      "heating_set_point_fahrenheit": 1.1,
                      "hvac_mode_setting": "off",
                      "manual_override_allowed": true,
                      "name": "name",
                      "schedule_ends_at": "schedule_ends_at",
                      "schedule_starts_at": "schedule_starts_at",
                      "schedule_type": "time_bound",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/get",
            "request": {
              "body": {
                "properties": {
                  "climate_setting_schedule_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "device_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "climate_setting_schedule",
              "type": "ClimateSettingSchedulesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                },
                "response": {
                  "body": {
                    "climate_setting_schedules": [
                      {
                        "automatic_cooling_enabled": true,
                        "automatic_heating_enabled": true,
                        "climate_setting_schedule_id": "climate_setting_schedule_id",
                        "cooling_set_point_celsius": 1.1,
                        "cooling_set_point_fahrenheit": 1.1,
                        "created_at": "2024-01-15T09:30:00Z",
                        "device_id": "device_id",
                        "errors": {
                          "key": "value",
                        },
                        "heating_set_point_celsius": 1.1,
                        "heating_set_point_fahrenheit": 1.1,
                        "hvac_mode_setting": "off",
                        "manual_override_allowed": true,
                        "name": "name",
                        "schedule_ends_at": "schedule_ends_at",
                        "schedule_starts_at": "schedule_starts_at",
                        "schedule_type": "time_bound",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/list",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identifier_key": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "climate_setting_schedules",
              "type": "ClimateSettingSchedulesListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/thermostats/climate_setting_schedules/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "climate_setting_schedule_id": "climate_setting_schedule_id",
                },
                "response": {
                  "body": {
                    "climate_setting_schedule": {
                      "automatic_cooling_enabled": true,
                      "automatic_heating_enabled": true,
                      "climate_setting_schedule_id": "climate_setting_schedule_id",
                      "cooling_set_point_celsius": 1.1,
                      "cooling_set_point_fahrenheit": 1.1,
                      "created_at": "2024-01-15T09:30:00Z",
                      "device_id": "device_id",
                      "errors": {
                        "key": "value",
                      },
                      "heating_set_point_celsius": 1.1,
                      "heating_set_point_fahrenheit": 1.1,
                      "hvac_mode_setting": "off",
                      "manual_override_allowed": true,
                      "name": "name",
                      "schedule_ends_at": "schedule_ends_at",
                      "schedule_starts_at": "schedule_starts_at",
                      "schedule_type": "time_bound",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/thermostats/climate_setting_schedules/update",
            "request": {
              "body": {
                "properties": {
                  "automatic_cooling_enabled": "optional<boolean>",
                  "automatic_heating_enabled": "optional<boolean>",
                  "climate_setting_schedule_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "cooling_set_point_celsius": "optional<double>",
                  "cooling_set_point_fahrenheit": "optional<double>",
                  "heating_set_point_celsius": "optional<double>",
                  "heating_set_point_fahrenheit": "optional<double>",
                  "hvac_mode_setting": "optional<ClimateSettingSchedulesUpdateRequestHvacModeSetting>",
                  "manual_override_allowed": "optional<boolean>",
                  "name": "optional<string>",
                  "schedule_ends_at": "optional<string>",
                  "schedule_starts_at": "optional<string>",
                  "schedule_type": "optional<literal<"time_bound">>",
                },
              },
              "headers": undefined,
              "name": "ClimateSettingSchedulesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "ClimateSettingSchedulesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "ClimateSettingSchedulesCreateRequestHvacModeSetting": {
          "enum": [
            "off",
            "heat",
            "cool",
            "heat_cool",
          ],
        },
        "ClimateSettingSchedulesCreateResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedule": "root.ClimateSettingSchedule",
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesGetResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedule": "root.ClimateSettingSchedule",
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesListResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedules": "list<root.ClimateSettingSchedule>",
            "ok": "boolean",
          },
        },
        "ClimateSettingSchedulesUpdateRequestHvacModeSetting": {
          "enum": [
            "off",
            "heat",
            "cool",
            "heat_cool",
          ],
        },
        "ClimateSettingSchedulesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "climate_setting_schedule": "root.ClimateSettingSchedule",
            "ok": "boolean",
          },
        },
      },
    },
    "userIdentities.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "add_acs_user": {
            "auth": true,
            "display-name": "/user_identities/add_acs_user",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/add_acs_user",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesAddAcsUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesAddAcsUserResponse",
            },
          },
          "create": {
            "auth": true,
            "display-name": "/user_identities/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "user_identity": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email_address": "email_address",
                      "full_name": "full_name",
                      "phone_number": "phone_number",
                      "user_identity_id": "user_identity_id",
                      "user_identity_key": "user_identity_key",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/create",
            "request": {
              "body": {
                "properties": {
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "phone_number": "optional<string>",
                  "user_identity_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "user_identity",
              "type": "UserIdentitiesCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/user_identities/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/delete",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/user_identities/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "user_identity": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "display_name": "display_name",
                      "email_address": "email_address",
                      "full_name": "full_name",
                      "phone_number": "phone_number",
                      "user_identity_id": "user_identity_id",
                      "user_identity_key": "user_identity_key",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/get",
            "request": {
              "body": "UserIdentitiesGetRequest",
            },
            "response": {
              "docs": "OK",
              "property": "user_identity",
              "type": "UserIdentitiesGetResponse",
            },
          },
          "grant_access_to_device": {
            "auth": true,
            "display-name": "/user_identities/grant_access_to_device",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/grant_access_to_device",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesGrantAccessToDeviceRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesGrantAccessToDeviceResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/user_identities/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "ok": true,
                    "user_identities": [
                      {
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email_address": "email_address",
                        "full_name": "full_name",
                        "phone_number": "phone_number",
                        "user_identity_id": "user_identity_id",
                        "user_identity_key": "user_identity_key",
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list",
            "request": {
              "body": {
                "properties": {
                  "credential_manager_acs_system_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "user_identities",
              "type": "UserIdentitiesListResponse",
            },
          },
          "list_accessible_devices": {
            "auth": true,
            "display-name": "/user_identities/list_accessible_devices",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "accessible_devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "devices": [
                      {
                        "can_program_offline_access_codes": true,
                        "can_program_online_access_codes": true,
                        "can_remotely_lock": true,
                        "can_remotely_unlock": true,
                        "can_simulate_connection": true,
                        "can_simulate_disconnection": true,
                        "can_simulate_removal": true,
                        "capabilities_supported": [
                          "access_code",
                        ],
                        "connected_account_id": "connected_account_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "custom_metadata": {
                          "key": "value",
                        },
                        "device_id": "device_id",
                        "device_type": "akuvox_lock",
                        "display_name": "display_name",
                        "errors": [
                          {
                            "error_code": "error_code",
                            "message": "message",
                          },
                        ],
                        "is_managed": true,
                        "nickname": "nickname",
                        "properties": {
                          "appearance": {
                            "name": "name",
                          },
                          "model": {
                            "display_name": "display_name",
                            "manufacturer_display_name": "manufacturer_display_name",
                          },
                          "name": "name",
                          "online": true,
                        },
                        "warnings": [
                          {
                            "message": "message",
                            "warning_code": "warning_code",
                          },
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list_accessible_devices",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListAccessibleDevicesRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "devices",
              "type": "UserIdentitiesListAccessibleDevicesResponse",
            },
          },
          "list_acs_systems": {
            "auth": true,
            "display-name": "/user_identities/list_acs_systems",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "acs_systems": [
                      {
                        "acs_system_id": "acs_system_id",
                        "can_add_acs_users_to_acs_access_groups": true,
                        "can_automate_enrollment": true,
                        "can_create_acs_access_groups": true,
                        "can_remove_acs_users_from_acs_access_groups": true,
                        "connected_account_ids": [
                          "connected_account_ids",
                        ],
                        "created_at": "2024-01-15T09:30:00Z",
                        "errors": [
                          {
                            "created_at": "2024-01-15T09:30:00Z",
                            "error_code": "seam_bridge_disconnected",
                            "message": "errors",
                          },
                        ],
                        "external_type": "pti_site",
                        "external_type_display_name": "external_type_display_name",
                        "image_alt_text": "image_alt_text",
                        "image_url": "image_url",
                        "name": "name",
                        "system_type": "pti_site",
                        "system_type_display_name": "system_type_display_name",
                        "warnings": [
                          {},
                        ],
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list_acs_systems",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListAcsSystemsRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_systems",
              "type": "UserIdentitiesListAcsSystemsResponse",
            },
          },
          "list_acs_users": {
            "auth": true,
            "display-name": "/user_identities/list_acs_users",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "acs_users": [
                      {
                        "access_schedule": {
                          "ends_at": "2024-01-15T09:30:00Z",
                          "starts_at": "2024-01-15T09:30:00Z",
                        },
                        "acs_system_id": "acs_system_id",
                        "acs_user_id": "acs_user_id",
                        "created_at": "2024-01-15T09:30:00Z",
                        "display_name": "display_name",
                        "email": "email",
                        "email_address": "email_address",
                        "external_type": "pti_user",
                        "external_type_display_name": "external_type_display_name",
                        "full_name": "full_name",
                        "hid_acs_system_id": "hid_acs_system_id",
                        "is_suspended": true,
                        "phone_number": "phone_number",
                        "user_identity_email_address": "user_identity_email_address",
                        "user_identity_full_name": "user_identity_full_name",
                        "user_identity_id": "user_identity_id",
                        "user_identity_phone_number": "user_identity_phone_number",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/list_acs_users",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesListAcsUsersRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "acs_users",
              "type": "UserIdentitiesListAcsUsersResponse",
            },
          },
          "remove_acs_user": {
            "auth": true,
            "display-name": "/user_identities/remove_acs_user",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "acs_user_id": "acs_user_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/remove_acs_user",
            "request": {
              "body": {
                "properties": {
                  "acs_user_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesRemoveAcsUserRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesRemoveAcsUserResponse",
            },
          },
          "revoke_access_to_device": {
            "auth": true,
            "display-name": "/user_identities/revoke_access_to_device",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "device_id": "device_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/revoke_access_to_device",
            "request": {
              "body": {
                "properties": {
                  "device_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesRevokeAccessToDeviceRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesRevokeAccessToDeviceResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/user_identities/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/update",
            "request": {
              "body": {
                "properties": {
                  "email_address": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "full_name": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "phone_number": "optional<string>",
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_key": {
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "UserIdentitiesUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "UserIdentitiesUpdateResponse",
            },
          },
        },
      },
      "types": {
        "UserIdentitiesAddAcsUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesCreateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "user_identity": "root.UserIdentity",
          },
        },
        "UserIdentitiesDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesGetRequest": {
          "discriminated": false,
          "docs": undefined,
          "union": [
            "UserIdentitiesGetRequestUserIdentityId",
            "UserIdentitiesGetRequestUserIdentityKey",
          ],
        },
        "UserIdentitiesGetRequestUserIdentityId": {
          "docs": undefined,
          "properties": {
            "user_identity_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "UserIdentitiesGetRequestUserIdentityKey": {
          "docs": undefined,
          "properties": {
            "user_identity_key": "string",
          },
        },
        "UserIdentitiesGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "user_identity": "root.UserIdentity",
          },
        },
        "UserIdentitiesGrantAccessToDeviceResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesListAccessibleDevicesResponse": {
          "docs": undefined,
          "properties": {
            "accessible_devices": {
              "docs": "
      ---
      deprecated: use devices.
      ---
    ",
              "type": "list<root.Device>",
            },
            "devices": "list<root.Device>",
            "ok": "boolean",
          },
        },
        "UserIdentitiesListAcsSystemsResponse": {
          "docs": undefined,
          "properties": {
            "acs_systems": "list<root.AcsSystem>",
            "ok": "boolean",
          },
        },
        "UserIdentitiesListAcsUsersResponse": {
          "docs": undefined,
          "properties": {
            "acs_users": "list<root.AcsUser>",
            "ok": "boolean",
          },
        },
        "UserIdentitiesListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "user_identities": "list<root.UserIdentity>",
          },
        },
        "UserIdentitiesRemoveAcsUserResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesRevokeAccessToDeviceResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "UserIdentitiesUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "userIdentities/enrollmentAutomations.yml": {
      "imports": {
        "root": "../__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "enrollment_automation_id": "enrollment_automation_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/delete",
            "request": {
              "body": {
                "properties": {
                  "enrollment_automation_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "EnrollmentAutomationsDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "enrollment_automation_id": "enrollment_automation_id",
                },
                "response": {
                  "body": {
                    "enrollment_automation": {
                      "created_at": "2024-01-15T09:30:00Z",
                      "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                      "enrollment_automation_id": "enrollment_automation_id",
                      "user_identity_id": "user_identity_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/get",
            "request": {
              "body": {
                "properties": {
                  "enrollment_automation_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "enrollment_automation",
              "type": "EnrollmentAutomationsGetResponse",
            },
          },
          "launch": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/launch",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "enrollment_automation": {
                      "acs_credential_provisioning_automation_id": "acs_credential_provisioning_automation_id",
                      "created_at": "2024-01-15T09:30:00Z",
                      "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                      "enrollment_automation_id": "enrollment_automation_id",
                      "user_identity_id": "user_identity_id",
                      "workspace_id": "workspace_id",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/launch",
            "request": {
              "body": {
                "properties": {
                  "acs_credential_pool_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "create_credential_manager_user": "optional<boolean>",
                  "credential_manager_acs_system_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "credential_manager_acs_user_id": {
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsLaunchRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "enrollment_automation",
              "type": "EnrollmentAutomationsLaunchResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/user_identities/enrollment_automations/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "user_identity_id": "user_identity_id",
                },
                "response": {
                  "body": {
                    "enrollment_automations": [
                      {
                        "created_at": "2024-01-15T09:30:00Z",
                        "credential_manager_acs_system_id": "credential_manager_acs_system_id",
                        "enrollment_automation_id": "enrollment_automation_id",
                        "user_identity_id": "user_identity_id",
                        "workspace_id": "workspace_id",
                      },
                    ],
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/user_identities/enrollment_automations/list",
            "request": {
              "body": {
                "properties": {
                  "user_identity_id": {
                    "type": "string",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "EnrollmentAutomationsListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "enrollment_automations",
              "type": "EnrollmentAutomationsListResponse",
            },
          },
        },
      },
      "types": {
        "EnrollmentAutomationsDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "EnrollmentAutomationsGetResponse": {
          "docs": undefined,
          "properties": {
            "enrollment_automation": "root.EnrollmentAutomation",
            "ok": "boolean",
          },
        },
        "EnrollmentAutomationsLaunchResponse": {
          "docs": undefined,
          "properties": {
            "enrollment_automation": "EnrollmentAutomationsLaunchResponseEnrollmentAutomation",
            "ok": "boolean",
          },
        },
        "EnrollmentAutomationsLaunchResponseEnrollmentAutomation": {
          "docs": undefined,
          "properties": {
            "acs_credential_provisioning_automation_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "created_at": "datetime",
            "credential_manager_acs_system_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "enrollment_automation_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "user_identity_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
            "workspace_id": {
              "type": "string",
              "validation": {
                "format": "uuid",
                "maxLength": undefined,
                "minLength": undefined,
                "pattern": undefined,
              },
            },
          },
        },
        "EnrollmentAutomationsListResponse": {
          "docs": undefined,
          "properties": {
            "enrollment_automations": "list<root.EnrollmentAutomation>",
            "ok": "boolean",
          },
        },
      },
    },
    "webhooks.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/webhooks/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "url": "url",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "webhook": {
                      "event_types": [
                        "event_types",
                      ],
                      "secret": "secret",
                      "url": "url",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/create",
            "request": {
              "body": {
                "properties": {
                  "event_types": "optional<list<string>>",
                  "url": {
                    "type": "string",
                    "validation": {
                      "format": "uri",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "headers": undefined,
              "name": "WebhooksCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "webhook",
              "type": "WebhooksCreateResponse",
            },
          },
          "delete": {
            "auth": true,
            "display-name": "/webhooks/delete",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "webhook_id": "webhook_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/delete",
            "request": {
              "body": {
                "properties": {
                  "webhook_id": "string",
                },
              },
              "headers": undefined,
              "name": "WebhooksDeleteRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "WebhooksDeleteResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/webhooks/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "webhook_id": "webhook_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "webhook": {
                      "event_types": [
                        "event_types",
                      ],
                      "secret": "secret",
                      "url": "url",
                      "webhook_id": "webhook_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/get",
            "request": {
              "body": {
                "properties": {
                  "webhook_id": "string",
                },
              },
              "headers": undefined,
              "name": "WebhooksGetRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "webhook",
              "type": "WebhooksGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/webhooks/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "ok": true,
                    "webhooks": [
                      {
                        "event_types": [
                          "event_types",
                        ],
                        "secret": "secret",
                        "url": "url",
                        "webhook_id": "webhook_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/list",
            "response": {
              "docs": "OK",
              "property": "webhooks",
              "type": "WebhooksListResponse",
            },
          },
          "update": {
            "auth": true,
            "display-name": "/webhooks/update",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "event_types": [
                    "event_types",
                  ],
                  "webhook_id": "webhook_id",
                },
                "response": {
                  "body": {
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/webhooks/update",
            "request": {
              "body": {
                "properties": {
                  "event_types": "list<string>",
                  "webhook_id": "string",
                },
              },
              "headers": undefined,
              "name": "WebhooksUpdateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "WebhooksUpdateResponse",
            },
          },
        },
      },
      "types": {
        "WebhooksCreateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "webhook": "root.Webhook",
          },
        },
        "WebhooksDeleteResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
        "WebhooksGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "webhook": "root.Webhook",
          },
        },
        "WebhooksListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "webhooks": "list<root.Webhook>",
          },
        },
        "WebhooksUpdateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
          },
        },
      },
    },
    "workspaces.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "display-name": "/workspaces/create",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "name": "name",
                },
                "response": {
                  "body": {
                    "ok": true,
                    "workspace": {
                      "company_name": "company_name",
                      "connect_partner_name": "connect_partner_name",
                      "is_sandbox": true,
                      "name": "name",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/create",
            "request": {
              "body": {
                "properties": {
                  "company_name": "optional<string>",
                  "connect_partner_name": {
                    "docs": "
    ---
    deprecated: use company_name
    ---
  ",
                    "type": "optional<string>",
                  },
                  "is_sandbox": {
                    "default": false,
                    "type": "optional<boolean>",
                  },
                  "name": "string",
                  "webview_logo_shape": "optional<WorkspacesCreateRequestWebviewLogoShape>",
                  "webview_primary_button_color": "optional<string>",
                },
              },
              "headers": undefined,
              "name": "WorkspacesCreateRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "property": "workspace",
              "type": "WorkspacesCreateResponse",
            },
          },
          "get": {
            "auth": true,
            "display-name": "/workspaces/get",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "ok": true,
                    "workspace": {
                      "company_name": "company_name",
                      "connect_partner_name": "connect_partner_name",
                      "is_sandbox": true,
                      "name": "name",
                      "workspace_id": "workspace_id",
                    },
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/get",
            "response": {
              "docs": "OK",
              "property": "workspace",
              "type": "WorkspacesGetResponse",
            },
          },
          "list": {
            "auth": true,
            "display-name": "/workspaces/list",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "ok": true,
                    "workspaces": [
                      {
                        "company_name": "company_name",
                        "connect_partner_name": "connect_partner_name",
                        "is_sandbox": true,
                        "name": "name",
                        "workspace_id": "workspace_id",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/list",
            "response": {
              "docs": "OK",
              "property": "workspaces",
              "type": "WorkspacesListResponse",
            },
          },
          "reset_sandbox": {
            "auth": true,
            "display-name": "/workspaces/reset_sandbox",
            "docs": undefined,
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "response": {
                  "body": {
                    "action_attempt": {
                      "action_attempt_id": "action_attempt_id",
                      "action_type": "LOCK_DOOR",
                      "error": "error",
                      "result": "result",
                      "status": "pending",
                    },
                    "ok": true,
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/workspaces/reset_sandbox",
            "response": {
              "docs": "OK",
              "property": "action_attempt",
              "type": "WorkspacesResetSandboxResponse",
            },
          },
        },
      },
      "types": {
        "WorkspacesCreateRequestWebviewLogoShape": {
          "enum": [
            "circle",
            "square",
          ],
        },
        "WorkspacesCreateResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "workspace": "root.Workspace",
          },
        },
        "WorkspacesGetResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "workspace": "root.Workspace",
          },
        },
        "WorkspacesListResponse": {
          "docs": undefined,
          "properties": {
            "ok": "boolean",
            "workspaces": "list<root.Workspace>",
          },
        },
        "WorkspacesResetSandboxResponse": {
          "docs": undefined,
          "properties": {
            "action_attempt": "root.ActionAttempt",
            "ok": "boolean",
          },
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "BadRequestError": {
        "docs": "Bad Request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
    },
    "types": {
      "AccessCode": {
        "docs": undefined,
        "properties": {
          "access_code_id": {
            "docs": "Unique identifier for the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "code": {
            "docs": "Code used for access. Typically, a numeric or alphanumeric string.",
            "type": "optional<string>",
          },
          "common_code_key": {
            "docs": "Unique identifier for a group of access codes that share the same code.",
            "type": "optional<string>",
          },
          "created_at": {
            "docs": "Date and time at which the access code was created.",
            "type": "datetime",
          },
          "device_id": {
            "docs": "Unique identifier for the device associated with the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ends_at": {
            "docs": "Date and time after which the time-bound access code becomes inactive.",
            "type": "optional<datetime>",
          },
          "errors": "optional<unknown>",
          "is_backup": {
            "docs": "Indicates whether the access code is a backup code.",
            "type": "optional<boolean>",
          },
          "is_backup_access_code_available": {
            "docs": "Indicates whether a backup access code is available for use if the primary access code is lost or compromised.",
            "type": "boolean",
          },
          "is_external_modification_allowed": {
            "docs": "Indicates whether changes to the access code from external sources are permitted.",
            "type": "boolean",
          },
          "is_managed": {
            "docs": "Indicates whether Seam manages the access code.",
            "type": "boolean",
          },
          "is_offline_access_code": {
            "docs": "Indicates whether the access code is intended for use in offline scenarios. If "true," this code can be created on a device without a network connection.",
            "type": "boolean",
          },
          "is_one_time_use": {
            "docs": "Indicates whether the access code can only be used once. If "true," the code becomes invalid after the first use.",
            "type": "boolean",
          },
          "is_scheduled_on_device": {
            "docs": "Indicates whether the code is set on the device according to a preconfigured schedule.",
            "type": "optional<boolean>",
          },
          "is_waiting_for_code_assignment": {
            "docs": "Indicates whether the access code is waiting for a code assignment.",
            "type": "optional<boolean>",
          },
          "name": {
            "docs": "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.",
            "type": "optional<string>",
          },
          "pulled_backup_access_code_id": {
            "docs": "Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code.",
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "starts_at": {
            "docs": "Date and time at which the time-bound access code becomes active.",
            "type": "optional<datetime>",
          },
          "status": {
            "docs": "
    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
  ",
            "type": "AccessCodeStatus",
          },
          "type": {
            "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
            "type": "AccessCodeType",
          },
          "warnings": "optional<unknown>",
        },
      },
      "AccessCodeStatus": {
        "docs": "
    Current status of the access code within the operational lifecycle. Values are "setting," a transitional phase that indicates that the code is being configured or activated; "set", which indicates that the code is active and operational; "unset," which indicates a deactivated or unused state, either before activation or after deliberate deactivation; "removing," which indicates a transitional period in which the code is being deleted or made inactive; and "unknown," which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting.
  ",
        "enum": [
          "setting",
          "set",
          "unset",
          "removing",
          "unknown",
        ],
      },
      "AccessCodeType": {
        "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
        "enum": [
          "time_bound",
          "ongoing",
        ],
      },
      "AcsAccessGroup": {
        "docs": undefined,
        "properties": {
          "access_group_type": {
            "docs": "
    ---
    deprecated: use external_type
    ---
  ",
            "type": "AcsAccessGroupAccessGroupType",
          },
          "access_group_type_display_name": {
            "docs": "
    ---
    deprecated: use external_type_display_name
    ---
    ",
            "type": "string",
          },
          "acs_access_group_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": "string",
          "external_type": "AcsAccessGroupExternalType",
          "external_type_display_name": "string",
          "name": "string",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsAccessGroupAccessGroupType": {
        "docs": "
    ---
    deprecated: use external_type
    ---
  ",
        "enum": [
          "pti_unit",
          "pti_access_level",
          "salto_access_group",
          "brivo_group",
        ],
      },
      "AcsAccessGroupExternalType": {
        "enum": [
          "pti_unit",
          "pti_access_level",
          "salto_access_group",
          "brivo_group",
        ],
      },
      "AcsCredential": {
        "docs": undefined,
        "properties": {
          "access_method": "AcsCredentialAccessMethod",
          "acs_credential_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_credential_pool_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_user_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "code": "optional<string>",
          "created_at": "datetime",
          "display_name": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "ends_at": "optional<string>",
          "errors": "list<AcsCredentialErrorsItem>",
          "external_type": "optional<AcsCredentialExternalType>",
          "external_type_display_name": "optional<string>",
          "is_latest_desired_state_synced_with_provider": "optional<boolean>",
          "is_multi_phone_sync_credential": "optional<boolean>",
          "latest_desired_state_synced_with_provider_at": "optional<datetime>",
          "parent_acs_credential_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "starts_at": "optional<string>",
          "visionline_metadata": "optional<AcsCredentialVisionlineMetadata>",
          "warnings": "list<AcsCredentialWarningsItem>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsCredentialAccessMethod": {
        "enum": [
          "code",
          "card",
          "mobile_key",
        ],
      },
      "AcsCredentialErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "AcsCredentialExternalType": {
        "enum": [
          "pti_card",
          "brivo_credential",
          "hid_credential",
          "visionline_card",
        ],
      },
      "AcsCredentialPool": {
        "docs": undefined,
        "properties": {
          "acs_credential_pool_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "external_type": "literal<"hid_part_number">",
          "external_type_display_name": "string",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsCredentialProvisioningAutomation": {
        "docs": undefined,
        "properties": {
          "acs_credential_provisioning_automation_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "credential_manager_acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "user_identity_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsCredentialVisionlineMetadata": {
        "docs": undefined,
        "properties": {
          "card_function_type": "AcsCredentialVisionlineMetadataCardFunctionType",
          "common_acs_entrance_ids": "optional<list<string>>",
          "guest_acs_entrance_ids": "optional<list<string>>",
          "joiner_acs_credential_ids": "optional<list<string>>",
        },
      },
      "AcsCredentialVisionlineMetadataCardFunctionType": {
        "enum": [
          "guest",
          "staff",
        ],
      },
      "AcsCredentialWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "AcsEntrance": {
        "docs": undefined,
        "properties": {
          "acs_entrance_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": "string",
          "errors": "list<AcsEntranceErrorsItem>",
          "latch_metadata": "optional<AcsEntranceLatchMetadata>",
          "visionline_metadata": "optional<AcsEntranceVisionlineMetadata>",
        },
      },
      "AcsEntranceErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "AcsEntranceLatchMetadata": {
        "docs": undefined,
        "properties": {
          "accessibility_type": "string",
          "door_name": "string",
          "door_type": "string",
          "is_connected": "boolean",
        },
      },
      "AcsEntranceVisionlineMetadata": {
        "docs": undefined,
        "properties": {
          "door_category": "AcsEntranceVisionlineMetadataDoorCategory",
          "door_name": "string",
          "profiles": "optional<list<AcsEntranceVisionlineMetadataProfilesItem>>",
        },
      },
      "AcsEntranceVisionlineMetadataDoorCategory": {
        "enum": [
          "entrance",
          "guest",
          {
            "name": "ElevatorReader",
            "value": "elevator reader",
          },
          "common",
          {
            "name": "CommonPms",
            "value": "common (PMS)",
          },
        ],
      },
      "AcsEntranceVisionlineMetadataProfilesItem": {
        "docs": undefined,
        "properties": {
          "visionline_door_profile_id": "string",
          "visionline_door_profile_type": "AcsEntranceVisionlineMetadataProfilesItemVisionlineDoorProfileType",
        },
      },
      "AcsEntranceVisionlineMetadataProfilesItemVisionlineDoorProfileType": {
        "enum": [
          "BLE",
          "commonDoor",
          "touch",
        ],
      },
      "AcsSystem": {
        "docs": undefined,
        "properties": {
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "can_add_acs_users_to_acs_access_groups": "optional<boolean>",
          "can_automate_enrollment": "optional<boolean>",
          "can_create_acs_access_groups": "optional<boolean>",
          "can_remove_acs_users_from_acs_access_groups": "optional<boolean>",
          "connected_account_ids": "list<string>",
          "created_at": "datetime",
          "errors": "list<AcsSystemErrorsItem>",
          "external_type": "optional<AcsSystemExternalType>",
          "external_type_display_name": "optional<string>",
          "image_alt_text": "string",
          "image_url": "string",
          "name": "string",
          "system_type": {
            "docs": "
      ---
      deprecated: use external_type
      ---
      ",
            "type": "optional<AcsSystemSystemType>",
          },
          "system_type_display_name": {
            "docs": "
      ---
      deprecated: use external_type_display_name
      ---
      ",
            "type": "optional<string>",
          },
          "warnings": "list<AcsSystemWarningsItem>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsSystemErrorsItem": {
        "base-properties": {},
        "discriminant": "error_code",
        "docs": undefined,
        "union": {
          "seam_bridge_disconnected": "AcsSystemErrorsItemSeamBridgeDisconnected",
          "visionline_instance_unreachable": "AcsSystemErrorsItemVisionlineInstanceUnreachable",
        },
      },
      "AcsSystemErrorsItemSeamBridgeDisconnected": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "message": "string",
        },
      },
      "AcsSystemErrorsItemVisionlineInstanceUnreachable": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "message": "string",
        },
      },
      "AcsSystemExternalType": {
        "enum": [
          "pti_site",
          "alta_org",
          "salto_site",
          "brivo_account",
          "hid_credential_manager_organization",
          "visionline_system",
          "assa_abloy_credential_service",
          "latch_building",
        ],
      },
      "AcsSystemSystemType": {
        "docs": "
      ---
      deprecated: use external_type
      ---
      ",
        "enum": [
          "pti_site",
          "alta_org",
          "salto_site",
          "brivo_account",
          "hid_credential_manager_organization",
          "visionline_system",
          "assa_abloy_credential_service",
          "latch_building",
        ],
      },
      "AcsSystemWarningsItem": {
        "docs": undefined,
        "properties": {},
      },
      "AcsUser": {
        "docs": undefined,
        "properties": {
          "access_schedule": "optional<AcsUserAccessSchedule>",
          "acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_user_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "display_name": "string",
          "email": {
            "docs": "
    ---
    deprecated: use email_address.
    ---
    ",
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "email_address": {
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "external_type": "optional<AcsUserExternalType>",
          "external_type_display_name": "optional<string>",
          "full_name": "optional<string>",
          "hid_acs_system_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "is_suspended": "boolean",
          "phone_number": "optional<string>",
          "user_identity_email_address": "optional<string>",
          "user_identity_full_name": "optional<string>",
          "user_identity_id": "optional<string>",
          "user_identity_phone_number": "optional<string>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "AcsUserAccessSchedule": {
        "docs": undefined,
        "properties": {
          "ends_at": "datetime",
          "starts_at": "datetime",
        },
      },
      "AcsUserExternalType": {
        "enum": [
          "pti_user",
          "brivo_user",
          "hid_credential_manager_user",
          "salto_site_user",
          "latch_user",
        ],
      },
      "ActionAttempt": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          {
            "docs": "Locking door.",
            "type": "ActionAttemptZero",
          },
          {
            "docs": "Locking door succeeded.",
            "type": "ActionAttemptOne",
          },
          {
            "docs": "Locking door failed.",
            "type": "ActionAttemptTwo",
          },
          {
            "docs": "Unlocking door.",
            "type": "ActionAttemptThree",
          },
          {
            "docs": "Unlocking door succeeded.",
            "type": "ActionAttemptFour",
          },
          {
            "docs": "Unlocking door failed.",
            "type": "ActionAttemptFive",
          },
          {
            "docs": "Resetting sandbox workspace.",
            "type": "ActionAttemptSix",
          },
          {
            "docs": "Resetting sandbox workspace succeeded.",
            "type": "ActionAttemptSeven",
          },
          {
            "docs": "Resetting sandbox workspace failed.",
            "type": "ActionAttemptEight",
          },
          {
            "docs": "Setting HVAC to cool.",
            "type": "ActionAttemptNine",
          },
          {
            "docs": "Setting HVAC to cool succeeded.",
            "type": "ActionAttemptTen",
          },
          {
            "docs": "Setting HVAC to cool failed.",
            "type": "ActionAttemptEleven",
          },
          {
            "docs": "Setting HVAC to heat mode.",
            "type": "ActionAttemptTwelve",
          },
          {
            "docs": "Setting HVAC to heat mode succeeded.",
            "type": "ActionAttemptThirteen",
          },
          {
            "docs": "Setting HVAC to heat mode failed.",
            "type": "ActionAttemptFourteen",
          },
          {
            "docs": "Setting HVAC to heat-cool mode.",
            "type": "ActionAttemptFifteen",
          },
          {
            "docs": "Setting HVAC to heat-cool mode succeeded.",
            "type": "ActionAttemptSixteen",
          },
          {
            "docs": "Setting heat-cool mode failed.",
            "type": "ActionAttemptSeventeen",
          },
          {
            "docs": "Setting fan mode.",
            "type": "ActionAttemptEighteen",
          },
          {
            "docs": "Setting fan mode succeeded.",
            "type": "ActionAttemptNineteen",
          },
          {
            "docs": "Setting fan mode failed.",
            "type": "ActionAttemptTwenty",
          },
          {
            "docs": "Turning HVAC off.",
            "type": "ActionAttemptTwentyOne",
          },
          {
            "docs": "Turning HVAC off succeeded.",
            "type": "ActionAttemptTwentyTwo",
          },
          {
            "docs": "Turning HVAC off failed.",
            "type": "ActionAttemptTwentyThree",
          },
          "ActionAttemptTwentyFour",
          "ActionAttemptTwentyFive",
          "ActionAttemptTwentySix",
          "ActionAttemptTwentySeven",
          "ActionAttemptTwentyEight",
          "ActionAttemptTwentyNine",
          "ActionAttemptThirty",
          "ActionAttemptThirtyOne",
          "ActionAttemptThirtyTwo",
          "ActionAttemptThirtyThree",
          "ActionAttemptThirtyFour",
          "ActionAttemptThirtyFive",
          "ActionAttemptThirtySix",
          "ActionAttemptThirtySeven",
          "ActionAttemptThirtyEight",
          "ActionAttemptThirtyNine",
          "ActionAttemptForty",
          "ActionAttemptFortyOne",
          "ActionAttemptFortyTwo",
          "ActionAttemptFortyThree",
          "ActionAttemptActionAttemptId",
        ],
      },
      "ActionAttemptActionAttemptId": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_NOISE_THRESHOLD">",
          "error": "ActionAttemptActionAttemptIdError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptActionAttemptIdError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptEight": {
        "docs": "Resetting sandbox workspace failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"RESET_SANDBOX_WORKSPACE">",
          "error": "ActionAttemptEightError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptEightError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptEighteen": {
        "docs": "Setting fan mode.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_FAN_MODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptEleven": {
        "docs": "Setting HVAC to cool failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_COOL">",
          "error": "ActionAttemptElevenError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptElevenError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptFifteen": {
        "docs": "Setting HVAC to heat-cool mode.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT_COOL">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptFive": {
        "docs": "Unlocking door failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UNLOCK_DOOR">",
          "error": "ActionAttemptFiveError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptFiveError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptForty": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptFortyOne": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_NOISE_THRESHOLD">",
          "error": "ActionAttemptFortyOneError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptFortyOneError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptFortyThree": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptFortyTwo": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptFour": {
        "docs": "Unlocking door succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UNLOCK_DOOR">",
          "error": "optional<string>",
          "result": "ActionAttemptFourResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptFourResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptFourteen": {
        "docs": "Setting HVAC to heat mode failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT">",
          "error": "ActionAttemptFourteenError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptFourteenError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptNine": {
        "docs": "Setting HVAC to cool.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_COOL">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptNineteen": {
        "docs": "Setting fan mode succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_FAN_MODE">",
          "error": "optional<string>",
          "result": "ActionAttemptNineteenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptNineteenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptOne": {
        "docs": "Locking door succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"LOCK_DOOR">",
          "error": "optional<string>",
          "result": "ActionAttemptOneResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptOneResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptSeven": {
        "docs": "Resetting sandbox workspace succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"RESET_SANDBOX_WORKSPACE">",
          "error": "optional<string>",
          "result": "ActionAttemptSevenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptSevenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptSeventeen": {
        "docs": "Setting heat-cool mode failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT_COOL">",
          "error": "ActionAttemptSeventeenError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptSeventeenError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptSix": {
        "docs": "Resetting sandbox workspace.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"RESET_SANDBOX_WORKSPACE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptSixteen": {
        "docs": "Setting HVAC to heat-cool mode succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT_COOL">",
          "error": "optional<string>",
          "result": "ActionAttemptSixteenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptSixteenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptTen": {
        "docs": "Setting HVAC to cool succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_COOL">",
          "error": "optional<string>",
          "result": "ActionAttemptTenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptThirteen": {
        "docs": "Setting HVAC to heat mode succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT">",
          "error": "optional<string>",
          "result": "ActionAttemptThirteenResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirteenResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptThirty": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyEight": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_NOISE_THRESHOLD">",
          "error": "ActionAttemptThirtyEightError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptThirtyEightError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptThirtyFive": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_ACCESS_CODE">",
          "error": "ActionAttemptThirtyFiveError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptThirtyFiveError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptThirtyFour": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirtyNine": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyOne": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirtySeven": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptThirtySix": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_NOISE_THRESHOLD">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyThree": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UPDATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptThirtyTwo": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"DELETE_ACCESS_CODE">",
          "error": "ActionAttemptThirtyTwoError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptThirtyTwoError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptThree": {
        "docs": "Unlocking door.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"UNLOCK_DOOR">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwelve": {
        "docs": "Setting HVAC to heat mode.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_HEAT">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwenty": {
        "docs": "Setting fan mode failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_FAN_MODE">",
          "error": "ActionAttemptTwentyError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentyEight": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTwentyError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyFive": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SYNC_ACCESS_CODES">",
          "error": "optional<string>",
          "result": "optional<unknown>",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTwentyFour": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SYNC_ACCESS_CODES">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwentyNine": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_ACCESS_CODE">",
          "error": "ActionAttemptTwentyNineError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentyNineError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyOne": {
        "docs": "Turning HVAC off.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_THERMOSTAT_OFF">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwentySeven": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"CREATE_ACCESS_CODE">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ActionAttemptTwentySix": {
        "docs": undefined,
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SYNC_ACCESS_CODES">",
          "error": "ActionAttemptTwentySixError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentySixError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyThree": {
        "docs": "Turning HVAC off failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_THERMOSTAT_OFF">",
          "error": "ActionAttemptTwentyThreeError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwentyThreeError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptTwentyTwo": {
        "docs": "Turning HVAC off succeeded.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"SET_THERMOSTAT_OFF">",
          "error": "optional<string>",
          "result": "ActionAttemptTwentyTwoResult",
          "status": "literal<"success">",
        },
      },
      "ActionAttemptTwentyTwoResult": {
        "docs": undefined,
        "properties": {},
      },
      "ActionAttemptTwo": {
        "docs": "Locking door failed.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"LOCK_DOOR">",
          "error": "ActionAttemptTwoError",
          "result": "optional<string>",
          "status": "literal<"error">",
        },
      },
      "ActionAttemptTwoError": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "type": "string",
        },
      },
      "ActionAttemptZero": {
        "docs": "Locking door.",
        "properties": {
          "action_attempt_id": {
            "docs": "
    ---
    title: Action Attempt ID
    ---
    The ID of the action attempt.
  ",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_type": "literal<"LOCK_DOOR">",
          "error": "optional<string>",
          "result": "optional<string>",
          "status": "literal<"pending">",
        },
      },
      "ClientSession": {
        "docs": undefined,
        "properties": {
          "client_session_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "connect_webview_ids": "list<string>",
          "connected_account_ids": "list<string>",
          "created_at": "datetime",
          "device_count": "double",
          "token": "string",
          "user_identifier_key": "optional<string>",
          "user_identity_ids": "list<string>",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "ClimateSettingSchedule": {
        "docs": undefined,
        "properties": {
          "automatic_cooling_enabled": "optional<boolean>",
          "automatic_heating_enabled": "optional<boolean>",
          "climate_setting_schedule_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "cooling_set_point_celsius": "optional<double>",
          "cooling_set_point_fahrenheit": "optional<double>",
          "created_at": "datetime",
          "device_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "errors": "optional<unknown>",
          "heating_set_point_celsius": "optional<double>",
          "heating_set_point_fahrenheit": "optional<double>",
          "hvac_mode_setting": "optional<ClimateSettingScheduleHvacModeSetting>",
          "manual_override_allowed": "optional<boolean>",
          "name": "optional<string>",
          "schedule_ends_at": "string",
          "schedule_starts_at": "string",
          "schedule_type": "literal<"time_bound">",
        },
      },
      "ClimateSettingScheduleHvacModeSetting": {
        "enum": [
          "off",
          "heat",
          "cool",
          "heat_cool",
        ],
      },
      "ConnectWebview": {
        "docs": undefined,
        "properties": {
          "accepted_devices": {
            "docs": "
      ---
      deprecated: Unused. Will be removed.
      ---
      ",
            "type": "list<string>",
          },
          "accepted_providers": "list<string>",
          "any_device_allowed": {
            "docs": "
      ---
      deprecated: Unused. Will be removed.
      ---
      ",
            "type": "boolean",
          },
          "any_provider_allowed": "boolean",
          "authorized_at": "optional<datetime>",
          "automatically_manage_new_devices": "boolean",
          "connect_webview_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "connected_account_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "custom_metadata": "map<string, ConnectWebviewCustomMetadataValue>",
          "custom_redirect_failure_url": {
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "custom_redirect_url": {
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_selection_mode": "ConnectWebviewDeviceSelectionMode",
          "login_successful": "boolean",
          "selected_provider": "optional<string>",
          "status": "ConnectWebviewStatus",
          "url": {
            "type": "string",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "wait_for_device_creation": "boolean",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "ConnectWebviewCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "ConnectWebviewDeviceSelectionMode": {
        "enum": [
          "none",
          "single",
          "multiple",
        ],
      },
      "ConnectWebviewStatus": {
        "enum": [
          "pending",
          "failed",
          "authorized",
        ],
      },
      "ConnectedAccount": {
        "docs": undefined,
        "properties": {
          "account_type": "optional<string>",
          "account_type_display_name": "string",
          "automatically_manage_new_devices": "boolean",
          "connected_account_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "optional<datetime>",
          "custom_metadata": "map<string, ConnectedAccountCustomMetadataValue>",
          "errors": "optional<unknown>",
          "user_identifier": "optional<ConnectedAccountUserIdentifier>",
          "warnings": "optional<unknown>",
        },
      },
      "ConnectedAccountCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "ConnectedAccountUserIdentifier": {
        "docs": undefined,
        "properties": {
          "api_url": "optional<string>",
          "email": "optional<string>",
          "exclusive": "optional<boolean>",
          "phone": "optional<string>",
          "username": "optional<string>",
        },
      },
      "Device": {
        "docs": undefined,
        "properties": {
          "can_program_offline_access_codes": "optional<boolean>",
          "can_program_online_access_codes": "optional<boolean>",
          "can_remotely_lock": "optional<boolean>",
          "can_remotely_unlock": "optional<boolean>",
          "can_simulate_connection": "optional<boolean>",
          "can_simulate_disconnection": "optional<boolean>",
          "can_simulate_removal": "optional<boolean>",
          "capabilities_supported": {
            "docs": "Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health.",
            "type": "list<DeviceCapabilitiesSupportedItem>",
          },
          "connected_account_id": {
            "docs": "Unique identifier for the account associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": {
            "docs": "Date and time at which the device object was created.",
            "type": "datetime",
          },
          "custom_metadata": "map<string, DeviceCustomMetadataValue>",
          "device_id": {
            "docs": "Unique identifier for the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_type": {
            "docs": "Type of the device.",
            "type": "DeviceDeviceType",
          },
          "display_name": {
            "docs": "Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.",
            "type": "string",
          },
          "errors": {
            "docs": "Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.",
            "type": "list<DeviceErrorsItem>",
          },
          "is_managed": {
            "docs": "Indicates whether Seam manages the device.",
            "type": "boolean",
          },
          "location": {
            "docs": "Location information for the device.",
            "type": "optional<DeviceLocation>",
          },
          "nickname": {
            "docs": "Optional nickname to describe the device, settable through Seam",
            "type": "optional<string>",
          },
          "properties": {
            "docs": "Properties of the device.",
            "type": "DeviceProperties",
          },
          "warnings": {
            "docs": "Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.",
            "type": "list<DeviceWarningsItem>",
          },
          "workspace_id": {
            "docs": "Unique identifier for the Seam workspace associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "DeviceCapabilitiesSupportedItem": {
        "enum": [
          "access_code",
          "lock",
          "noise_detection",
          "thermostat",
          "battery",
          "phone",
        ],
      },
      "DeviceCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "DeviceDeviceType": {
        "docs": "Type of the device.",
        "enum": [
          "akuvox_lock",
          "august_lock",
          "brivo_access_point",
          "butterflymx_panel",
          "avigilon_alta_entry",
          "doorking_lock",
          "genie_door",
          "igloo_lock",
          "linear_lock",
          "lockly_lock",
          "kwikset_lock",
          "nuki_lock",
          "salto_lock",
          "schlage_lock",
          "seam_relay",
          "smartthings_lock",
          "wyze_lock",
          "yale_lock",
          "two_n_intercom",
          "controlbyweb_device",
          "ttlock_lock",
          "igloohome_lock",
          "hubitat_lock",
          "four_suites_door",
          "dormakaba_oracode_door",
          "tedee_lock",
          "noiseaware_activity_zone",
          "minut_sensor",
          "ecobee_thermostat",
          "nest_thermostat",
          "honeywell_resideo_thermostat",
          "ios_phone",
          "android_phone",
        ],
      },
      "DeviceErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "DeviceLocation": {
        "docs": "Location information for the device.",
        "properties": {
          "location_name": {
            "docs": "Name of the device location.",
            "type": "optional<string>",
          },
          "timezone": {
            "docs": "Time zone of the device location.",
            "type": "optional<string>",
          },
        },
      },
      "DeviceProperties": {
        "docs": "Properties of the device.",
        "properties": {
          "_experimental_supported_code_from_access_codes_lengths": "optional<list<double>>",
          "accessory_keypad": {
            "docs": "Represents the accessory keypad state.",
            "type": "optional<DevicePropertiesAccessoryKeypad>",
          },
          "appearance": "DevicePropertiesAppearance",
          "assa_abloy_credential_service_metadata": "optional<DevicePropertiesAssaAbloyCredentialServiceMetadata>",
          "august_metadata": "optional<DevicePropertiesAugustMetadata>",
          "avigilon_alta_metadata": "optional<DevicePropertiesAvigilonAltaMetadata>",
          "battery": {
            "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
            "type": "optional<DevicePropertiesBattery>",
          },
          "battery_level": {
            "docs": "Indicates the battery level of the device as a decimal value between 0 and 1, inclusive.",
            "type": "optional<double>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "brivo_metadata": "optional<DevicePropertiesBrivoMetadata>",
          "code_constraints": "optional<list<DevicePropertiesCodeConstraintsItem>>",
          "controlbyweb_metadata": "optional<DevicePropertiesControlbywebMetadata>",
          "currently_triggering_noise_threshold_ids": {
            "docs": "Array of noise threshold IDs that are currently triggering.",
            "type": "optional<list<string>>",
          },
          "door_open": "optional<boolean>",
          "dormakaba_oracode_metadata": "optional<DevicePropertiesDormakabaOracodeMetadata>",
          "ecobee_metadata": "optional<DevicePropertiesEcobeeMetadata>",
          "four_suites_metadata": "optional<DevicePropertiesFourSuitesMetadata>",
          "genie_metadata": "optional<DevicePropertiesGenieMetadata>",
          "has_direct_power": {
            "docs": "Indicates whether the device has direct power.",
            "type": "optional<boolean>",
          },
          "has_native_entry_events": "optional<boolean>",
          "honeywell_resideo_metadata": "optional<DevicePropertiesHoneywellResideoMetadata>",
          "hubitat_metadata": "optional<DevicePropertiesHubitatMetadata>",
          "igloo_metadata": "optional<DevicePropertiesIglooMetadata>",
          "igloohome_metadata": "optional<DevicePropertiesIgloohomeMetadata>",
          "image_alt_text": {
            "docs": "Alt text for the device image.",
            "type": "optional<string>",
          },
          "image_url": {
            "docs": "Image URL for the device.",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "keypad_battery": "optional<DevicePropertiesKeypadBattery>",
          "kwikset_metadata": "optional<DevicePropertiesKwiksetMetadata>",
          "locked": "optional<boolean>",
          "lockly_metadata": "optional<DevicePropertiesLocklyMetadata>",
          "manufacturer": {
            "docs": "Manufacturer of the device.",
            "type": "optional<string>",
          },
          "max_active_codes_supported": "optional<double>",
          "minut_metadata": "optional<DevicePropertiesMinutMetadata>",
          "model": "DevicePropertiesModel",
          "name": {
            "docs": "
      ---
      deprecated: use device.display_name instead
      ---
      Name of the device.
      ",
            "type": "string",
          },
          "nest_metadata": "optional<DevicePropertiesNestMetadata>",
          "noise_level_decibels": {
            "docs": "Indicates current noise level in decibels, if the device supports noise detection.",
            "type": "optional<double>",
          },
          "noiseaware_metadata": "optional<DevicePropertiesNoiseawareMetadata>",
          "nuki_metadata": "optional<DevicePropertiesNukiMetadata>",
          "offline_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use offline access codes for the device.",
            "type": "optional<boolean>",
          },
          "online": {
            "docs": "Indicates whether the device is online.",
            "type": "boolean",
          },
          "online_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use online access codes for the device.",
            "type": "optional<boolean>",
          },
          "salto_metadata": "optional<DevicePropertiesSaltoMetadata>",
          "schlage_metadata": "optional<DevicePropertiesSchlageMetadata>",
          "seam_bridge_metadata": "optional<DevicePropertiesSeamBridgeMetadata>",
          "serial_number": {
            "docs": "Serial number of the device.",
            "type": "optional<string>",
          },
          "smartthings_metadata": "optional<DevicePropertiesSmartthingsMetadata>",
          "supported_code_lengths": "optional<list<double>>",
          "supports_accessory_keypad": {
            "docs": "
      ---
      deprecated: use device.properties.model.can_connect_accessory_keypad
      ---
      ",
            "type": "optional<boolean>",
          },
          "supports_backup_access_code_pool": "optional<boolean>",
          "supports_offline_access_codes": {
            "docs": "
      ---
      deprecated: use offline_access_codes_enabled
      ---
      ",
            "type": "optional<boolean>",
          },
          "tedee_metadata": "optional<DevicePropertiesTedeeMetadata>",
          "ttlock_metadata": "optional<DevicePropertiesTtlockMetadata>",
          "two_n_metadata": "optional<DevicePropertiesTwoNMetadata>",
          "wyze_metadata": "optional<DevicePropertiesWyzeMetadata>",
        },
      },
      "DevicePropertiesAccessoryKeypad": {
        "docs": "Represents the accessory keypad state.",
        "properties": {
          "battery": {
            "docs": "Indicates if the keypad battery properties.",
            "type": "optional<DevicePropertiesAccessoryKeypadBattery>",
          },
          "is_connected": {
            "docs": "Indicates if the accessory_keypad is connected to the device.",
            "type": "boolean",
          },
        },
      },
      "DevicePropertiesAccessoryKeypadBattery": {
        "docs": "Indicates if the keypad battery properties.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
        },
      },
      "DevicePropertiesAppearance": {
        "docs": undefined,
        "properties": {
          "name": {
            "docs": "Name of the device as seen from the provider API and application, not settable through Seam.",
            "type": "string",
          },
        },
      },
      "DevicePropertiesAssaAbloyCredentialServiceMetadata": {
        "docs": undefined,
        "properties": {
          "endpoints": "list<DevicePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem>",
          "has_active_endpoint": "boolean",
        },
      },
      "DevicePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem": {
        "docs": undefined,
        "properties": {
          "endpoint_id": "string",
          "is_active": "boolean",
        },
      },
      "DevicePropertiesAugustMetadata": {
        "docs": undefined,
        "properties": {
          "has_keypad": "boolean",
          "house_id": "optional<string>",
          "house_name": "string",
          "keypad_battery_level": "optional<string>",
          "lock_id": "string",
          "lock_name": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesAvigilonAltaMetadata": {
        "docs": undefined,
        "properties": {
          "entry_name": "string",
          "entry_relays_total_count": "double",
          "org_name": "string",
          "site_id": "double",
          "site_name": "string",
          "zone_id": "double",
          "zone_name": "string",
        },
      },
      "DevicePropertiesBattery": {
        "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "status": "DevicePropertiesBatteryStatus",
        },
      },
      "DevicePropertiesBatteryStatus": {
        "enum": [
          "critical",
          "low",
          "good",
          "full",
        ],
      },
      "DevicePropertiesBrivoMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
        },
      },
      "DevicePropertiesCodeConstraintsItem": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "DevicePropertiesCodeConstraintsItemZero",
          "DevicePropertiesCodeConstraintsItemMaxLength",
        ],
      },
      "DevicePropertiesCodeConstraintsItemMaxLength": {
        "docs": undefined,
        "properties": {
          "constraint_type": "DevicePropertiesCodeConstraintsItemMaxLengthConstraintType",
          "max_length": "optional<double>",
          "min_length": "optional<double>",
        },
      },
      "DevicePropertiesCodeConstraintsItemMaxLengthConstraintType": {
        "enum": [
          "name_length",
          "name_must_be_unique",
        ],
      },
      "DevicePropertiesCodeConstraintsItemZero": {
        "docs": undefined,
        "properties": {
          "constraint_type": "DevicePropertiesCodeConstraintsItemZeroConstraintType",
        },
      },
      "DevicePropertiesCodeConstraintsItemZeroConstraintType": {
        "enum": [
          "no_zeros",
          "cannot_start_with_12",
          "no_triple_consecutive_ints",
          "cannot_specify_pin_code",
          "pin_code_matches_existing_set",
          "start_date_in_future",
          "no_ascending_or_descending_sequence",
          "at_least_three_unique_digits",
          "cannot_contain_089",
        ],
      },
      "DevicePropertiesControlbywebMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "relay_name": "optional<string>",
        },
      },
      "DevicePropertiesDormakabaOracodeMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "optional<double>",
          "door_id": "double",
          "door_is_wireless": "boolean",
          "door_name": "string",
          "iana_timezone": "optional<string>",
          "predefined_time_slots": "optional<list<DevicePropertiesDormakabaOracodeMetadataPredefinedTimeSlotsItem>>",
          "site_id": "double",
          "site_name": "string",
        },
      },
      "DevicePropertiesDormakabaOracodeMetadataPredefinedTimeSlotsItem": {
        "docs": undefined,
        "properties": {
          "check_in_time": "string",
          "check_out_time": "string",
          "dormakaba_oracode_user_level_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ext_dormakaba_oracode_user_level_prefix": "double",
          "is_24_hour": "boolean",
          "is_biweekly_mode": "boolean",
          "is_master": "boolean",
          "is_one_shot": "boolean",
          "name": "string",
          "prefix": "double",
        },
      },
      "DevicePropertiesEcobeeMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
          "ecobee_device_id": "string",
        },
      },
      "DevicePropertiesFourSuitesMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "double",
          "device_name": "string",
          "reclose_delay_in_seconds": "double",
        },
      },
      "DevicePropertiesGenieMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
          "door_name": "string",
        },
      },
      "DevicePropertiesHoneywellResideoMetadata": {
        "docs": undefined,
        "properties": {
          "device_name": "string",
          "honeywell_resideo_device_id": "string",
        },
      },
      "DevicePropertiesHubitatMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_label": "string",
          "device_name": "string",
        },
      },
      "DevicePropertiesIglooMetadata": {
        "docs": undefined,
        "properties": {
          "bridge_id": "string",
          "device_id": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesIgloohomeMetadata": {
        "docs": undefined,
        "properties": {
          "bridge_id": "optional<string>",
          "bridge_name": "optional<string>",
          "device_id": "string",
          "device_name": "string",
          "keypad_id": "optional<string>",
        },
      },
      "DevicePropertiesKeypadBattery": {
        "docs": undefined,
        "properties": {
          "level": "double",
        },
      },
      "DevicePropertiesKwiksetMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "model_number": "string",
        },
      },
      "DevicePropertiesLocklyMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesMinutMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "latest_sensor_values": "DevicePropertiesMinutMetadataLatestSensorValues",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValues": {
        "docs": undefined,
        "properties": {
          "accelerometer_z": "DevicePropertiesMinutMetadataLatestSensorValuesAccelerometerZ",
          "humidity": "DevicePropertiesMinutMetadataLatestSensorValuesHumidity",
          "pressure": "DevicePropertiesMinutMetadataLatestSensorValuesPressure",
          "sound": "DevicePropertiesMinutMetadataLatestSensorValuesSound",
          "temperature": "DevicePropertiesMinutMetadataLatestSensorValuesTemperature",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesAccelerometerZ": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesHumidity": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesPressure": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesSound": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesMinutMetadataLatestSensorValuesTemperature": {
        "docs": undefined,
        "properties": {
          "time": "string",
          "value": "double",
        },
      },
      "DevicePropertiesModel": {
        "docs": undefined,
        "properties": {
          "accessory_keypad_supported": {
            "docs": "
      ---
      deprecated: use device.properties.model.can_connect_accessory_keypad
      ---
      ",
            "type": "optional<boolean>",
          },
          "can_connect_accessory_keypad": {
            "docs": "Indicates whether the device can connect a accessory keypad.",
            "type": "optional<boolean>",
          },
          "display_name": {
            "docs": "Display name of the device model.",
            "type": "string",
          },
          "has_built_in_keypad": {
            "docs": "Indicates whether the device has a built in accessory keypad.",
            "type": "optional<boolean>",
          },
          "manufacturer_display_name": {
            "docs": "Display name that corresponds to the manufacturer-specific terminology for the device.",
            "type": "string",
          },
          "offline_access_codes_supported": {
            "docs": "Indicates whether the device supports offline access codes.",
            "type": "optional<boolean>",
          },
          "online_access_codes_supported": {
            "docs": "Indicates whether the device supports online access codes.",
            "type": "optional<boolean>",
          },
        },
      },
      "DevicePropertiesNestMetadata": {
        "docs": undefined,
        "properties": {
          "custom_name": "string",
          "device_name": "string",
          "nest_device_id": "string",
        },
      },
      "DevicePropertiesNoiseawareMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_model": "DevicePropertiesNoiseawareMetadataDeviceModel",
          "device_name": "string",
          "noise_level_decibel": "double",
          "noise_level_nrs": "double",
        },
      },
      "DevicePropertiesNoiseawareMetadataDeviceModel": {
        "enum": [
          "indoor",
          "outdoor",
        ],
      },
      "DevicePropertiesNukiMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "keypad_2_paired": "optional<boolean>",
          "keypad_battery_critical": "optional<boolean>",
          "keypad_paired": "optional<boolean>",
        },
      },
      "DevicePropertiesSaltoMetadata": {
        "docs": undefined,
        "properties": {
          "battery_level": "string",
          "customer_reference": "string",
          "lock_id": "string",
          "lock_type": "string",
          "locked_state": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesSchlageMetadata": {
        "docs": undefined,
        "properties": {
          "access_code_length": "optional<double>",
          "device_id": "string",
          "device_name": "string",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesSeamBridgeMetadata": {
        "docs": undefined,
        "properties": {
          "device_num": "double",
          "name": "string",
          "unlock_method": "optional<DevicePropertiesSeamBridgeMetadataUnlockMethod>",
        },
      },
      "DevicePropertiesSeamBridgeMetadataUnlockMethod": {
        "enum": [
          "bridge",
          "doorking",
        ],
      },
      "DevicePropertiesSmartthingsMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_name": "string",
          "location_id": "optional<string>",
          "model": "optional<string>",
        },
      },
      "DevicePropertiesTedeeMetadata": {
        "docs": undefined,
        "properties": {
          "bridge_id": "double",
          "bridge_name": "string",
          "device_id": "double",
          "device_model": "string",
          "device_name": "string",
          "keypad_id": "optional<double>",
          "serial_number": "string",
        },
      },
      "DevicePropertiesTtlockMetadata": {
        "docs": undefined,
        "properties": {
          "feature_value": "string",
          "lock_alias": "string",
          "lock_id": "double",
        },
      },
      "DevicePropertiesTwoNMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "double",
          "device_name": "string",
        },
      },
      "DevicePropertiesWyzeMetadata": {
        "docs": undefined,
        "properties": {
          "device_id": "string",
          "device_info_model": "string",
          "device_name": "string",
          "keypad_uuid": "optional<string>",
          "locker_status_hardlock": "optional<double>",
          "product_model": "string",
          "product_name": "string",
          "product_type": "string",
        },
      },
      "DeviceProvider": {
        "docs": undefined,
        "properties": {
          "device_provider_name": "DeviceProviderDeviceProviderName",
          "display_name": "string",
          "image_url": "string",
          "provider_categories": "list<DeviceProviderProviderCategoriesItem>",
        },
      },
      "DeviceProviderDeviceProviderName": {
        "enum": [
          "akuvox",
          "august",
          "avigilon_alta",
          "brivo",
          "butterflymx",
          "schlage",
          "smartthings",
          "yale",
          "genie",
          "doorking",
          "salto",
          "lockly",
          "ttlock",
          "linear",
          "noiseaware",
          "nuki",
          "seam_relay_admin",
          "igloo",
          "kwikset",
          "minut",
          "my_2n",
          "controlbyweb",
          "nest",
          "igloohome",
          "ecobee",
          "hubitat",
          "four_suites",
          "dormakaba_oracode",
          "pti",
          "wyze",
          "seam_passport",
          "visionline",
          "assa_abloy_credential_service",
          "seam_bridge",
          "tedee",
          "honeywell_resideo",
          "latch",
        ],
      },
      "DeviceProviderProviderCategoriesItem": {
        "enum": [
          "stable",
          "consumer_smartlocks",
          "thermostats",
          "noise_sensors",
          "access_control_systems",
        ],
      },
      "DeviceWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "EnrollmentAutomation": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "credential_manager_acs_system_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "enrollment_automation_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "user_identity_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "Event": {
        "docs": undefined,
        "properties": {
          "acs_credential_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_system_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "acs_user_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "action_attempt_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "client_session_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": "datetime",
          "device_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "enrollment_automation_id": {
            "type": "optional<string>",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "event_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "event_type": "string",
          "occurred_at": "datetime",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "Network": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "display_name": "string",
          "network_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "NoiseThreshold": {
        "docs": undefined,
        "properties": {
          "device_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ends_daily_at": "string",
          "name": "string",
          "noise_threshold_decibels": "double",
          "noise_threshold_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "noise_threshold_nrs": "optional<double>",
          "starts_daily_at": "string",
        },
      },
      "Phone": {
        "docs": undefined,
        "properties": {
          "can_program_offline_access_codes": "optional<boolean>",
          "can_program_online_access_codes": "optional<boolean>",
          "can_remotely_lock": "optional<boolean>",
          "can_remotely_unlock": "optional<boolean>",
          "can_simulate_connection": "optional<boolean>",
          "can_simulate_disconnection": "optional<boolean>",
          "can_simulate_removal": "optional<boolean>",
          "capabilities_supported": {
            "docs": "Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health.",
            "type": "list<PhoneCapabilitiesSupportedItem>",
          },
          "created_at": {
            "docs": "Date and time at which the device object was created.",
            "type": "datetime",
          },
          "custom_metadata": "map<string, PhoneCustomMetadataValue>",
          "device_id": {
            "docs": "Unique identifier for the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_type": "PhoneDeviceType",
          "display_name": {
            "docs": "Display name of the device, defaults to nickname (if it is set) or properties.appearance.name otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.",
            "type": "string",
          },
          "errors": {
            "docs": "Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.",
            "type": "list<PhoneErrorsItem>",
          },
          "is_managed": {
            "docs": "Indicates whether Seam manages the device.",
            "type": "boolean",
          },
          "location": {
            "docs": "Location information for the device.",
            "type": "optional<PhoneLocation>",
          },
          "nickname": {
            "docs": "Optional nickname to describe the device, settable through Seam",
            "type": "optional<string>",
          },
          "properties": "PhoneProperties",
          "warnings": {
            "docs": "Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.",
            "type": "list<PhoneWarningsItem>",
          },
          "workspace_id": {
            "docs": "Unique identifier for the Seam workspace associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "PhoneCapabilitiesSupportedItem": {
        "enum": [
          "access_code",
          "lock",
          "noise_detection",
          "thermostat",
          "battery",
          "phone",
        ],
      },
      "PhoneCustomMetadataValue": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "string",
          "boolean",
        ],
      },
      "PhoneDeviceType": {
        "enum": [
          "android_phone",
          "ios_phone",
        ],
      },
      "PhoneErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "PhoneLocation": {
        "docs": "Location information for the device.",
        "properties": {
          "location_name": {
            "docs": "Name of the device location.",
            "type": "optional<string>",
          },
          "timezone": {
            "docs": "Time zone of the device location.",
            "type": "optional<string>",
          },
        },
      },
      "PhoneProperties": {
        "docs": undefined,
        "properties": {
          "assa_abloy_credential_service_metadata": "optional<PhonePropertiesAssaAbloyCredentialServiceMetadata>",
        },
      },
      "PhonePropertiesAssaAbloyCredentialServiceMetadata": {
        "docs": undefined,
        "properties": {
          "endpoints": "list<PhonePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem>",
          "has_active_endpoint": "boolean",
        },
      },
      "PhonePropertiesAssaAbloyCredentialServiceMetadataEndpointsItem": {
        "docs": undefined,
        "properties": {
          "endpoint_id": "string",
          "is_active": "boolean",
        },
      },
      "PhoneWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "ServiceHealth": {
        "docs": undefined,
        "properties": {
          "description": "string",
          "service": "string",
          "status": "ServiceHealthStatus",
        },
      },
      "ServiceHealthStatus": {
        "enum": [
          "healthy",
          "degraded",
          "down",
        ],
      },
      "UnmanagedAccessCode": {
        "docs": undefined,
        "properties": {
          "access_code_id": {
            "docs": "Unique identifier for the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "code": {
            "docs": "Code used for access. Typically, a numeric or alphanumeric string.",
            "type": "optional<string>",
          },
          "created_at": {
            "docs": "Date and time at which the access code was created.",
            "type": "datetime",
          },
          "device_id": {
            "docs": "Unique identifier for the device associated with the access code.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "ends_at": {
            "docs": "Date and time after which the time-bound access code becomes inactive.",
            "type": "optional<datetime>",
          },
          "errors": "optional<unknown>",
          "is_managed": "boolean",
          "name": {
            "docs": "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes.",
            "type": "optional<string>",
          },
          "starts_at": {
            "docs": "Date and time at which the time-bound access code becomes active.",
            "type": "optional<datetime>",
          },
          "status": "literal<"set">",
          "type": {
            "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
            "type": "UnmanagedAccessCodeType",
          },
          "warnings": "optional<unknown>",
        },
      },
      "UnmanagedAccessCodeType": {
        "docs": "Nature of the access code. Values are "ongoing" for access codes that are active continuously until deactivated manually or "time_bound" for access codes that have a specific duration.",
        "enum": [
          "time_bound",
          "ongoing",
        ],
      },
      "UnmanagedDevice": {
        "docs": undefined,
        "properties": {
          "can_program_offline_access_codes": "optional<boolean>",
          "can_program_online_access_codes": "optional<boolean>",
          "can_remotely_lock": "optional<boolean>",
          "can_remotely_unlock": "optional<boolean>",
          "can_simulate_connection": "optional<boolean>",
          "can_simulate_disconnection": "optional<boolean>",
          "can_simulate_removal": "optional<boolean>",
          "capabilities_supported": {
            "docs": "Collection of capabilities that the device supports when connected to Seam. Values are "access_code," which indicates that the device can manage and utilize digital PIN codes for secure access; "lock," which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; "noise_detection," which indicates that the device supports monitoring and responding to ambient noise levels; "thermostat," which indicates that the device can regulate and adjust indoor temperatures; and "battery," which indicates that the device can manage battery life and health.",
            "type": "list<UnmanagedDeviceCapabilitiesSupportedItem>",
          },
          "connected_account_id": {
            "docs": "Unique identifier for the account associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "created_at": {
            "docs": "Date and time at which the device object was created.",
            "type": "datetime",
          },
          "device_id": {
            "docs": "Unique identifier for the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "device_type": {
            "docs": "Type of the device.",
            "type": "UnmanagedDeviceDeviceType",
          },
          "errors": {
            "docs": "Array of errors associated with the device. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.",
            "type": "list<UnmanagedDeviceErrorsItem>",
          },
          "is_managed": "boolean",
          "properties": "UnmanagedDeviceProperties",
          "warnings": {
            "docs": "Array of warnings associated with the device. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.",
            "type": "list<UnmanagedDeviceWarningsItem>",
          },
          "workspace_id": {
            "docs": "Unique identifier for the Seam workspace associated with the device.",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "UnmanagedDeviceCapabilitiesSupportedItem": {
        "enum": [
          "access_code",
          "lock",
          "noise_detection",
          "thermostat",
          "battery",
          "phone",
        ],
      },
      "UnmanagedDeviceDeviceType": {
        "docs": "Type of the device.",
        "enum": [
          "akuvox_lock",
          "august_lock",
          "brivo_access_point",
          "butterflymx_panel",
          "avigilon_alta_entry",
          "doorking_lock",
          "genie_door",
          "igloo_lock",
          "linear_lock",
          "lockly_lock",
          "kwikset_lock",
          "nuki_lock",
          "salto_lock",
          "schlage_lock",
          "seam_relay",
          "smartthings_lock",
          "wyze_lock",
          "yale_lock",
          "two_n_intercom",
          "controlbyweb_device",
          "ttlock_lock",
          "igloohome_lock",
          "hubitat_lock",
          "four_suites_door",
          "dormakaba_oracode_door",
          "tedee_lock",
          "noiseaware_activity_zone",
          "minut_sensor",
          "ecobee_thermostat",
          "nest_thermostat",
          "honeywell_resideo_thermostat",
          "ios_phone",
          "android_phone",
        ],
      },
      "UnmanagedDeviceErrorsItem": {
        "docs": undefined,
        "properties": {
          "error_code": "string",
          "message": "string",
        },
      },
      "UnmanagedDeviceProperties": {
        "docs": undefined,
        "properties": {
          "accessory_keypad": {
            "docs": "Represents the accessory keypad state.",
            "type": "optional<UnmanagedDevicePropertiesAccessoryKeypad>",
          },
          "battery": {
            "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
            "type": "optional<UnmanagedDevicePropertiesBattery>",
          },
          "battery_level": {
            "docs": "Indicates the battery level of the device as a decimal value between 0 and 1, inclusive.",
            "type": "optional<double>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "image_alt_text": {
            "docs": "Alt text for the device image.",
            "type": "optional<string>",
          },
          "image_url": {
            "docs": "Image URL for the device.",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "manufacturer": {
            "docs": "Manufacturer of the device.",
            "type": "optional<string>",
          },
          "model": "UnmanagedDevicePropertiesModel",
          "name": {
            "docs": "
      ---
      deprecated: use device.display_name instead
      ---
      Name of the device.
      ",
            "type": "string",
          },
          "offline_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use offline access codes for the device.",
            "type": "optional<boolean>",
          },
          "online": {
            "docs": "Indicates whether the device is online.",
            "type": "boolean",
          },
          "online_access_codes_enabled": {
            "docs": "Indicates whether it is currently possible to use online access codes for the device.",
            "type": "optional<boolean>",
          },
        },
      },
      "UnmanagedDevicePropertiesAccessoryKeypad": {
        "docs": "Represents the accessory keypad state.",
        "properties": {
          "battery": {
            "docs": "Indicates if the keypad battery properties.",
            "type": "optional<UnmanagedDevicePropertiesAccessoryKeypadBattery>",
          },
          "is_connected": {
            "docs": "Indicates if the accessory_keypad is connected to the device.",
            "type": "boolean",
          },
        },
      },
      "UnmanagedDevicePropertiesAccessoryKeypadBattery": {
        "docs": "Indicates if the keypad battery properties.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
        },
      },
      "UnmanagedDevicePropertiesBattery": {
        "docs": "Represents the current status of the battery charge level. Values are "critical," which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; "low," which signifies that the battery is under the preferred threshold and should be charged soon; "good," which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and "full," which represents a battery that is fully charged, providing the maximum duration of usage.",
        "properties": {
          "level": {
            "type": "double",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1,
              "min": 0,
              "multipleOf": undefined,
            },
          },
          "status": "UnmanagedDevicePropertiesBatteryStatus",
        },
      },
      "UnmanagedDevicePropertiesBatteryStatus": {
        "enum": [
          "critical",
          "low",
          "good",
          "full",
        ],
      },
      "UnmanagedDevicePropertiesModel": {
        "docs": undefined,
        "properties": {
          "accessory_keypad_supported": {
            "docs": "
      ---
      deprecated: use device.properties.model.can_connect_accessory_keypad
      ---
      ",
            "type": "optional<boolean>",
          },
          "can_connect_accessory_keypad": {
            "docs": "Indicates whether the device can connect a accessory keypad.",
            "type": "optional<boolean>",
          },
          "display_name": {
            "docs": "Display name of the device model.",
            "type": "string",
          },
          "has_built_in_keypad": {
            "docs": "Indicates whether the device has a built in accessory keypad.",
            "type": "optional<boolean>",
          },
          "manufacturer_display_name": {
            "docs": "Display name that corresponds to the manufacturer-specific terminology for the device.",
            "type": "string",
          },
          "offline_access_codes_supported": {
            "docs": "Indicates whether the device supports offline access codes.",
            "type": "optional<boolean>",
          },
          "online_access_codes_supported": {
            "docs": "Indicates whether the device supports online access codes.",
            "type": "optional<boolean>",
          },
        },
      },
      "UnmanagedDeviceWarningsItem": {
        "docs": undefined,
        "properties": {
          "message": "string",
          "warning_code": "string",
        },
      },
      "UserIdentity": {
        "docs": undefined,
        "properties": {
          "created_at": "datetime",
          "display_name": {
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "email_address": {
            "type": "optional<string>",
            "validation": {
              "format": "email",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "full_name": {
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "phone_number": "optional<string>",
          "user_identity_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "user_identity_key": {
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": undefined,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
      "Webhook": {
        "docs": undefined,
        "properties": {
          "event_types": "optional<list<string>>",
          "secret": "optional<string>",
          "url": "string",
          "webhook_id": "string",
        },
      },
      "Workspace": {
        "docs": undefined,
        "properties": {
          "company_name": "string",
          "connect_partner_name": {
            "docs": "
    ---
    deprecated: use company_name
    ---
  ",
            "type": "optional<string>",
          },
          "is_sandbox": "boolean",
          "name": "string",
          "workspace_id": {
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "BearerAuthScheme",
    "auth-schemes": {
      "BearerAuthScheme": {
        "scheme": "bearer",
      },
    },
    "default-environment": "Default",
    "display-name": "Seam Connect",
    "environments": {
      "Default": "https://connect.getseam.com",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "headers": {
      "client-session-token": {
        "env": undefined,
        "name": "clientSessionToken",
        "type": "string",
      },
      "seam-client-session-token": {
        "env": undefined,
        "name": "seamClientSessionToken",
        "type": "string",
      },
      "seam-workspace": {
        "env": undefined,
        "name": "seamWorkspace",
        "type": "string",
      },
    },
    "name": "api",
  },
}
`;
