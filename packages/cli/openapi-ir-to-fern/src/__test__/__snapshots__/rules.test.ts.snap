// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rules rules docs 1`] = `
{
  "definitionFiles": {},
  "packageMarkerFile": {
    "service": {
      "auth": false,
      "base-path": "",
      "endpoints": {
        "defaultAndValidationRules": {
          "auth": false,
          "display-name": "Default and validation rules",
          "docs": undefined,
          "examples": [
            {
              "response": {
                "body": {
                  "age": 1,
                  "id": 1,
                  "name": "name",
                  "value": 1.1,
                },
              },
            },
          ],
          "method": "GET",
          "pagination": undefined,
          "path": "/example",
          "response": {
            "docs": "Successful response",
            "type": "GetExampleResponse",
          },
        },
      },
    },
    "types": {
      "GetExampleResponse": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "Schema",
          "GetExampleResponseMessage",
        ],
      },
      "GetExampleResponseMessage": {
        "docs": undefined,
        "properties": {
          "message": "optional<string>",
        },
      },
      "Schema": {
        "docs": undefined,
        "properties": {
          "age": {
            "default": 50,
            "docs": "The age of the type.",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": false,
              "exclusiveMin": true,
              "max": undefined,
              "min": undefined,
              "multipleOf": 10,
            },
          },
          "id": {
            "default": 50,
            "docs": "The unique ID of the type.",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": false,
              "exclusiveMin": true,
              "max": 100,
              "min": 10,
              "multipleOf": 10,
            },
          },
          "name": {
            "default": "type",
            "docs": "The unique name of the type.",
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": 10,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9]*$",
            },
          },
          "value": {
            "default": 1.1,
            "docs": "The value of the type.",
            "type": "optional<double>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 2.2,
              "min": 1.1,
              "multipleOf": 1.1,
            },
          },
        },
      },
      "String": {
        "type": "string",
        "validation": {
          "format": undefined,
          "maxLength": 10,
          "minLength": 3,
          "pattern": "^[a-zA-Z0-9]*$",
        },
      },
    },
  },
  "rootApiFile": {
    "display-name": "Sample API",
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;

exports[`rules rules simple 1`] = `
{
  "definitionFiles": {},
  "packageMarkerFile": {
    "service": {
      "auth": false,
      "base-path": "",
      "endpoints": {
        "defaultAndValidationRules": {
          "auth": false,
          "display-name": "Default and validation rules",
          "docs": undefined,
          "examples": [
            {
              "response": {
                "body": {
                  "age": 1,
                  "id": 1,
                  "name": "name",
                  "value": 1.1,
                },
              },
            },
          ],
          "method": "GET",
          "pagination": undefined,
          "path": "/example",
          "response": {
            "docs": "Successful response",
            "type": "GetExampleResponse",
          },
        },
      },
    },
    "types": {
      "GetExampleResponse": {
        "discriminated": false,
        "docs": undefined,
        "union": [
          "Schema",
          "GetExampleResponseMessage",
        ],
      },
      "GetExampleResponseMessage": {
        "docs": undefined,
        "properties": {
          "message": "optional<string>",
        },
      },
      "Schema": {
        "docs": undefined,
        "properties": {
          "age": {
            "default": 50,
            "docs": "The age of the type.",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": false,
              "exclusiveMin": true,
              "max": undefined,
              "min": undefined,
              "multipleOf": 10,
            },
          },
          "id": {
            "default": 50,
            "docs": "The unique ID of the type.",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": false,
              "exclusiveMin": true,
              "max": 100,
              "min": 10,
              "multipleOf": 10,
            },
          },
          "name": {
            "default": "type",
            "docs": "The unique name of the type.",
            "type": "optional<string>",
            "validation": {
              "format": undefined,
              "maxLength": 10,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9]*$",
            },
          },
          "value": {
            "default": 1.1,
            "docs": "The value of the type.",
            "type": "optional<double>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 2.2,
              "min": 1.1,
              "multipleOf": 1.1,
            },
          },
        },
      },
      "String": {
        "type": "string",
        "validation": {
          "format": undefined,
          "maxLength": 10,
          "minLength": 3,
          "pattern": "^[a-zA-Z0-9]*$",
        },
      },
    },
  },
  "rootApiFile": {
    "display-name": "Sample API",
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;
